{"version":3,"sources":["redux/selectors.js","utils/event.js","utils/ticker/index.js","utils/consts.js","utils/random.js","utils/quest/index.js","redux/reducer.js","components/city/city-menu.js","components/city/city-overview.js","components/guild/menu.js","components/guild/stats.js","components/guild/overview.js","utils/renderStats.js","utils/styles.js","components/guild/members/index.js","components/guild/index.js","components/market/index.js","components/tavern/index.js","components/city/index.js","utils/createMember.js","utils/getRandomName.js","components/world.js","utils/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["getTicker","state","ticker","getGuildDefaultMenu","guild","selectedItem","getActiveEvents","activeEvents","createEvent","start","end","name","description","type","startHandler","endHandler","EVENT_TYPES","computeDayEvents","todayEvents","events","filter","event","isToday","date","year","month","day","getTimeInFuture","startTime","difference","getTimeFromHours","getTotalHours","getCurrentTime","hour","time","hours","Math","floor","rescheduleEvent","startDate","endDate","advanceStage","dispatch","currentStage","TimeOfTheDay","NIGHT","callADay","MORNING","AFTERNOON","EVENING","getNextTime","callAYear","callAMonth","tick","isPaused","stats","ticks","stageProgress","forEach","push","splice","indexOf","checkEvents","MONTHS","initialize","totalEvents","festivityOne","console","log","festivityTwo","getRandomInt","min","max","round","random","getRandomColor","toString","lastId","createQuest","quest","id","steps","reward","questValue","active","completed","assignee","createStepTravelFor","createStepQuestObjective","QUEST_TYPES","GO_FETCH","generateRandomQuestData","store","currentTime","payload","questType","executeStep","reducer","action","computedAction","includes","update","$set","stageSpeed","gold","memberIndex","members","updatedMember","$splice","$push","level","tavern","recruits","city","quests","startQuest","shift","length","completeQuest","advanceQuest","cityMenu","className","onSelect","key","theme","mode","defaultSelectedKeys","Item","CityOverview","map","GuildMenu","defaultItem","GuildStats","data","value","orientation","size","bordered","dataSource","renderItem","item","Overview","onClick","getStatColor","stat","computedStat","renderStats","member","Object","keys","statName","computedStats","Text","sumStats","reduce","acc","health","renderData","cardStyle","width","float","margin","Typography","Panel","Collapse","Members","style","title","extra","height","background","color","direction","fontSize","cursor","exp","task","ghost","marginLeft","header","Header","Layout","Content","renderContent","Guild","padding","overflow","Market","Title","Tavern","defaultActiveKey","cost","canHire","disabled","notify","info","message","Sider","City","position","left","getRandomType","getRandomStats","strength","willpower","endurance","agility","createMember","missions","daysInGuild","items","World","notification","useNotification","api","contextHolder","useReducer","questsCreated","questStarted","questsCompleted","selectedCity","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","useHotkeys","splitKey","e","bottom","percent","showInfo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff3c12b5.chunk.js","sourcesContent":["export function getTicker(state) {\n  return state.ticker;\n}\n\nexport function getGuildDefaultMenu(state) {\n  return state.guild.selectedItem;\n}\n\nexport function getActiveEvents(state) {\n  return getTicker(state).activeEvents;\n}","export default function createEvent(start, end, name, description, type, startHandler, endHandler) {\n  return {\n    start,\n    end,\n    name,\n    description,\n    type,\n    startHandler,\n    endHandler\n  };\n}\n\nexport const EVENT_TYPES = {\n  QUEST: 'QUEST',\n  EVENT: 'EVENT'\n};","import { getTicker } from '../../redux/selectors';\nimport { MONTH_LENGTH } from '../../utils/consts';\n\nimport createEvent, { EVENT_TYPES } from '../event';\n\nlet ticker;\n\nfunction initialize(state) {\n  ticker = {\n    currentStage: TimeOfTheDay.MORNING,\n    hour: 0,\n    day: 1,\n    month: 0,\n    year: 475,\n    todayEvents: [],\n    activeEvents:[],\n    events: [],\n    stats: {\n      totalEvents: 0,\n      ticks: 0\n    },\n    callADay,\n    advanceStage,\n    tick\n  };\n\n//#region Create default events\n  const festivityOne = createEvent([475, 0, 5, 8], [475, 0, 6, 0], 'Fifth of Decembrary', 'A very beautiful festivity', EVENT_TYPES.EVENT, (dispatch, state, event) => {\n    console.log(`It's ${event.name}  !!`);\n  }, (dispatch, state, event) => {\n    const ticker = getTicker(state);\n\n    ticker.events.push(rescheduleEvent(event, [ticker.year + 1, 0, 5, 8], [ticker.year + 1, 0, 6, 0]));\n  });\n\n  const festivityTwo = createEvent([475, 0, 1, 8], [475, 0, 8, 8], 'First Week of the year!', 'The very first week of the year', EVENT_TYPES.EVENT, (dispatch, state, event) => {\n    console.log(`It's ${event.name}  !!`);\n  }, (dispatch, state, event) => {\n    const ticker = getTicker(state);\n\n    ticker.events.push(rescheduleEvent(event, [ticker.year + 1, 0, 1, 8], [ticker.year + 1, 0, 8, 1]));\n  });\n\n  ticker.events.push(festivityOne, festivityTwo);\n\n  computeDayEvents({\n    ticker \n  });\n  \n//#endregion\n\n  return ticker;\n}\n\nfunction computeDayEvents(state) {\n  const ticker = getTicker(state);\n\n  ticker.todayEvents = ticker.events.filter((event) => {\n    return isToday(ticker, event.start) || isToday(ticker, event.end);\n  });\n}\n\nfunction checkEvents(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.todayEvents.filter((event) => {\n    return (event.start[3] === ticker.hour) || (event.end[3] === ticker.hour)\n  }).forEach((event) => {\n    if (isToday(ticker, event.start) && event.start[3] === ticker.hour) {\n      event.startHandler(dispatch, state, event);\n      ticker.activeEvents.push(event);\n    } else {\n      event.endHandler(dispatch, state, event);\n      ticker.events.splice(ticker.events.indexOf(event), 1);\n      ticker.activeEvents.splice(ticker.activeEvents.indexOf(event), 1);\n    }\n  });\n}\n\nfunction isToday(ticker, date) {\n  return ticker.year === date[0] && ticker.month === date[1] && ticker.day === date[2];\n}\n\nexport function getTimeInFuture(startTime, difference) {\n  return getTimeFromHours(getTotalHours(startTime) + difference);\n}\n\nexport function getCurrentTime(ticker) {\n  return [ticker.year, ticker.month, ticker.day, ticker.hour];\n}\n\nexport function getHumanTime(time) {\n  \n}\n\nexport function getDifferenceTime(startTime, endTime) {\n  const difference = getTotalHours(endTime) - getTotalHours(startTime);\n\n  return getTimeFromHours(difference);\n}\n\n/*\n  year: 4 * 15 * 24 = 1440\n*/\nexport function getTotalHours(time) {\n  return time[0] * 1440 + time[1] * 360 + (time[2] - 1) * 24 + time[3];\n}\n\nexport function getTimeFromHours(hours) {\n  return [Math.floor(hours / 1440), Math.floor((hours / 360) % 4), Math.floor((hours / 24) % 15) + 1, hours % 24];\n}\n\nexport function rescheduleEvent(event, startDate, endDate) {\n  return createEvent(startDate, endDate, event.name, event.description, event.type, event.startHandler, event.endHandler);\n}\n\n//#region Ticking\n\nfunction advanceStage(dispatch, state) {\n  const ticker = getTicker(state);\n\n  if (ticker.currentStage === TimeOfTheDay.NIGHT) {\n    return callADay(dispatch, state);    \n  }\n\n  ticker.currentStage = getNextTime(ticker.currentStage);\n}\n\nfunction callADay(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.currentStage = TimeOfTheDay.MORNING;\n  ticker.hour = 0;\n  ticker.day++;\n\n\n  if (ticker.day > MONTH_LENGTH) {\n    callAMonth(dispatch, state);\n  }  \n\n  computeDayEvents(state);\n\n  // console.log(ticker.todayEvents, ticker.activeEvents, ticker.events)\n}\n\nfunction callAMonth(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.day = 1;\n  ticker.month++;\n\n  if (ticker.month === 4) {\n    callAYear(dispatch, state);\n  }\n}\n\nfunction callAYear(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.month = 0;\n  ticker.year++;\n}\n\nfunction tick(dispatch, state) {\n  if (state.isPaused) {\n    return;\n  }\n\n  getTicker(state).stats.ticks++;\n  getTicker(state).hour++;\n\n  dispatch('increaseStageProgress'); \n\n  if (state.stageProgress === 5) {\n    state.ticker.advanceStage(dispatch, state);\n  \n    dispatch('resetStageProgress');\n  }   \n\n  checkEvents(dispatch, state);\n}\n\nexport const TimeOfTheDay = {\n  MORNING: 'Morning',\n  AFTERNOON: 'Afternoon',\n  EVENING: 'Evening',\n  NIGHT: 'Night'\n};\n\nfunction getNextTime(currentStage) {\n  switch(currentStage) {\n    case TimeOfTheDay.MORNING:\n      return TimeOfTheDay.AFTERNOON;\n    case TimeOfTheDay.AFTERNOON:\n      return TimeOfTheDay.EVENING;\n    case TimeOfTheDay.EVENING:\n      return TimeOfTheDay.NIGHT;\n  }\n}\n\nexport const MONTHS = [\n  'Decembary',\n  'Aprimay',\n  'Jugust',\n  'Septober'\n];\n//#endregion\n\nexport default {\n  initialize\n};\n","export const INIT_STAGE_SPEED = 500;\nexport const STATE_PROGRESS_INCREMENT = 1;\nexport const MONTH_LENGTH = 15;","export function getRandomNumber(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport function getRandomInt(min, max) {\n  return Math.round(Math.random() * (max - min) + min);\n}\n\nexport function getRandomColor() {\n  return `#${Math.floor(Math.random()*16777215).toString(16)}`;\n}","import createEvent, { EVENT_TYPES } from '../event';\nimport { getTicker } from '../../redux/selectors';\nimport { getTimeInFuture, getCurrentTime, getDifferenceTime } from '../ticker';\nimport { getRandomInt } from '../random';\n\nlet lastId = 0;\n\nexport default function createQuest() {\n  const id = ++lastId;\n\n  const quest = {\n    id,\n    name: 'No name',\n    description: 'No Description',\n    steps: [],\n    reward: 0,\n    questValue: 0,\n    active: false,\n    completed: false,\n    assignee: null,\n    log: []\n  }\n\n  const {name, description, reward, steps} = generateRandomQuestData(quest);\n\n  quest.name = name;\n  quest.description = description;\n  quest.reward = reward;\n  quest.steps = steps;\n\n  return quest;\n}\n\nfunction generateRandomQuestData(quest) {\n  // Value in hours\n  const questValue = getRandomInt(2, 8);\n\n  return {\n    name: 'Go Fetch',\n    description: 'Go find something somewhere',\n    reward: Math.floor(questValue * 2 + getRandomInt(-3, 4)),\n    questValue,\n    steps: [createStepTravelFor(quest, questValue), createStepQuestObjective(quest, QUEST_TYPES.GO_FETCH, questValue), createStepTravelFor(quest, questValue)]\n  }\n}\n\nfunction createStepTravelFor(quest, questValue) {\n  const execute = (store) => {\n    const ticker = getTicker(store);\n    const currentTime = getCurrentTime(ticker);\n    currentTime[3]++;\n\n    const endTime = getTimeInFuture(currentTime, questValue);\n    \n    return createEvent(currentTime, endTime, 'Quest Traveling', 'None', EVENT_TYPES.QUEST,\n      (dispatch, state, event) => {\n        quest.log.push(`Going to travel for ${questValue} hours.`)\n      }, (dispatch, state, event) => {\n        quest.log.push(`We arrived at our destination`);\n\n        dispatch({type: 'advanceQuest', payload: quest});\n      })\n  };\n  \n  return execute;\n}\n\nfunction createStepQuestObjective(quest, questType) {\n  const execute = (store) => {\n    const ticker = getTicker(store);\n    const currentTime = getCurrentTime(ticker);\n    currentTime[3]++;\n\n    const endTime = getTimeInFuture(currentTime, 3);\n\n    return createEvent(currentTime, endTime, 'Executing Quest', 'None', EVENT_TYPES.QUEST,\n      (dispatch, state, event) => {\n        quest.log.push(`Started searching for the thing.`)\n      }, (dispatch, state, event) => {\n        quest.log.push(`Found the thing.`);\n\n        dispatch({type: 'advanceQuest', payload: quest});\n      })\n  };\n  \n  return execute;\n}\n\nexport function startQuest(state, quest) {\n  if (quest.active) {\n    return;\n  }\n\n  quest.active = true;\n\n  executeStep(state, quest);\n}\n\nexport function advanceQuest(state, quest) {\n  quest.steps.shift()\n\n  if (quest.steps.length === 0) {\n    return completeQuest(quest);\n  }\n\n  executeStep(state, quest);\n}\n\nexport function executeStep(state, quest) {\n  const event = quest.steps[0](state);\n  const ticker = getTicker(state);\n\n  ticker.events.push(event);\n  ticker.todayEvents.push(event);\n}\n\nfunction completeQuest(quest) {\n  quest.completed = true;\n  quest.active = false;  \n\n  quest.log.push('Quest finished');\n} \n\n\nexport const QUEST_TYPES = {\n  GO_FETCH: 'Go Fetch'\n};","\n// https://github.com/kolodny/immutability-helper\nimport update from 'immutability-helper';\n\nimport { startQuest, advanceQuest } from '../utils/quest';\nimport { STATE_PROGRESS_INCREMENT } from '../utils/consts';\n\nexport default function reducer(state, action) {\n  const computedAction = typeof action === 'string' ? { type: action} : action;\n\n  if (!['increaseStageProgress', 'resetStageProgress'].includes(computedAction.type))\n  console.log(computedAction);\n  switch (computedAction.type) {\n      case 'changeSelectedMenu':\n        return update(state, {\n          selectedItem: {$set: computedAction.payload}\n        });\n      case 'increaseStageProgress': \n        return update(state, {\n          stageProgress: {$set: state.stageProgress + STATE_PROGRESS_INCREMENT}\n        });\n      case 'resetStageProgress': \n        return update(state, {\n          stageProgress: {$set: 0}\n        });\n      case 'switchPause':\n        return update(state, {\n          isPaused: {$set: !state.isPaused}\n        });\n      case 'changeStageSpeed':\n        return update(state, {\n          stageSpeed: {$set: state.stageSpeed + computedAction.payload}\n        }); \n      default:\n  }\n\n  // Guild\n  switch (computedAction.type) {\n    case 'changeSelectedGuildMenu': \n      return update(state, {\n        guild: {\n          selectedItem: { $set: computedAction.payload}\n        }\n      });\n    case 'askFounding':\n      return update(state, {\n        guild: {\n          stats: {\n            gold: { $set: 25 }\n          }\n        }\n      });\n    case 'addGoldToMember':\n      var memberIndex = state.guild.stats.members.indexOf(computedAction.payload);\n      var updatedMember = update(computedAction.payload, { gold: { $set: computedAction.payload.gold + 5}});\n\n      return update(state, {\n        guild: {\n          stats: {\n            members: {\n              $splice: [[memberIndex, 1, updatedMember]]\n            },\n            gold: { $set: state.guild.stats.gold - 5}\n          }\n        }\n      });\n    case 'hireGuildMember':   \n      return update(state, {\n        guild: {\n          stats: {\n            members: { $push: [computedAction.payload] },\n            gold: { $set: state.guild.stats.gold - (computedAction.payload.level * 5) }\n          }\n        },\n        tavern: {\n          recruits: { $splice: [[state.tavern.recruits.indexOf(computedAction.payload), 1]]}\n        }\n      });   \n    default:\n  }\n\n  // City\n  switch (computedAction.type) {\n    case 'changeSelectedCityMenu': \n      return update(state, {\n        city: {\n          selectedItem: { $set: computedAction.payload}\n        }\n      });\n    default:\n  }\n\n  // Quests\n  switch (computedAction.type) {\n    case 'addQuest':\n      return update(state, {\n        quests: { quests: {$push: computedAction.payload } }\n      });\n    case 'removeQuest': \n      return update(state, {\n        quests: {quests: { $splice: [[state.quests.quests.indexOf(computedAction.payload), 1]] }}\n      });\n    case 'startQuest': \n      startQuest(state, computedAction.payload);\n\n      return  update(state, {\n        quests: {quests: { $splice: [[state.quests.quests.indexOf(computedAction.payload), 1, computedAction.payload]] }}\n      });\n    case 'advanceQuest': \n      advanceQuest(state, computedAction.payload);\n      \n      return update(state, {\n        quests: {quests: { $splice: [[state.quests.quests.indexOf(computedAction.payload), 1, computedAction.payload]] }}\n      });\n    default:\n  }\n\n  console.log(\"returning Default\");\n  return state;\n}\n\n\n/*Available Commands\n{$push: array} push() all the items in array on the target.\n{$unshift: array} unshift() all the items in array on the target.\n{$splice: array of arrays} for each item in arrays call splice() on the target with the parameters provided by the item. Note: The items in the array are applied sequentially, so the order matters. The indices of the target may change during the operation.\n{$set: any} replace the target entirely.\n{$toggle: array of strings} toggles a list of boolean fields from the target object.\n{$unset: array of strings} remove the list of keys in array from the target object.\n{$merge: object} merge the keys of object with the target.\n{$apply: function} passes in the current value to the function and updates it with the new returned value.\n{$add: array of objects} add a value to a Map or Set. When adding to a Set you pass in an array of objects to add, when adding to a Map, you pass in [key, value] arrays like so: update(myMap, {$add: [['foo', 'bar'], ['baz', 'boo']]})\n{$remove: array of strings} remove the list of keys in array from a Map or Set.*/","import { Menu } from 'antd';\n\nexport default function cityMenu({dispatch}) {\n  function changeMenuItem({ key }) {\n    dispatch({\n      type: 'changeSelectedCityMenu',\n      payload: key\n    });\n  }\n  \n  return (\n  <Menu className=\"CityMenu\" onSelect={changeMenuItem} theme=\"light\" mode=\"inline\" defaultSelectedKeys={[\"Overview\"]}>\n    <Menu.Item key=\"Overview\">Overview</Menu.Item>\n    <Menu.Item key=\"Guild\">Guild</Menu.Item>\n    <Menu.Item key=\"Market\">Market</Menu.Item>\n    <Menu.Item key=\"Tavern\">Tavern</Menu.Item>\n  </Menu>\n  );\n}\n\n","import { getActiveEvents } from '../../redux/selectors';\n\nexport default function CityOverview({dispatch, state}) {\n  return (\n    <>\n      <h1>Overview</h1>\n\n      <h3>Active Events</h3>\n      \n      {getActiveEvents(state).map((event) => (<div key={event.name}>{event.name}</div>))}\n    </>\n  );\n}\n","import { Menu } from 'antd';\n\nexport default function GuildMenu({dispatch, defaultItem}) {\n  function changeMenuItem({ key }) {\n    dispatch({\n      type: 'changeSelectedGuildMenu',\n      payload: key\n    });\n  }\n  \n  return (\n  <Menu onSelect={changeMenuItem} theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={[defaultItem]} >\n    <Menu.Item key=\"Overview\">Overview</Menu.Item>\n    <Menu.Item key=\"Members\">Members</Menu.Item>\n  </Menu>\n  );\n}\n\n","import { List, Typography, Divider } from 'antd';\n\nexport default function GuildStats({name, gold, members}) {\n    const data = [\n        {name: \"name\", value: name},\n        {name: 'gold', value: gold},\n        {name: 'members', value: members.length}\n    ];\n    \n    return (\n        <>\n            <Divider orientation=\"left\">Stats</Divider>\n            <List\n                size=\"small\"\n                bordered\n                dataSource={data}\n                renderItem={item => (\n                    <List.Item>\n                        {item.name}: {item.value}\n                    </List.Item>\n                )}\n            />\n        </>\n    )\n}","import { Button } from 'antd';\n\nimport Stats from \"./stats\";\n\n\nexport default function Overview({dispatch, state}) {\n  const {gold, members} = state.guild.stats;\n\n  return (\n    <>\n      <Stats {...state.guild.stats} />\n      <br />\n      {gold === 0 && members.length === 1 ? (\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            dispatch({ type: \"askFounding\" });\n          }}\n        >\n          Ask for founding to the city council\n        </Button>\n      ) : null}\n    </>\n  );\n}\n","import { Typography } from 'antd';\n\nexport function getStatColor(stat, computedStat) {\n  if (computedStat > stat) {\n    return 'success';\n  }\n\n  if (computedStat < stat) {\n    return 'danger';\n  }\n\n  return 'default';\n}\n\nexport default function renderStats(member) {\n  return Object.keys(member.stats).map((statName) => {\n    const stat = member.stats[statName];\n    const computedStat = member.computedStats[statName];\n\n    return <Typography.Text key={statName} type={getStatColor(stat, computedStat)}>{statName}: {computedStat}</Typography.Text>\n  });\n}\n\nexport function sumStats(member) {\n  return Object.keys(member.stats).reduce((acc, statName) => {\n    const stat = member.stats[statName];\n\n    return acc + stat;\n  }, 0) - member.stats.health;\n}\n\nexport function renderData(member) {\n  return Object.keys(member.data).map((statName) => {\n    const data = member.data[statName];\n\n    return <Typography.Text key={statName} >{statName}: {data}</Typography.Text>\n  });\n}","export const cardStyle = {\n  width: 200,\n  float: 'left',\n  margin: 5\n};","\nimport { Card, Typography, Space, Collapse } from 'antd';\n\n\nimport renderStats, {sumStats, renderData} from '../../../utils/renderStats';\nimport { cardStyle } from '../../../utils/styles';\n\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Members({dispatch, state}) {\n\n  return (\n    <>\n      {state.guild.stats.members.map((member, key) => {\n        return (\n          <Card key={key} style={cardStyle} title={member.name} extra={<div style={{width: 15, height: 15, background: member.color}}></div>}>\n            <Space style={{width: '100%'}} direction=\"vertical\">\n              <Text>Gold: {member.gold} <Text style={{fontSize: 18, cursor: 'pointer'}} onClick={() => {dispatch({type: \"addGoldToMember\", payload: member})}}>+</Text></Text>\n              <Text>Level: {member.level} ({member.exp} / {member.level * 2}) {member.exp > member.level * 2 ? '▲' : null}</Text>\n              <Text>Type: {member.type}</Text>\n              <Text>Task: {member.task ? member.task : \"None\"}</Text>\n              <Collapse ghost style={{marginLeft: -15}}>\n                <Panel header={`Stats (${sumStats(member)})`} key=\"1\">\n                  <Space style={{width: '100%'}} direction=\"vertical\">\n                    {renderStats(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n              <Collapse ghost style={{marginLeft: -15}}>\n                <Panel header=\"Data\" key=\"2\">\n                  <Space style={{width: '100%'}} direction=\"vertical\">\n                    {renderData(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n            </Space>\n          </Card>);\n      })}\n    </>\n  )\n}","import { Layout } from \"antd\";\n\nimport GuildMenu from './menu';\nimport Overview from './overview';\nimport Members from './members';\n\nimport {getGuildDefaultMenu} from '../../redux/selectors';\n\nconst { Header, Content } = Layout;\n\nfunction renderContent(dispatch, state) {\n  switch(state.guild.selectedItem) {\n    case 'Overview': \n      return <Overview dispatch={dispatch} state={state} />\n    case 'Members':\n      return <Members dispatch={dispatch} state={state} />\n    case 'Market': \n      return <Overview dispatch={dispatch} state={state} />\n\n    default:\n      return \"error\";\n  }\n}\n\nexport default function Guild({dispatch, state}) {\n  return (\n    <Layout style={{ background: 'white'}}>\n      <Header\n        theme=\"light\"\n        style={{\n          background: 'white',\n          padding: 0\n        }}\n      >\n        <GuildMenu dispatch={dispatch} defaultItem={getGuildDefaultMenu(state)} />\n      </Header>\n      <Content style={{ background: 'white', padding: 10, margin: \"24px 16px 0\", overflow: \"initial\"}}>\n          {renderContent(dispatch, state)}\n      </Content>\n    </Layout>\n  );\n}\n","export default function Market() {\n  return \"hola\"\n}","import { Card, Typography, Space, Collapse, Button } from 'antd';\n\nimport renderStats, { sumStats } from '../../utils/renderStats';\nimport { cardStyle } from '../../utils/styles';\n\nconst { Title, Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Tavern({ dispatch, state }) {  \n\n  return (\n    <>\n      <Text>Welcome to the Tavern, please take a seat!</Text>\n      <Collapse ghost style={{marginLeft: -15}} defaultActiveKey={['2']}>\n        <Panel header=\"Recruits\" key=\"1\">\n          <Title level={4}>Available Recruits</Title>\n          \n          {state.tavern.recruits.map((member, key) => {\n            const cost = member.level * 5;\n            const canHire = state.guild.stats.gold >= cost;\n\n            return (\n              <Card key={key} style={cardStyle} title={member.name} extra={<div style={{width: 15, height: 15, background: member.color}}></div>}>\n                <Space style={{width: '100%'}} direction=\"vertical\">\n                  <Text>Level: {member.level} ({member.exp} / {member.level * 2}) {member.exp > member.level * 2 ? '▲' : null}</Text>\n                  <Text>Type: {member.type}</Text>\n                  <Collapse ghost style={{marginLeft: -15}}>\n                    <Panel header={`Stats (${sumStats(member)})`} key=\"1\">\n                      <Space style={{width: '100%'}} direction=\"vertical\">\n                        {renderStats(member)}\n                      </Space>\n                    </Panel>\n                  </Collapse>\n                  <Button type=\"primary\" disabled={canHire ? false : true} onClick={() => {\n                    dispatch({type: 'hireGuildMember', payload: member})\n                  \n                    state.notify.info({message: `You just hired ${member.name} for ${cost} gold coins`});\n                  }\n                  }>Hire for {cost} gold coins</Button>\n                </Space>\n              </Card>);\n          })}\n        </Panel>\n        <Panel header=\"Quests\" key=\"2\">\n        {state.quests.quests.map((quest, key) => {\n          return (\n            <Card key={key} style={cardStyle} title={quest.name}>\n              <Space style={{width: '100%'}} direction=\"vertical\">\n                <Text>name: {quest.name}</Text>\n                <Text>description: {quest.description}</Text>\n                <Text>reward: {quest.reward}</Text>\n                <Collapse ghost style={{marginLeft: -15}}>\n                    <Panel header={`Quest Log ${quest.log.length}`} key=\"1\">\n                      <Space style={{width: '100%'}} direction=\"vertical\">\n                        {quest.log.map(log => (<div key={log}>{log}</div>))}\n                      </Space>\n                    </Panel>\n                  </Collapse>\n                <Button type=\"primary\" onClick={() => {\n                  dispatch({type: 'startQuest', payload: quest})\n                \n                  state.notify.info({message: `You just started ${quest.name}`});\n                }\n                }>Start quest</Button>\n              </Space>\n            </Card>\n          )\n        })}\n        </Panel>\n      </Collapse>\n      \n    </>\n  );\n}","import { Layout } from \"antd\";\n\nimport CityMenu from './city-menu';\nimport Overview from './city-overview';\nimport Guild from '../guild';\nimport Market from '../market';\nimport Tavern from '../tavern';\n\nconst { Sider, Content } = Layout;\n\n\nexport default function City({dispatch, state}) {\n  const city = state.city;\n\n  return (\n    <Layout>\n      <Sider\n        theme=\"light\"\n        style={{\n          overflow: \"auto\",\n          height: \"100vh\",\n          position: \"fixed\",\n          left: 0,\n        }}\n      >\n        <CityMenu dispatch={dispatch} />\n      </Sider>\n      <Layout style={{ marginLeft: 200, height: \"100vh\" }}>\n        <Content style={{ background: 'white', padding: 10, margin: \"24px 16px 0\", overflow: \"initial\"}}>\n            {renderContent(dispatch, state)}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\n\nfunction renderContent(dispatch, state) {\n  switch(state.city.selectedItem) {\n    case 'Overview': \n      return <Overview dispatch={dispatch} state={state} />\n    case 'Guild':\n      return <Guild dispatch={dispatch} state={state} />\n    case 'Market': \n      return <Market dispatch={dispatch} state={state} />\n    case 'Tavern': \n      return <Tavern dispatch={dispatch} state={state} />\n\n    default:\n      return \"No content\";\n  }\n}","import getRandomName from './getRandomName';\nimport {getRandomInt, getRandomColor} from './random';\n\nlet id = 0;\n\nfunction getRandomType() {\n  return Math.random() > 0.5 ? 'warrior' : 'mage';\n}\n\nfunction getRandomStats() {\n  return {\n    health: getRandomInt(8, 10),\n    strength: getRandomInt(1, 3),\n    willpower: getRandomInt(1, 3),\n    endurance: getRandomInt(1, 3),\n    agility: getRandomInt(1, 3)\n  }\n}\n\nfunction getInitialData() {\n  return {\n    missions: 0,\n    daysInGuild: 0,\n  }\n}\n\nexport default function createMember(name = getRandomName(), color = getRandomColor(), type = getRandomType(), stats = getRandomStats(), data = getInitialData()) {\n  return {\n    id: id++,\n    name,\n    color,\n    items: [],\n    gold: 0,\n    exp: 0,\n    level: 1,\n    type,\n    task: null,\n    stats,\n    computedStats: stats,\n    data\n  } \n}\n\n","export default function getRandomName() {\n  return \"name\";\n}","import React, { useReducer } from \"react\";\nimport { notification, Progress, Button } from 'antd';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport ticker, { MONTHS } from '../utils/ticker';\nimport useInterval from '../utils/useInterval';\n\nimport reducer from '../redux/reducer';\nimport City from './city';\nimport createMember from '../utils/createMember';\nimport createQuest from '../utils/quest';\n\nimport { INIT_STAGE_SPEED } from '../utils/consts';\n\nexport default function World() {\n  const [api, contextHolder] = notification.useNotification();\n\n  const [state, dispatch] = useReducer(reducer, {\n    guild: {\n      stats: {\n        name: \"Tainor\",\n        gold: 0,\n        members: [createMember(\"Hoijof\", \"indigo\")],\n        items: [],\n      },\n      selectedItem: 'Overview' \n    },\n    city: {\n      selectedItem: 'Overview',\n    },\n    tavern: {\n      recruits: [1,2,3,4].map(() => createMember())\n    },\n    quests: {\n      quests: [createQuest(),createQuest(),createQuest(),createQuest(),createQuest()],\n      stats: {\n        questsCreated: 0,\n        questStarted: 0,\n        questsCompleted: 0\n      }\n    },\n    selectedCity: 'City',\n    day: 0,\n    stageSpeed: INIT_STAGE_SPEED,\n    stageProgress: 0,\n    isPaused: false,\n    notify: api,\n    ticker: ticker.initialize(),\n  });\n\n  useInterval(() => {\n    state.ticker.tick(dispatch, state);\n  }, state.stageSpeed)\n\n  useHotkeys('space', () => dispatch('switchPause')) \n  \n  useHotkeys('+', { splitKey: '-' }, function(e){\n    console.log('you pressed +');\n  })\n  useHotkeys(\"*\", event => {\n    if (event.key === \"+\") {\n      dispatch({type: 'changeStageSpeed', payload: -25})\n    }\n\n    if (event.key === \"-\") {\n      dispatch({type: 'changeStageSpeed', payload: 25})\n    }\n  })\n\n  return (\n    <>\n      {contextHolder}\n      {renderContent(dispatch, state)}\n      <div id=\"TickerBar\" style={{position: 'absolute', left: 0, bottom: 0, width: '100%'}}>\n        <div>{state.ticker.day} / {MONTHS[state.ticker.month]} / {state.ticker.year}</div>\n        <div>Hour: {state.ticker.hour}:00</div>\n        <div>Time of The Day: {state.ticker.currentStage}</div>\n        <Button onClick={() => {dispatch('switchPause')}}>{state.isPaused ? 'Resume' : 'Pause'}</Button>\n        <br />\n        <Button onClick={() => {dispatch({type: 'changeStageSpeed', payload: 10})}}>-</Button>\n        <span> Speed: {state.stageSpeed} </span>\n        <Button onClick={() => {dispatch({type: 'changeStageSpeed', payload: -10})}}>+</Button>\n        <Progress percent={state.stageProgress} showInfo={false} size=\"small\" />\n      </div>\n    </>\n  )\n}\n\nfunction renderContent(dispatch, state) {\n  switch(state.selectedCity) {\n    case 'City': \n      return <City dispatch={dispatch} state={state} />\n\n    default:\n      return \"No city to render\";\n  }\n}","import React, { useState, useEffect, useRef } from 'react';\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}","import World from './components/world';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <World />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import './mvp.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}