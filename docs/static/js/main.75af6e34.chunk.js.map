{"version":3,"sources":["redux/selectors.js","utils/consts.js","utils/ticker/tickerUtils.js","utils/event.js","utils/names.js","utils/random.js","utils/members/index.js","utils/quest/questUtils.js","utils/quest/fetch.js","utils/quest/index.js","utils/quest/createQuestEvent.js","utils/guild/createGuildEvents.js","utils/guild/reports.js","utils/ticker/index.js","utils/members/createMembersEvents.js","redux/reducer.js","components/city/city-menu.js","components/city/city-overview.js","components/guild/stats.js","components/guild/overview.js","utils/renderStats.js","utils/styles.js","components/guild/members.js","components/guild/quests.js","components/guild/reports.js","utils/phaser/get-phaser.js","components/guild/phaser-test.js","components/city-building/menu.js","components/city-building/index.js","components/guild/index.js","components/market/index.js","components/tavern/overview.js","components/tavern/recruits.js","components/tavern/quests.js","components/tavern/index.js","components/city/index.js","components/world.js","utils/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["getTicker","state","ticker","getNamespacedDefaultMenu","stateNamespace","selectedItem","getActiveEvents","activeEvents","getGuild","guild","getGuildMembers","stats","members","getQuests","quests","getAcceptedQuests","filter","quest","accepted","TIME_OF_THE_DAY","MONTHS","EVENT_TYPES","QUEST_TYPES","SEXES","MALE","FEMALE","LOCATIONS","isToday","date","year","month","day","getTimeInFuture","startTime","difference","getTimeFromHours","getTotalHours","getCurrentTime","hour","getHumanTime","time","getDifference","endTime","hours","Math","floor","createEvent","start","end","name","description","type","startHandler","endHandler","rescheduleEvent","event","startDate","endDate","femaleNames","maleNames","surnames","getRandomInt","min","max","round","random","getRandomNumber","getRandomColor","toString","isHappening","prob","getRandomName","sex","length","getRandomSurname","getRandomKey","obj","keys","Object","id","getRandomType","getRandomStats","health","energy","strength","willpower","endurance","agility","getMemberCost","member","statsCost","values","reduce","total","stat","level","createMember","surname","color","data","missions","yearsInGuild","items","gold","exp","task","location","computedStats","getMemberFullName","getTravelRatio","map","modifyEnergy","change","computedEnergy","canLevelUp","getLevelUpExperience","computeStats","oldEnergy","createStepTravelFor","questValue","store","currentTime","memberTravelCapacity","getMemberTravelCapacity","assignee","timeTraveling","dispatch","addLog","message","consumeTravelCapacity","steps","splice","remainingQuestValue","memberRestTime","ceil","getMemberRestTime","payload","createRestEvent","logId","log","logs","push","createdAt","createStepQuestObjective","firstTime","execute","Number","prototype","in_min","in_max","out_min","out_max","this","lastId","createQuest","expiresAt","reward","active","completed","startedAt","generateStepsFetch","addRandomQuestData","advanceQuest","shift","experience","completeQuest","executeStep","events","todayEvents","createQuestEvent","numberOfQuests","isAfter","forEach","i","createGuildCheckupEvent","getAcceptedAndNotDepartedQuests","startQuest","checkupQuests","defaultReport","maintenance","salaries","questsPerformed","questsSucceeded","addQuestReportTo","reports","reportKey","questSucceeded","computeDayEvents","tick","stageProgress","setStageProgress","isPaused","ticks","advanceStage","indexOf","checkEvents","currentStage","callADay","getNextTime","yesterday","today","lastMonth","reportsCallAMonth","callAYear","callAMonth","initialize","totalEvents","festivityOne","console","festivityTwo","questEvent","guildCheckupEvent","membersEvent","newMembers","createMembersEvent","reducer","action","computedAction","includes","update","$set","stageSpeed","key","memberIndex","updatedMember","$splice","$push","tavern","recruits","attributesToUpdate","levelUp","city","selectedMember","addQuestReport","$apply","cityMenu","useContext","AppContext","className","onSelect","theme","mode","defaultSelectedKeys","Item","CityOverview","Stats","value","orientation","size","bordered","dataSource","renderItem","item","Overview","onClick","displayName","getStatColor","computedStat","renderStats","statName","Text","sumStats","acc","renderData","cardStyle","width","float","margin","Typography","Panel","Collapse","Members","style","title","extra","height","background","direction","fontSize","cursor","ghost","marginLeft","header","Title","Paragraph","Quests","getStarted","Quest","strong","Log","label","Reports","RenderReport","currentTitle","current","previousTitle","previous","game","defaultConfig","Phaser","WEBGL","physics","default","arcade","gravity","y","scene","preload","load","setBaseURL","image","create","add","emitter","particles","createEmitter","speed","scale","blendMode","logo","setVelocity","setBounce","setCollideWorldBounds","startFollow","getPhaser","canvasRef","config","canvas","Game","newPhaser","createRef","PhaserTest","useEffect","platforms","player","cursors","stars","bombs","spritesheet","frameWidth","frameHeight","staticGroup","setScale","refreshBody","sprite","anims","frames","generateFrameNumbers","frameRate","repeat","frame","collider","input","keyboard","createCursorKeys","group","setXY","x","stepX","children","iterate","child","setBounceY","FloatBetween","overlap","collectStar","scoreText","text","fill","hitBomb","left","isDown","setVelocityX","play","right","up","body","touching","down","setVelocityY","score","star","disableBody","setText","countActive","enableBody","Between","bomb","pause","setTint","ref","CityMenu","defaultItem","menuItems","Header","Layout","Content","renderContent","find","CityBuilding","padding","overflow","Guild","Market","Recruits","cost","canHire","disabled","notify","info","drawStarTimes","times","result","StarOutlined","renderExpireTime","useState","setSelectedMember","SelectHeroDropdown","onChange","menu","overlay","e","preventDefault","DownOutlined","Tavern","Sider","City","position","React","createContext","World","notification","useNotification","api","contextHolder","useReducer","week","lastWeek","questsCreated","questStarted","questsCompleted","selectedCity","callback","delay","savedCallback","useRef","setInterval","clearInterval","useInterval","useHotkeys","window","Provider","bottom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+NAAO,SAASA,EAAUC,GACxB,OAAOA,EAAMC,OAGR,SAASC,EAAyBF,EAAOG,GAC9C,OAAOH,EAAMG,GAAgBC,aAGxB,SAASC,EAAgBL,GAC9B,OAAOD,EAAUC,GAAOM,aAGnB,SAASC,EAASP,GACvB,OAAOA,EAAMQ,MAGR,SAASC,EAAgBT,GAC9B,OAAOO,EAASP,GAAOU,MAAMC,QAKxB,SAASC,EAAUZ,GACxB,OAAOA,EAAMa,OAAOA,OAGf,SAASC,EAAkBd,GAChC,OAAOY,EAAUZ,GAAOe,QAAO,SAACC,GAAD,OAAWA,EAAMC,YC3B3C,IASMC,EACF,UADEA,EAEA,YAFAA,EAGF,UAHEA,EAIJ,QAGIC,EAAS,CAAC,YAAa,UAAW,SAAU,YAE5CC,EACJ,QADIA,EAEJ,QAGIC,EACD,WAGCC,EAAQ,CACnBC,KAAM,OACNC,OAAQ,UAGGC,EACJ,QADIA,EAEA,YAFAA,EAGL,OAHKA,EAIL,OClCD,SAASC,EAAQzB,EAAQ0B,GAC9B,OACE1B,EAAO2B,OAASD,EAAK,IACrB1B,EAAO4B,QAAUF,EAAK,IACtB1B,EAAO6B,MAAQH,EAAK,GAIjB,SAASI,EAAgBC,EAAWC,GACzC,OAAOC,EAAiBC,EAAcH,GAAaC,GAG9C,SAASG,EAAenC,GAC7B,MAAO,CAACA,EAAO2B,KAAM3B,EAAO4B,MAAO5B,EAAO6B,IAAK7B,EAAOoC,MAGjD,SAASC,EAAaC,GAC3B,IAAMT,EAAMS,EAAK,GAAK,GAAKA,EAAK,GAApB,WAA6BA,EAAK,IAE9C,MAAM,GAAN,OAAUT,EAAV,YAAiBX,EAAOoB,EAAK,IAA7B,YAAoCA,EAAK,IAYpC,SAASC,EAAcR,EAAWS,GACvC,OAAON,EAAcM,GAAWN,EAAcH,GAMzC,SAASG,EAAcI,GAC5B,OAAiB,KAAVA,EAAK,GAAsB,IAAVA,EAAK,GAA2B,IAAfA,EAAK,GAAK,GAAUA,EAAK,GAG7D,SAASL,EAAiBQ,GAC/B,MAAO,CACLC,KAAKC,MAAMF,EAAQ,MACnBC,KAAKC,MAAOF,EAAQ,IAAO,GAC3BC,KAAKC,MAAOF,EAAQ,GAAM,IAAM,EAChCA,EAAQ,ICjDL,SAASG,EACdC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAO,CACLN,QACAC,MACAC,OACAC,cACAC,OACAC,eACAC,cAIG,SAASC,EAAgBC,EAAOC,EAAWC,GAChD,OAAOX,EACLU,EACAC,EACAF,EAAMN,KACNM,EAAML,YACNK,EAAMJ,KACNI,EAAMH,aACNG,EAAMF,YAIK,IChCFK,EAAc,CACzB,UACA,OACA,OACA,OACA,OACA,QACA,SACA,MACA,KACA,OACA,OACA,QACA,SACA,SACA,OACA,OACA,QACA,SACA,UACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,QACA,OACA,QACA,KACA,OAGWC,EAAY,CACvB,YACA,SACA,QACA,OACA,SACA,OACA,UACA,QACA,MACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,MACA,MACA,QACA,QACA,OACA,MACA,QACA,OACA,MACA,MACA,SAGWC,EAAW,CACtB,SACA,SACA,WACA,OACA,eACA,OACA,UACA,SACA,cACA,SACA,WACA,UACA,WACA,OACA,SACA,WACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,QACA,UCnFK,SAASC,EAAaC,EAAKC,GAChC,OAAOnB,KAAKoB,MALP,SAAyBF,EAAKC,GACnC,OAAOnB,KAAKqB,UAAYF,EAAMD,GAAOA,EAInBI,CAAgBJ,EAAKC,IAGlC,SAASI,IACd,MAAM,IAAN,OAAWvB,KAAKC,MAAsB,SAAhBD,KAAKqB,UAAqBG,SAAS,KAapD,SAASC,EAAYC,GAC1B,OAAOT,EAAa,EAAG,MAAQS,EAG1B,SAASC,IAAiC,IAAnBC,EAAkB,uDAAZjD,EAAMC,KACxC,OAAIgD,GAAOjD,EAAMC,KACRmC,EAAUE,EAAa,EAAGF,EAAUc,OAAS,IAC3CD,GAAOjD,EAAME,OACfiC,EAAYG,EAAa,EAAGH,EAAYe,OAAS,IAEnD,QAGF,SAASC,IACd,OAAOd,EAASC,EAAa,EAAGD,EAASa,OAAS,IAc7C,SAASE,EAAaC,GAC3B,IAAMC,EAAOC,OAAOD,KAAKD,GACzB,OAAOC,EAAMA,EAAKJ,OAAS7B,KAAK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","file":"static/js/main.75af6e34.chunk.js","sourcesContent":["export function getTicker(state) {\n  return state.ticker;\n}\n\nexport function getNamespacedDefaultMenu(state, stateNamespace) {\n  return state[stateNamespace].selectedItem;\n}\n\nexport function getActiveEvents(state) {\n  return getTicker(state).activeEvents;\n}\n\nexport function getGuild(state) {\n  return state.guild;\n}\n\nexport function getGuildMembers(state) {\n  return getGuild(state).stats.members;\n}\n\n// #region Quests\n\nexport function getQuests(state) {\n  return state.quests.quests;\n}\n\nexport function getAcceptedQuests(state) {\n  return getQuests(state).filter((quest) => quest.accepted);\n}\n\nexport function getAcceptedAndNotDepartedQuests(state) {\n  return getAcceptedQuests(state).filter((quest) => !quest.startedAt);\n}\n\n//#endregion\n","export const SLOW_STAGE_SPEED = 1500;\nexport const INIT_STAGE_SPEED = 750;\nexport const FAST_STAGE_SPEED = 400;\nexport const MONTH_LENGTH = 15;\n\nexport const QUEST_ARRIVAL_TIME = 12;\nexport const GUILD_QUEST_DEPARTURE_TIME = 6;\nexport const MEMBERS_ARRIVAL_TIME = 10;\n\nexport const TIME_OF_THE_DAY = {\n  MORNING: \"Morning\",\n  AFTERNOON: \"Afternoon\",\n  EVENING: \"Evening\",\n  NIGHT: \"Night\",\n};\n\nexport const MONTHS = [\"Decembary\", \"Aprimay\", \"Jugust\", \"Septober\"];\n\nexport const EVENT_TYPES = {\n  QUEST: \"QUEST\",\n  EVENT: \"EVENT\",\n};\n\nexport const QUEST_TYPES = {\n  GO_FETCH: \"Go Fetch\",\n};\n\nexport const SEXES = {\n  MALE: \"male\",\n  FEMALE: \"female\",\n};\n\nexport const LOCATIONS = {\n  GUILD: \"Guild\",\n  TRAVELING: \"Traveling\",\n  CITY: \"City\",\n  CAMP: \"Camp\",\n};\n\nexport const MAX_ENERGY_RECOVERY_TIME = 4;\n","import { TIME_OF_THE_DAY, MONTHS } from \"../consts\";\n\nexport function isToday(ticker, date) {\n  return (\n    ticker.year === date[0] &&\n    ticker.month === date[1] &&\n    ticker.day === date[2]\n  );\n}\n\nexport function getTimeInFuture(startTime, difference) {\n  return getTimeFromHours(getTotalHours(startTime) + difference);\n}\n\nexport function getCurrentTime(ticker) {\n  return [ticker.year, ticker.month, ticker.day, ticker.hour];\n}\n\nexport function getHumanTime(time) {\n  const day = time[2] > 10 ? time[2] : `0${time[2]}`;\n\n  return `${day}/${MONTHS[time[1]]}/${time[0]}`;\n}\n\n// [475, 0, 3, 12] [475, 0, 3, 5]\nexport function isAfter(startTime, endTime) {\n  return getDifference(startTime, endTime) < 0;\n}\n\nexport function getDifferenceTime(startTime, endTime) {\n  return getTimeFromHours(getDifference(startTime, endTime));\n}\n\nexport function getDifference(startTime, endTime) {\n  return getTotalHours(endTime) - getTotalHours(startTime);\n}\n\n/*\n  year: 4 * 15 * 24 = 1440\n*/\nexport function getTotalHours(time) {\n  return time[0] * 1440 + time[1] * 360 + (time[2] - 1) * 24 + time[3];\n}\n\nexport function getTimeFromHours(hours) {\n  return [\n    Math.floor(hours / 1440),\n    Math.floor((hours / 360) % 4),\n    Math.floor((hours / 24) % 15) + 1,\n    hours % 24,\n  ];\n}\n\nexport function getNextTime(currentStage) {\n  switch (currentStage) {\n    case TIME_OF_THE_DAY.MORNING:\n      return TIME_OF_THE_DAY.AFTERNOON;\n    case TIME_OF_THE_DAY.AFTERNOON:\n      return TIME_OF_THE_DAY.EVENING;\n    case TIME_OF_THE_DAY.EVENING:\n      return TIME_OF_THE_DAY.NIGHT;\n  }\n}\n","export function createEvent(\n  start,\n  end,\n  name,\n  description,\n  type,\n  startHandler,\n  endHandler\n) {\n  return {\n    start,\n    end,\n    name,\n    description,\n    type,\n    startHandler,\n    endHandler,\n  };\n}\n\nexport function rescheduleEvent(event, startDate, endDate) {\n  return createEvent(\n    startDate,\n    endDate,\n    event.name,\n    event.description,\n    event.type,\n    event.startHandler,\n    event.endHandler\n  );\n}\n\nexport default {\n  createEvent,\n  rescheduleEvent,\n};\n","export const femaleNames = [\n  \"Aekkein\",\n  \"Erna\",\n  \"Gica\",\n  \"Iris\",\n  \"Laen\",\n  \"Oanei\",\n  \"Urusla\",\n  \"Unt\",\n  \"Zy\",\n  \"Giny\",\n  \"Teni\",\n  \"Tania\",\n  \"Tenisa\",\n  \"Falish\",\n  \"Tirs\",\n  \"Bera\",\n  \"Boria\",\n  \"Terkia\",\n  \"Tronash\",\n  \"Si\",\n  \"Gi\",\n  \"Ti\",\n  \"Fi\",\n  \"Di\",\n  \"Mi\",\n  \"Peli\",\n  \"Irnia\",\n  \"Beth\",\n  \"Riven\",\n  \"Vi\",\n  \"Lio\",\n];\n\nexport const maleNames = [\n  \"Anttirnet\",\n  \"Carnil\",\n  \"Estiv\",\n  \"Halt\",\n  \"Hoijof\",\n  \"Laen\",\n  \"Lisiern\",\n  \"Berin\",\n  \"Ton\",\n  \"Shome\",\n  \"Regit\",\n  \"Lurin\",\n  \"Maers\",\n  \"Musten\",\n  \"Oanei\",\n  \"Raesh\",\n  \"Terio\",\n  \"Unt\",\n  \"Ust\",\n  \"Redik\",\n  \"James\",\n  \"Loki\",\n  \"Tem\",\n  \"Regot\",\n  \"Josh\",\n  \"Tom\",\n  \"Jei\",\n  \"Lioth\",\n];\n\nexport const surnames = [\n  \"Golpeo\",\n  \"Anorda\",\n  \"Severnin\",\n  \"Part\",\n  \"Kek-vek-loah\",\n  \"Vaen\",\n  \"Nerivin\",\n  \"Haeshi\",\n  \"Vin-ti-selh\",\n  \"Ver-to\",\n  \"Vintoret\",\n  \"Da Teri\",\n  \"Von Bien\",\n  \"Maer\",\n  \"Serisn\",\n  \"Vintaren\",\n  \"Bertis\",\n  \"Tetirit\",\n  \"Tornet\",\n  \"Bellabi\",\n  \"Geron\",\n  \"Tornes\",\n  \"Gorez\",\n  \"Lorez\",\n  \"Gareth\",\n];\n\nexport const townNames = [\n  \"Laptius\",\n  \"Birnicie\",\n  \"Gerina\",\n  \"Olvinast\",\n  \"Maktius\",\n  \"New Berinet\",\n  \"Berinet\",\n  \"Old Berinet\",\n  \"Not So Old Berinet\",\n  \"Dantias\",\n  \"Maktius\",\n  \"Bluelake\",\n  \"Pryland\",\n  \"Crystalsage\",\n];\n\nexport const townFirstNames = [\n  \"Great\",\n  \"Big\",\n  \"Blue\",\n  \"Black\",\n  \"Greay\",\n  \"Nordic\",\n  \"Rapid\",\n  \"Shadow\",\n  \"Violet\",\n  \"White\",\n  \"Gold\",\n  \"Silver\",\n  \"Bronze\",\n  \"Iron\",\n  \"Stone\",\n  \"Water\",\n  \"Rose\",\n  \"Cold\",\n  \"Cor\",\n  \"Coast\",\n  \"Bright\",\n  \"Well\",\n  \"Butter\",\n  \"Dork\",\n  \"Wind\",\n  \"Orba\",\n  \"North\",\n  \"Wolf\",\n  \"South\",\n  \"East\",\n  \"West\",\n];\n\nexport const townSecondNames = [\n  \"shore\",\n  \"size\",\n  \"port\",\n  \"fox\",\n  \"ham\",\n  \"mill\",\n  \"mere\",\n  \"gate\",\n  \"bush\",\n  \"bank\",\n  \"way\",\n  \"dedge\",\n  \"keep\",\n  \"cliff\",\n  \"row\",\n  \"mount\",\n  \"river\",\n  \"sea\",\n  \"fall\",\n  \"flea\",\n  \"wald\",\n  \"crest\",\n  \"wick\",\n  \"well\",\n  \"mead\",\n];\n","import { maleNames, femaleNames, surnames } from \"./names\";\nimport { SEXES } from \"./consts\";\n\nexport function getRandomNumber(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport function getRandomInt(min, max) {\n  return Math.round(getRandomNumber(min, max));\n}\n\nexport function getRandomColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\n/*\n * Gets a random int from 1 to the number passed\n */\nexport function roll(max) {\n  return getRandomInt(0, max);\n}\n\n/*\n * Returns true or false based in a % probability\n */\nexport function isHappening(prob) {\n  return getRandomInt(0, 100) <= prob;\n}\n\nexport function getRandomName(sex = SEXES.MALE) {\n  if (sex == SEXES.MALE) {\n    return maleNames[getRandomInt(0, maleNames.length - 1)];\n  } else if (sex == SEXES.FEMALE) {\n    return femaleNames[getRandomInt(0, femaleNames.length - 1)];\n  }\n  return \"Bernt\";\n}\n\nexport function getRandomSurname() {\n  return surnames[getRandomInt(0, surnames.length - 1)];\n}\n\n/*\n * Returns a random property of an object\n */\nexport function getRandomValue(obj) {\n  const keys = Object.keys(obj);\n  return obj[keys[(keys.length * Math.random()) << 0]];\n}\n\n/*\n * Returns a random key from an object\n */\nexport function getRandomKey(obj) {\n  const keys = Object.keys(obj);\n  return keys[(keys.length * Math.random()) << 0];\n}\n","import { SEXES, LOCATIONS, MAX_ENERGY_RECOVERY_TIME } from \"../consts\";\nimport {\n  getRandomInt,\n  getRandomNumber,\n  getRandomColor,\n  getRandomName,\n  getRandomSurname,\n  getRandomKey,\n} from \"../random\";\n\nlet id = 0;\n\nfunction getRandomType() {\n  return Math.random() > 0.5 ? \"warrior\" : \"mage\";\n}\n\nfunction getRandomStats() {\n  return {\n    health: getRandomInt(8, 10),\n    energy: getRandomInt(8, 10),\n    strength: getRandomInt(1, 3),\n    willpower: getRandomInt(1, 3),\n    endurance: getRandomInt(1, 3),\n    agility: getRandomInt(1, 3),\n  };\n}\n\nfunction getInitialData() {\n  return {\n    missions: 0,\n    yearsInGuild: 0,\n  };\n}\n\nexport function getMemberCost(member) {\n  const statsCost = Object.values(member.stats).reduce((total, stat) => {\n    return total + stat;\n  }, 0);\n\n  return member.level * 5 + statsCost;\n}\n\nexport function createMember(\n  name,\n  sex = SEXES[getRandomInt(0, 1)],\n  surname = getRandomSurname(),\n  color = getRandomColor(),\n  type = getRandomType(),\n  stats = getRandomStats(),\n  data = getInitialData()\n) {\n  return {\n    id: id++,\n    sex,\n    name: name ? name : getRandomName(sex),\n    surname,\n    color,\n    items: [],\n    gold: 0,\n    exp: 0,\n    level: 1,\n    type,\n    task: null,\n    location: LOCATIONS.GUILD,\n    stats,\n    computedStats: { ...stats },\n    data,\n  };\n}\n\nexport function getMemberFullName(member) {\n  return `${member.name} ${member.surname}`;\n}\n\nexport function getMemberTravelCapacity(member) {\n  const { energy } = member.computedStats;\n\n  return energy === 0 ? 0 : Math.floor(energy * getTravelRatio(member));\n}\n\nexport function getTravelRatio(member) {\n  const { endurance, agility } = member.computedStats;\n  return (endurance + agility).map(0, 20, 0.5, 3);\n}\n\nexport function consumeTravelCapacity(member, timeTraveling) {\n  const travelRatio = getTravelRatio(member);\n\n  const energyToConsume = -timeTraveling / travelRatio;\n\n  modifyEnergy(member, energyToConsume);\n}\n\nexport function modifyEnergy(member, change) {\n  member.computedStats.energy += Math.floor(change);\n\n  if (member.computedStats.energy < 0) {\n    member.computedStats.energy = 0;\n  } else if (member.computedStats.energy > member.stats.energy) {\n    member.stats.computedEnergy = member.stats.energy;\n  }\n}\n\nexport function getMemberRestTime(member) {\n  const { energy } = member.stats;\n  const { energy: computedEnergy } = member.computedStats;\n\n  return Math.ceil(\n    (energy - computedEnergy) / (energy / MAX_ENERGY_RECOVERY_TIME)\n  );\n}\n\nexport function restMemberFor(member, hours) {\n  const { energy } = member.stats;\n\n  const recoveryRatio = energy / MAX_ENERGY_RECOVERY_TIME;\n\n  modifyEnergy(member, recoveryRatio * hours);\n}\n\nexport function addExperienceToMember(member, experience) {\n  member.exp += Math.round(experience);\n}\n\nexport function canLevelUp(member) {\n  return member.exp > getLevelUpExperience(member);\n}\n\nexport function getLevelUpExperience(member) {\n  return member.level * 2;\n}\n\nexport function levelUp(member) {\n  member.exp = member.exp - getLevelUpExperience(member);\n  member.level++;\n\n  const attributesToUpdate = getRandomInt(1, 3);\n\n  for (let i = 0; i < attributesToUpdate; i++) {\n    member.stats[getRandomKey(member.stats)]++;\n\n    computeStats(member);\n  }\n}\n\nexport function computeStats(member) {\n  const oldEnergy = member.computedStats.energy;\n\n  member.computedStats = { ...member.stats };\n  member.computedStats.energy = oldEnergy;\n}\n","import { getTicker } from \"../../redux/selectors\";\nimport { createEvent } from \"../event\";\nimport { getTimeInFuture, getCurrentTime } from \"../ticker/tickerUtils\";\nimport { EVENT_TYPES, LOCATIONS } from \"../consts\";\nimport {\n  restMemberFor,\n  getMemberRestTime,\n  getMemberTravelCapacity,\n  consumeTravelCapacity,\n} from \"../members\";\n\nexport function createStepTravelFor(quest, questValue) {\n  return (store) => {\n    const ticker = getTicker(store);\n    const currentTime = getCurrentTime(ticker);\n    currentTime[3]++;\n\n    const memberTravelCapacity = getMemberTravelCapacity(quest.assignee);\n    const timeTraveling =\n      memberTravelCapacity >= questValue ? questValue : memberTravelCapacity;\n    const endTime = getTimeInFuture(currentTime, timeTraveling);\n\n    // Travel event needs to be first in case we have this scenario [travel, rest]\n    return createEvent(\n      currentTime,\n      endTime,\n      \"Quest Traveling\",\n      \"None\",\n      EVENT_TYPES.QUEST,\n      (dispatch, state, event) => {\n        addLog(\n          state,\n          quest,\n          `Going to travel for ${timeTraveling} of ${questValue} hours.`\n        );\n\n        quest.assignee.location = LOCATIONS.TRAVELING;\n      },\n      (dispatch, state, event) => {\n        let message = \"We arrived at our destination\";\n\n        consumeTravelCapacity(quest.assignee, timeTraveling);\n\n        if (timeTraveling < questValue) {\n          quest.steps.splice(\n            1,\n            0,\n            createRestEvent(quest, questValue - memberTravelCapacity)\n          );\n\n          message = \"We have to stop due to lack of energy.\";\n        }\n\n        quest.assignee.location = LOCATIONS.CITY;\n\n        addLog(state, quest, message);\n\n        dispatch({ type: \"advanceQuest\", payload: quest });\n      }\n    );\n  };\n}\n\nexport function createRestEvent(quest, remainingQuestValue) {\n  return (store) => {\n    const ticker = getTicker(store);\n    const currentTime = getCurrentTime(ticker);\n    currentTime[3]++;\n\n    const memberRestTime = getMemberRestTime(quest.assignee);\n    const endTime = getTimeInFuture(currentTime, memberRestTime);\n\n    // Travel event needs to be first in case we have this scenario [travel, rest]\n    return createEvent(\n      currentTime,\n      endTime,\n      \"Quest Resting\",\n      \"None\",\n      EVENT_TYPES.QUEST,\n      (dispatch, state, event) => {\n        addLog(state, quest, `Going to rest for ${memberRestTime} hours.`);\n\n        quest.assignee.location = LOCATIONS.CAMP;\n      },\n      (dispatch, state, event) => {\n        addLog(state, quest, `We are rested!`);\n\n        restMemberFor(quest.assignee, memberRestTime);\n\n        quest.steps.splice(\n          1,\n          0,\n          createStepTravelFor(quest, remainingQuestValue)\n        );\n\n        quest.assignee.location = LOCATIONS.TRAVELING;\n\n        dispatch({ type: \"advanceQuest\", payload: quest });\n      }\n    );\n  };\n}\n\nlet logId = 0;\n\nexport function addLog(state, quest, log) {\n  quest.logs.push({\n    id: ++logId,\n    createdAt: getCurrentTime(getTicker(state)),\n    log,\n  });\n}\n","import { getTicker } from \"../../redux/selectors\";\nimport { createEvent } from \"../event\";\nimport { getTimeInFuture, getCurrentTime } from \"../ticker/tickerUtils\";\nimport { EVENT_TYPES, QUEST_TYPES } from \"../consts\";\nimport { createStepTravelFor, addLog } from \"./questUtils\";\nimport { isHappening } from \"../random\";\n\nfunction createStepQuestObjective(quest, firstTime = true) {\n  const execute = (store) => {\n    const ticker = getTicker(store);\n    const currentTime = getCurrentTime(ticker);\n    currentTime[3]++;\n\n    const endTime = getTimeInFuture(currentTime, 3);\n\n    return createEvent(\n      currentTime,\n      endTime,\n      \"Executing Quest\",\n      \"None\",\n      EVENT_TYPES.QUEST,\n      (dispatch, state, event) => {\n        if (firstTime) {\n          addLog(store, quest, \"Started searching for the thing.\");\n        }\n      },\n      (dispatch, state, event) => {\n        if (!isHappening(50)) {\n          addLog(store, quest, \"Couldn't find the thing. We'll try again.\");\n\n          quest.steps.splice(1, 0, createStepQuestObjective(quest, false));\n        } else {\n          addLog(store, quest, \"Found the thing.\");\n        }\n\n        dispatch({ type: \"advanceQuest\", payload: quest });\n      }\n    );\n  };\n\n  return execute;\n}\n\nexport default function generateStepsFetch(quest, questValue) {\n  return [\n    createStepTravelFor(quest, questValue),\n    createStepQuestObjective(quest, QUEST_TYPES.GO_FETCH, questValue),\n    createStepTravelFor(quest, questValue),\n  ];\n}\n","import { getTicker } from \"../../redux/selectors\";\nimport { getRandomInt } from \"../random\";\nimport { LOCATIONS } from \"../consts\";\nimport { getCurrentTime, getTimeInFuture } from \"../ticker/tickerUtils\";\nimport { addExperienceToMember } from \"../members\";\n\n// Quest types\nimport generateStepsFetch from \"./fetch\";\nimport { addLog } from \"./questUtils\";\n\n/*\n * Returns a number of a range mapped into another range\n */\nNumber.prototype.map = function (in_min, in_max, out_min, out_max) {\n  return ((this - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\n};\n\nlet lastId = 0;\n\nexport default function createQuest(state) {\n  const id = ++lastId;\n  const ticker = getTicker(state);\n\n  const expiresAt = getTimeInFuture(\n    getCurrentTime(ticker),\n    getRandomInt(1, 4) * 24\n  );\n\n  const quest = {\n    id,\n    name: \"No name\",\n    description: \"No Description\",\n    steps: [],\n    reward: 0,\n    questValue: 0,\n    level: 1,\n    accepted: false,\n    active: false,\n    completed: false,\n    assignee: null,\n    logs: [],\n    createdAt: getCurrentTime(ticker),\n    expiresAt,\n    startedAt: null,\n  };\n\n  addRandomQuestData(quest);\n\n  return quest;\n}\n\nfunction addRandomQuestData(quest) {\n  // Value in hours\n  const questValue = getRandomInt(4, 12);\n\n  quest.name = \"Go Fetch\";\n  quest.level = questValue.map(4, 12, 1, 5);\n  quest.description = \"Go find something somewhere\";\n  quest.reward = Math.round(questValue * 2 + getRandomInt(-3, 4));\n  quest.steps = generateStepsFetch(quest, questValue);\n}\n\nexport function acceptQuest(state, quest, member) {\n  quest.accepted = true;\n  quest.assignee = member;\n  member.task = quest;\n}\n\nexport function startQuest(state, quest) {\n  quest.startedAt = getCurrentTime(getTicker(state));\n  quest.active = true;\n\n  executeStep(state, quest);\n}\n\nexport function advanceQuest(state, quest) {\n  quest.steps.shift();\n\n  if (quest.steps.length === 0) {\n    return completeQuest(state, quest);\n  }\n\n  executeStep(state, quest);\n}\n\nexport function executeStep(state, quest) {\n  const event = quest.steps[0](state);\n  const ticker = getTicker(state);\n\n  ticker.events.push(event);\n  ticker.todayEvents.push(event);\n}\n\nfunction completeQuest(state, quest) {\n  quest.completed = true;\n  quest.active = false;\n\n  quest.assignee.task = null;\n  quest.assignee.location = LOCATIONS.GUILD;\n\n  addExperienceToMember(quest.assignee, quest.level);\n\n  addLog(\n    state,\n    quest,\n    `Quest completed. Members gained ${Math.round(\n      quest.level\n    )} experience points.`\n  );\n}\n","import { getTicker, getQuests } from \"../../redux/selectors\";\nimport { createEvent, rescheduleEvent } from \"../event\";\nimport {\n  getTimeInFuture,\n  getCurrentTime,\n  isAfter,\n} from \"../ticker/tickerUtils\";\nimport { EVENT_TYPES, QUEST_ARRIVAL_TIME } from \"../consts\";\nimport { getRandomInt } from \"../random\";\nimport createQuest from \"./index\";\n\nexport function createQuestEvent(ticker) {\n  const startTime = getCurrentTime(ticker);\n  startTime[3] = QUEST_ARRIVAL_TIME;\n\n  return createEvent(\n    startTime,\n    getTimeInFuture(startTime, 1),\n    \"New quest just arrived!\",\n    \"We may have got new quests from the capital\",\n    EVENT_TYPES.EVENT,\n    (dispatch, state, event) => {\n      const numberOfQuests = getRandomInt(0, 4);\n\n      const questsToExpire = getQuests(state).filter((quest) => {\n        const isExpired = isAfter(getCurrentTime(ticker), quest.expiresAt);\n\n        return isExpired && !quest.accepted;\n      });\n\n      questsToExpire.forEach((quest) => {\n        dispatch({ type: \"removeQuest\", payload: quest });\n      });\n\n      for (let i = 0; i < numberOfQuests; ++i) {\n        dispatch({ type: \"addQuest\", payload: createQuest(state) });\n      }\n    },\n    (dispatch, state, event) => {\n      const ticker = getTicker(state);\n      const startTime = getTimeInFuture(getCurrentTime(ticker), 24);\n\n      startTime[3] = QUEST_ARRIVAL_TIME;\n\n      ticker.events.push(\n        rescheduleEvent(event, startTime, getTimeInFuture(startTime, 1))\n      );\n    }\n  );\n}\n","import {\n  getTicker,\n  getQuests,\n  getAcceptedAndNotDepartedQuests,\n} from \"../../redux/selectors\";\nimport { createEvent, rescheduleEvent } from \"../event\";\nimport {\n  getTimeInFuture,\n  getCurrentTime,\n  isAfter,\n} from \"../ticker/tickerUtils\";\nimport { EVENT_TYPES, GUILD_QUEST_DEPARTURE_TIME } from \"../consts\";\nimport { startQuest } from \"../quest\";\n\nexport function createGuildCheckupEvent(ticker) {\n  const startTime = getTimeInFuture(getCurrentTime(ticker), 24);\n  startTime[3] = GUILD_QUEST_DEPARTURE_TIME;\n\n  return createEvent(\n    startTime,\n    getTimeInFuture(startTime, 1),\n    \"Performing daily guild checkup\",\n    \"May they have luck!\",\n    EVENT_TYPES.EVENT,\n    (dispatch, state, event) => {\n      checkupQuests(state);\n    },\n    (dispatch, state, event) => {\n      const ticker = getTicker(state);\n      const startTime = getTimeInFuture(getCurrentTime(ticker), 24);\n\n      startTime[3] = GUILD_QUEST_DEPARTURE_TIME;\n\n      ticker.events.push(\n        rescheduleEvent(event, startTime, getTimeInFuture(startTime, 1))\n      );\n    }\n  );\n}\n\nfunction checkupQuests(state) {\n  getAcceptedAndNotDepartedQuests(state).forEach((quest) => {\n    startQuest(state, quest);\n  });\n}\n","const defaultReport = {\n  quests: 0,\n  maintenance: 0,\n  salaries: 0,\n  total: 0,\n  questsPerformed: 0,\n  questsSucceeded: 0,\n  logs: [],\n};\n\nexport function initializeReports() {\n  return {\n    today: { ...defaultReport },\n    yesterday: { ...defaultReport },\n    week: { ...defaultReport },\n    lastWeek: { ...defaultReport },\n    month: { ...defaultReport },\n    lastMonth: { ...defaultReport },\n  };\n}\n\nexport function addQuestReport(reports, quest) {\n  addQuestReportTo(reports, quest, \"today\");\n  addQuestReportTo(reports, quest, \"month\");\n}\n\nfunction addQuestReportTo(reports, quest, reportKey) {\n  reports[reportKey].questsPerformed++;\n  reports[reportKey].questSucceeded++;\n  reports[reportKey].quests += quest.reward;\n  reports[reportKey].total += quest.reward;\n}\n\nexport function reportsCallADay(reports) {\n  reports.yesterday = reports.today;\n  reports.today = { ...defaultReport };\n}\n\nexport function reportsCallAWeek(reports) {\n  reports.lastWeek = reports.week;\n  reports.week = { ...defaultReport };\n}\n\nexport function reportsCallAMonth(reports) {\n  reports.lastMonth = reports.month;\n  reports.month = { ...defaultReport };\n}\n\nexport function addReport(report1, report2) {\n  report2.quests += report1.quests;\n  report2.maintenance += report1.maintenance;\n  report2.salaries += report1.salaries;\n  report2.total += report1.total;\n  report2.questsPerformed += report1.questsPerformed;\n  report2.questsSucceeded += report1.questsSucceeded;\n\n  report2.logs.push(...report1.logs);\n}\n","import { getTicker } from \"../../redux/selectors\";\nimport { isToday, getNextTime } from \"./tickerUtils\";\nimport { createEvent, rescheduleEvent } from \"../event\";\nimport { createQuestEvent } from \"../quest/createQuestEvent\";\nimport { createGuildCheckupEvent } from \"../guild/createGuildEvents\";\nimport { createMembersEvent } from \"../members/createMembersEvents\";\n\nimport {\n  reportsCallADay,\n  reportsCallAMonth,\n  reportsCallAWeek,\n} from \"../guild/reports\";\n\nimport { MONTH_LENGTH, TIME_OF_THE_DAY, EVENT_TYPES } from \"../../utils/consts\";\n\nlet ticker;\n\nfunction initialize() {\n  const ticker = {\n    currentStage: TIME_OF_THE_DAY.MORNING,\n    hour: 0,\n    day: 1,\n    month: 0,\n    year: 475,\n    todayEvents: [],\n    activeEvents: [],\n    events: [],\n    stats: {\n      totalEvents: 0,\n      ticks: 0,\n    },\n    callADay,\n    advanceStage,\n    tick,\n  };\n\n  //#region Create default events\n  const festivityOne = createEvent(\n    [475, 0, 5, 8],\n    [475, 0, 6, 0],\n    \"Fifth of Decembrary\",\n    \"A very beautiful festivity\",\n    EVENT_TYPES.EVENT,\n    (dispatch, state, event) => {\n      console.log(`It's ${event.name}  !!`);\n    },\n    (dispatch, state, event) => {\n      const ticker = getTicker(state);\n\n      ticker.events.push(\n        rescheduleEvent(\n          event,\n          [ticker.year + 1, 0, 5, 8],\n          [ticker.year + 1, 0, 6, 0]\n        )\n      );\n    }\n  );\n\n  const festivityTwo = createEvent(\n    [475, 0, 1, 8],\n    [475, 0, 8, 8],\n    \"First Week of the year!\",\n    \"The very first week of the year\",\n    EVENT_TYPES.EVENT,\n    (dispatch, state, event) => {\n      console.log(`It's ${event.name}  !!`);\n    },\n    (dispatch, state, event) => {\n      const ticker = getTicker(state);\n\n      ticker.events.push(\n        rescheduleEvent(\n          event,\n          [ticker.year + 1, 0, 1, 8],\n          [ticker.year + 1, 0, 8, 1]\n        )\n      );\n    }\n  );\n\n  const questEvent = createQuestEvent(ticker);\n  const guildCheckupEvent = createGuildCheckupEvent(ticker);\n  const membersEvent = createMembersEvent(ticker);\n\n  ticker.events.push(\n    festivityOne,\n    festivityTwo,\n    questEvent,\n    guildCheckupEvent,\n    membersEvent\n  );\n\n  computeDayEvents({\n    ticker,\n  });\n\n  //#endregion\n\n  return ticker;\n}\n\nfunction computeDayEvents(state) {\n  const ticker = getTicker(state);\n\n  ticker.todayEvents = ticker.events.filter((event) => {\n    return isToday(ticker, event.start) || isToday(ticker, event.end);\n  });\n}\n\nfunction checkEvents(dispatch, state) {\n  const ticker = getTicker(state);\n\n  // Events that start\n  ticker.todayEvents\n    .filter((event) => {\n      return isToday(ticker, event.start) && event.start[3] === ticker.hour;\n    })\n    .forEach((event) => {\n      event.startHandler(dispatch, state, event);\n      ticker.activeEvents.push(event);\n    });\n\n  // Events that end\n  ticker.todayEvents\n    .filter((event) => {\n      return isToday(ticker, event.end) && event.end[3] === ticker.hour;\n    })\n    .forEach((event) => {\n      event.endHandler(dispatch, state, event);\n      ticker.events.splice(ticker.events.indexOf(event), 1);\n      ticker.activeEvents.splice(ticker.activeEvents.indexOf(event), 1);\n    });\n}\n\n//#region Ticking\n\nfunction tick(dispatch, state, stageProgress, setStageProgress) {\n  if (state.isPaused) {\n    return;\n  }\n\n  getTicker(state).stats.ticks++;\n  getTicker(state).hour++;\n\n  setStageProgress(stageProgress + 1);\n\n  if (stageProgress === 5) {\n    state.ticker.advanceStage(dispatch, state);\n\n    setStageProgress(0);\n  }\n\n  checkEvents(dispatch, state);\n}\n\nfunction advanceStage(dispatch, state) {\n  const ticker = getTicker(state);\n\n  if (ticker.currentStage === TIME_OF_THE_DAY.NIGHT) {\n    return callADay(dispatch, state);\n  }\n\n  ticker.currentStage = getNextTime(ticker.currentStage);\n}\n\nfunction callADay(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.currentStage = TIME_OF_THE_DAY.MORNING;\n  ticker.hour = 0;\n  ticker.day++;\n\n  reportsCallADay(state.guild.reports);\n\n  if (ticker.day > MONTH_LENGTH) {\n    callAMonth(dispatch, state);\n  }\n\n  computeDayEvents(state);\n\n  // console.log(ticker.todayEvents, ticker.activeEvents, ticker.events)\n}\n\nfunction callAMonth(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.day = 1;\n  ticker.month++;\n\n  reportsCallAMonth(state.guild.reports);\n\n  if (ticker.month === 4) {\n    callAYear(dispatch, state);\n  }\n}\n\nfunction callAYear(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.month = 0;\n  ticker.year++;\n}\n\nexport default {\n  initialize,\n};\n","import {\n  getTicker,\n  getQuests,\n  getAcceptedAndNotDepartedQuests,\n} from \"../../redux/selectors\";\nimport { createEvent, rescheduleEvent } from \"../event\";\nimport {\n  getTimeInFuture,\n  getCurrentTime,\n  isAfter,\n} from \"../ticker/tickerUtils\";\nimport { EVENT_TYPES, MEMBERS_ARRIVAL_TIME } from \"../consts\";\nimport { getRandomInt } from \"../random\";\nimport { createMember } from \"./index\";\n\nexport function createMembersEvent(ticker) {\n  const startTime = getTimeInFuture(getCurrentTime(ticker), 24);\n  startTime[3] = MEMBERS_ARRIVAL_TIME;\n\n  return createEvent(\n    startTime,\n    getTimeInFuture(startTime, 1),\n    \"Checking for new recruits\",\n    \"Let's see how many join! :D\",\n    EVENT_TYPES.EVENT,\n    (dispatch, state, event) => {\n      const newMembers = getRandomInt(0, 2);\n\n      for (let i = 0; i < newMembers; ++i) {\n        dispatch({\n          type: \"addMember\",\n          payload: createMember(),\n        });\n      }\n    },\n    (dispatch, state, event) => {\n      const ticker = getTicker(state);\n      const startTime = getTimeInFuture(getCurrentTime(ticker), 24);\n\n      startTime[3] = MEMBERS_ARRIVAL_TIME;\n\n      ticker.events.push(\n        rescheduleEvent(event, startTime, getTimeInFuture(startTime, 1))\n      );\n    }\n  );\n}\n","// https://github.com/kolodny/immutability-helper\nimport update from \"immutability-helper\";\n\nimport { acceptQuest, advanceQuest } from \"../utils/quest\";\nimport { getMemberCost, levelUp } from \"../utils/members\";\nimport { addQuestReport } from \"../utils/guild/reports\";\n\nexport default function reducer(state, action) {\n  const computedAction = typeof action === \"string\" ? { type: action } : action;\n\n  if (\n    ![\"increaseStageProgress\", \"resetStageProgress\"].includes(\n      computedAction.type\n    )\n  )\n    console.log(computedAction);\n  switch (computedAction.type) {\n    case \"changeSelectedMenu\":\n      return update(state, {\n        selectedItem: { $set: computedAction.payload },\n      });\n    case \"switchPause\":\n      return update(state, {\n        isPaused: { $set: !state.isPaused },\n      });\n    case \"changeStageSpeed\":\n      return update(state, {\n        stageSpeed: { $set: state.stageSpeed + computedAction.payload },\n      });\n    default:\n  }\n\n  // #region Menus\n  switch (computedAction.type) {\n    case \"changeSelectedContentMenu\":\n      return update(state, {\n        [computedAction.payload.stateNamespace]: {\n          selectedItem: { $set: computedAction.payload.key },\n        },\n      });\n    default:\n  }\n\n  //#endregion\n\n  // Guild\n  switch (computedAction.type) {\n    case \"askFounding\":\n      return update(state, {\n        guild: {\n          stats: {\n            gold: { $set: 25 },\n          },\n        },\n      });\n    case \"addGoldToMember\":\n      var memberIndex = state.guild.stats.members.indexOf(\n        computedAction.payload\n      );\n      var updatedMember = update(computedAction.payload, {\n        gold: { $set: computedAction.payload.gold + 5 },\n      });\n\n      return update(state, {\n        guild: {\n          stats: {\n            members: {\n              $splice: [[memberIndex, 1, updatedMember]],\n            },\n            gold: { $set: state.guild.stats.gold - 5 },\n          },\n        },\n      });\n    case \"hireGuildMember\":\n      return update(state, {\n        guild: {\n          stats: {\n            members: { $push: [computedAction.payload] },\n            gold: {\n              $set:\n                state.guild.stats.gold - getMemberCost(computedAction.payload),\n            },\n          },\n        },\n        tavern: {\n          recruits: {\n            $splice: [\n              [state.tavern.recruits.indexOf(computedAction.payload), 1],\n            ],\n          },\n        },\n      });\n    case \"levelUpMember\":\n      levelUp(computedAction.payload);\n\n      return update(state, {\n        guild: {\n          stats: {\n            members: {\n              $splice: [\n                [\n                  state.tavern.recruits.indexOf(computedAction.payload),\n                  1,\n                  computedAction.payload,\n                ],\n              ],\n            },\n          },\n        },\n      });\n    default:\n  }\n\n  // City\n  switch (computedAction.type) {\n    case \"changeSelectedCityMenu\":\n      return update(state, {\n        city: {\n          selectedItem: { $set: computedAction.payload },\n        },\n      });\n    default:\n  }\n\n  //#region Members\n  switch (computedAction.type) {\n    case \"addMember\":\n      return update(state, {\n        tavern: {\n          recruits: { $push: [computedAction.payload] },\n        },\n      });\n    default:\n  }\n  //#endregion\n\n  // Quests\n  switch (computedAction.type) {\n    case \"addQuest\":\n      return update(state, {\n        quests: { quests: { $push: [computedAction.payload] } },\n      });\n    case \"removeQuest\":\n      return update(state, {\n        quests: {\n          quests: {\n            $splice: [[state.quests.quests.indexOf(computedAction.payload), 1]],\n          },\n        },\n      });\n    case \"acceptQuest\":\n      acceptQuest(\n        state,\n        computedAction.payload.quest,\n        computedAction.payload.selectedMember\n      );\n\n      return update(state, {\n        quests: {\n          quests: {\n            $splice: [\n              [\n                state.quests.quests.indexOf(computedAction.payload.quest),\n                1,\n                computedAction.payload.quest,\n              ],\n            ],\n          },\n        },\n      });\n    case \"advanceQuest\":\n      advanceQuest(state, computedAction.payload);\n\n      return update(state, {\n        quests: {\n          quests: {\n            $splice: [\n              [\n                state.quests.quests.indexOf(computedAction.payload),\n                1,\n                computedAction.payload,\n              ],\n            ],\n          },\n        },\n      });\n    case \"closeQuest\":\n      addQuestReport(state.guild.reports, computedAction.payload);\n\n      return update(state, {\n        guild: {\n          stats: {\n            gold: { $apply: (gold) => gold + computedAction.payload.reward },\n          },\n          reports: { $set: state.guild.reports },\n        },\n        quests: {\n          quests: {\n            $splice: [[state.quests.quests.indexOf(computedAction.payload), 1]],\n          },\n        },\n      });\n    default:\n  }\n\n  console.log(\"returning Default\");\n  return state;\n}\n\n/*Available Commands\n{$push: array} push() all the items in array on the target.\n{$unshift: array} unshift() all the items in array on the target.\n{$splice: array of arrays} for each item in arrays call splice() on the target with the parameters provided by the item. Note: The items in the array are applied sequentially, so the order matters. The indices of the target may change during the operation.\n{$set: any} replace the target entirely.\n{$toggle: array of strings} toggles a list of boolean fields from the target object.\n{$unset: array of strings} remove the list of keys in array from the target object.\n{$merge: object} merge the keys of object with the target.\n{$apply: function} passes in the current value to the function and updates it with the new returned value.\n{$add: array of objects} add a value to a Map or Set. When adding to a Set you pass in an array of objects to add, when adding to a Map, you pass in [key, value] arrays like so: update(myMap, {$add: [['foo', 'bar'], ['baz', 'boo']]})\n{$remove: array of strings} remove the list of keys in array from a Map or Set.*/\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../world\";\nimport { Menu } from \"antd\";\n\nexport default function cityMenu() {\n  const { dispatch } = useContext(AppContext);\n\n  function changeMenuItem({ key }) {\n    dispatch({\n      type: \"changeSelectedCityMenu\",\n      payload: key,\n    });\n  }\n\n  return (\n    <Menu\n      className=\"CityMenu\"\n      onSelect={changeMenuItem}\n      theme=\"light\"\n      mode=\"inline\"\n      defaultSelectedKeys={[\"Overview\"]}\n    >\n      <Menu.Item key=\"Overview\">Overview</Menu.Item>\n      <Menu.Item key=\"Guild\">Guild</Menu.Item>\n      <Menu.Item key=\"Market\">Market</Menu.Item>\n      <Menu.Item key=\"Tavern\">Tavern</Menu.Item>\n    </Menu>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../world\";\nimport { getActiveEvents } from \"../../redux/selectors\";\n\nexport default function CityOverview() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <>\n      <h1>Overview</h1>\n\n      <h3>Active Events</h3>\n\n      {getActiveEvents(state).map((event) => (\n        <div key={event.name}>{event.name}</div>\n      ))}\n    </>\n  );\n}\n","import { AppContext } from \"../world\";\nimport React, { useContext } from \"react\";\nimport { List, Typography, Divider } from \"antd\";\n\nimport { getGuild, getAcceptedQuests } from \"../../redux/selectors\";\nexport default function Stats({ name, gold, members }) {\n  const { state, dispatch } = useContext(AppContext);\n  const guild = getGuild(state);\n\n  const data = [\n    { name: \"name\", value: guild.stats.name },\n    { name: \"gold\", value: guild.stats.gold },\n    { name: \"members\", value: guild.stats.members.length },\n    { name: \"Active Quests\", value: getAcceptedQuests(state).length },\n  ];\n\n  return (\n    <>\n      <Divider orientation=\"left\">Stats</Divider>\n      <List\n        size=\"small\"\n        bordered\n        dataSource={data}\n        renderItem={(item) => (\n          <List.Item>\n            {item.name}: {item.value}\n          </List.Item>\n        )}\n      />\n    </>\n  );\n}\n\nStats.displayName = \"Stats\";\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../world\";\nimport { Button } from \"antd\";\n\nimport Stats from \"./stats\";\n\nexport default function Overview() {\n  const { state, dispatch } = useContext(AppContext);\n  const { gold, members } = state.guild.stats;\n\n  return (\n    <>\n      <Stats />\n      <br />\n      {gold === 0 && members.length === 1 ? (\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            dispatch({ type: \"askFounding\" });\n          }}\n        >\n          Ask for founding to the city council\n        </Button>\n      ) : null}\n    </>\n  );\n}\n\nOverview.displayName = \"Overview\";\n","import { Typography } from \"antd\";\n\nexport function getStatColor(stat, computedStat) {\n  if (computedStat > stat) {\n    return \"success\";\n  }\n\n  if (computedStat < stat) {\n    return \"danger\";\n  }\n\n  return \"default\";\n}\n\nexport default function renderStats(member) {\n  return Object.keys(member.stats).map((statName) => {\n    const stat = member.stats[statName];\n    const computedStat = member.computedStats[statName];\n\n    return (\n      <Typography.Text key={statName} type={getStatColor(stat, computedStat)}>\n        {statName}: {computedStat}\n      </Typography.Text>\n    );\n  });\n}\n\nexport function sumStats(member) {\n  return (\n    Object.keys(member.stats).reduce((acc, statName) => {\n      const stat = member.stats[statName];\n\n      return acc + stat;\n    }, 0) - member.stats.health\n  );\n}\n\nexport function renderData(member) {\n  return Object.keys(member.data).map((statName) => {\n    const data = member.data[statName];\n\n    return (\n      <Typography.Text key={statName}>\n        {statName}: {data}\n      </Typography.Text>\n    );\n  });\n}\n","export const cardStyle = {\n  width: 200,\n  float: \"left\",\n  margin: 5,\n};\n\n/*\n * Formats a number and returns it with a given length\n */\nexport function formatNumberLength(num, length) {\n  let r = \"\" + num;\n  while (r.length < length) {\n    r = \"0\" + r;\n  }\n  return r;\n}\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../world\";\nimport { Card, Typography, Space, Collapse } from \"antd\";\n\nimport renderStats, { sumStats, renderData } from \"../../utils/renderStats\";\nimport { cardStyle } from \"../../utils/styles\";\n\nimport { canLevelUp, getLevelUpExperience, levelUp } from \"../../utils/members\";\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Members() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <>\n      {state.guild.stats.members.map((member, key) => {\n        return (\n          <Card\n            key={key}\n            style={cardStyle}\n            title={member.name}\n            extra={\n              <div\n                style={{ width: 15, height: 15, background: member.color }}\n              ></div>\n            }\n          >\n            <Space style={{ width: \"100%\" }} direction=\"vertical\">\n              <Text>\n                Gold: {member.gold}{\" \"}\n                <Text\n                  style={{ fontSize: 18, cursor: \"pointer\" }}\n                  onClick={() => {\n                    dispatch({ type: \"addGoldToMember\", payload: member });\n                  }}\n                >\n                  +\n                </Text>\n              </Text>\n              <Text>\n                Level: {member.level} ({member.exp} /{\" \"}\n                {getLevelUpExperience(member)}){\" \"}\n                {canLevelUp(member) ? (\n                  <span\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => {\n                      dispatch({ type: \"levelUpMember\", payload: member });\n                    }}\n                  >\n                    ▲\n                  </span>\n                ) : null}\n              </Text>\n              <Text>Type: {member.type}</Text>\n              <Text>Location: {member.location}</Text>\n              <Text>Task: {member.task ? member.task.name : \"None\"}</Text>\n              <Collapse ghost style={{ marginLeft: -15 }}>\n                <Panel header={`Stats (${sumStats(member)})`} key=\"1\">\n                  <Space style={{ width: \"100%\" }} direction=\"vertical\">\n                    {renderStats(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n              <Collapse ghost style={{ marginLeft: -15 }}>\n                <Panel header=\"Data\" key=\"2\">\n                  <Space style={{ width: \"100%\" }} direction=\"vertical\">\n                    {renderData(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n            </Space>\n          </Card>\n        );\n      })}\n    </>\n  );\n}\n\nMembers.displayName = \"Members\";\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../world\";\nimport { Card, Typography, Space, Collapse, Button, Timeline } from \"antd\";\n\nimport { getAcceptedQuests } from \"../../redux/selectors\";\nimport { getMemberCost, getMemberFullName } from \"../../utils/members\";\nimport { getHumanTime } from \"../../utils/ticker/tickerUtils\";\nimport { addLog } from \"../../utils/quest/questUtils\";\n\nconst { Title, Paragraph, Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Quests() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <Collapse>\n      {getAcceptedQuests(state).map((quest, key) => {\n        return (\n          <Panel\n            header={`${quest.name} `}\n            key={quest.id}\n            extra={getStarted(quest)}\n          >\n            <Quest quest={quest} />\n          </Panel>\n        );\n      })}\n    </Collapse>\n  );\n}\nQuests.displayName = \"Quests\";\n\nfunction getStarted(quest) {\n  if (!quest.startedAt) {\n    return \"Not yet departed\";\n  }\n\n  return `Depart date: ${getHumanTime(quest.startedAt)}`;\n}\n\nexport function Quest({ quest }) {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <>\n      <Paragraph>{quest.description}</Paragraph>\n      <Paragraph>\n        The reward for completing this quest is{\" \"}\n        <Text strong>{quest.reward} gold coins</Text>.\n      </Paragraph>\n\n      <Paragraph>\n        This quest is assigned to: {getMemberFullName(quest.assignee)}{\" \"}\n      </Paragraph>\n\n      <Title level={4}>Quest Log</Title>\n\n      <Log quest={quest} />\n\n      {quest.completed && (\n        <Button\n          onClick={() => {\n            dispatch({ type: \"closeQuest\", payload: quest });\n            addLog(\n              state,\n              state.guild,\n              `Finished quest ${quest.name} and earned ${quest.reward}`\n            );\n          }}\n        >\n          Close Quest\n        </Button>\n      )}\n    </>\n  );\n}\n\nexport function Log({ quest }) {\n  return (\n    <Timeline mode=\"right\">\n      {quest.logs.map((log) => {\n        return (\n          <Timeline.Item key={log.id} label={getHumanTime(log.createdAt)}>\n            {log.log}\n          </Timeline.Item>\n        );\n      })}\n    </Timeline>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../world\";\nimport { Card, Typography, Space, Collapse, Button } from \"antd\";\n\nconst { Title, Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Reports() {\n  const { state, dispatch } = useContext(AppContext);\n\n  const { reports } = state.guild;\n\n  return (\n    <>\n      <RenderReport\n        currentTitle=\"Today\"\n        current={reports.today}\n        previousTitle=\"Yesterday\"\n        previous={reports.yesterday}\n      />\n      {/* <RenderReport\n        currentTitle=\"This Week\"\n        current={reports.week}\n        previousTitle=\"Last Week\"\n        previous={reports.lastWeek}\n      /> */}\n      <RenderReport\n        currentTitle=\"This Month\"\n        current={reports.month}\n        previousTitle=\"Last Month\"\n        previous={reports.lastMonth}\n      />\n    </>\n  );\n}\nReports.displayName = \"Reports\";\n\nexport function RenderReport({\n  currentTitle,\n  current,\n  previousTitle,\n  previous,\n}) {\n  return (\n    <>\n      <div style={{ width: 300, float: \"left\" }}>\n        <Card title={currentTitle}>\n          <Typography.Paragraph>Quests: {current.quests}</Typography.Paragraph>\n          <Typography.Paragraph>\n            maintenance: {current.maintenance}\n          </Typography.Paragraph>\n          <Typography.Paragraph>\n            salaries: {current.salaries}\n          </Typography.Paragraph>\n          <Typography.Paragraph>total: {current.total}</Typography.Paragraph>\n          <Typography.Paragraph>\n            questsPerformed: {current.questsPerformed}\n          </Typography.Paragraph>\n          <Typography.Paragraph>\n            questsSucceeded: {current.questsSucceeded}\n          </Typography.Paragraph>\n          <Typography.Paragraph>\n            questsFailed: {current.questsPerformed - current.questsSucceeded}\n          </Typography.Paragraph>\n        </Card>\n      </div>\n\n      <div style={{ width: 300, float: \"left\" }}>\n        <Card title={previousTitle}>\n          <Typography.Paragraph>Quests: {previous.quests}</Typography.Paragraph>\n          <Typography.Paragraph>\n            maintenance: {previous.maintenance}\n          </Typography.Paragraph>\n          <Typography.Paragraph>\n            salaries: {previous.salaries}\n          </Typography.Paragraph>\n          <Typography.Paragraph>total: {previous.total}</Typography.Paragraph>\n          <Typography.Paragraph>\n            questsPerformed: {previous.questsPerformed}\n          </Typography.Paragraph>\n          <Typography.Paragraph>\n            questsSucceeded: {previous.questsSucceeded}\n          </Typography.Paragraph>\n          <Typography.Paragraph>\n            questsFailed: {previous.questsPerformed - previous.questsSucceeded}\n          </Typography.Paragraph>\n        </Card>\n      </div>\n    </>\n  );\n}\n","import Phaser from \"phaser\";\n\nexport const defaultConfig = {\n  type: Phaser.WEBGL,\n  width: 800,\n  height: 600,\n  physics: {\n    default: \"arcade\",\n    arcade: {\n      gravity: { y: 300 },\n    },\n  },\n  scene: {\n    preload,\n    create,\n  },\n};\n\nfunction preload() {\n  this.load.setBaseURL(\"http://labs.phaser.io\");\n\n  this.load.image(\"sky\", \"assets/skies/space3.png\");\n  this.load.image(\"logo\", \"assets/sprites/phaser3-logo.png\");\n  this.load.image(\"red\", \"assets/particles/red.png\");\n}\n\nfunction create() {\n  this.add.image(400, 300, \"sky\");\n\n  var particles = this.add.particles(\"red\");\n\n  var emitter = particles.createEmitter({\n    speed: 100,\n    scale: { start: 1, end: 0 },\n    blendMode: \"ADD\",\n  });\n\n  var logo = this.physics.add.image(400, 100, \"logo\");\n\n  logo.setVelocity(100, 200);\n  logo.setBounce(1, 1);\n  logo.setCollideWorldBounds(true);\n\n  emitter.startFollow(logo);\n}\n\nlet game;\n\nexport function getPhaser(canvasRef, config) {\n  if (!game) {\n    newPhaser(canvasRef, config);\n  }\n\n  return game;\n}\n\nexport function newPhaser(canvasRef, config = defaultConfig) {\n  config.canvas = canvasRef;\n\n  game = new Phaser.Game(config);\n}\n","import React, { useContext, useEffect, createRef } from \"react\";\nimport { AppContext } from \"../world\";\nimport { Card, Typography, Space, Collapse, Button } from \"antd\";\n\nimport Phaser from \"phaser\";\nimport { getPhaser, defaultConfig } from \"../../utils/phaser/get-phaser\";\n\nconst { Title, Text } = Typography;\nconst { Panel } = Collapse;\n\nconst canvasRef = createRef();\n\nexport default function PhaserTest() {\n  const { state, dispatch } = useContext(AppContext);\n\n  useEffect(() => {\n    const config = defaultConfig;\n    defaultConfig.scene = {\n      preload,\n      create,\n      update,\n    };\n\n    let platforms;\n    let player;\n    let cursors;\n    let stars;\n    let bombs;\n\n    let score = 0;\n    let scoreText;\n\n    let gameOver = false;\n\n    function preload() {\n      this.load.image(\"sky\", \"assets/sky.png\");\n      this.load.image(\"ground\", \"assets/platform.png\");\n      this.load.image(\"star\", \"assets/star.png\");\n      this.load.image(\"bomb\", \"assets/bomb.png\");\n      this.load.spritesheet(\"dude\", \"assets/dude.png\", {\n        frameWidth: 32,\n        frameHeight: 48,\n      });\n    }\n\n    function collectStar(player, star) {\n      star.disableBody(true, true);\n\n      score += 10;\n      scoreText.setText(\"Score: \" + score);\n\n      if (stars.countActive(true) === 0) {\n        stars.children.iterate(function (child) {\n          child.enableBody(true, child.x, 0, true, true);\n        });\n\n        const x =\n          player.x < 400\n            ? Phaser.Math.Between(400, 800)\n            : Phaser.Math.Between(0, 400);\n\n        const bomb = bombs.create(x, 16, \"bomb\");\n        bomb.setBounce(1);\n        bomb.setCollideWorldBounds(true);\n        bomb.setVelocity(Phaser.Math.Between(-200, 200), 20);\n      }\n    }\n\n    function hitBomb(player, bomb) {\n      this.physics.pause();\n\n      player.setTint(0xffffff);\n\n      player.anims.play(\"turn\");\n\n      gameOver = true;\n    }\n\n    function create() {\n      this.add.image(400, 300, \"sky\");\n\n      platforms = this.physics.add.staticGroup();\n\n      platforms.create(400, 568, \"ground\").setScale(2).refreshBody();\n\n      platforms.create(600, 400, \"ground\");\n      platforms.create(50, 250, \"ground\");\n      platforms.create(750, 220, \"ground\");\n\n      player = this.physics.add.sprite(100, 450, \"dude\");\n\n      player.setBounce(0.2);\n      player.setCollideWorldBounds(true);\n\n      this.anims.create({\n        key: \"left\",\n        frames: this.anims.generateFrameNumbers(\"dude\", { start: 0, end: 3 }),\n        frameRate: 10,\n        repeat: -1,\n      });\n\n      this.anims.create({\n        key: \"turn\",\n        frames: [{ key: \"dude\", frame: 4 }],\n        frameRate: 20,\n      });\n\n      this.anims.create({\n        key: \"right\",\n        frames: this.anims.generateFrameNumbers(\"dude\", { start: 5, end: 8 }),\n        frameRate: 10,\n        repeat: -1,\n      });\n\n      this.physics.add.collider(player, platforms);\n\n      cursors = this.input.keyboard.createCursorKeys();\n\n      stars = this.physics.add.group({\n        key: \"star\",\n        repeat: 11,\n        setXY: { x: 12, y: 0, stepX: 70 },\n      });\n\n      stars.children.iterate(function (child) {\n        child.setBounceY(Phaser.Math.FloatBetween(0.4, 0.8));\n      });\n\n      this.physics.add.collider(stars, platforms);\n\n      this.physics.add.overlap(player, stars, collectStar, null, this);\n\n      scoreText = this.add.text(16, 16, \"Score: 0\", {\n        fontSize: \"32px\",\n        fill: \"#000\",\n      });\n\n      bombs = this.physics.add.group();\n      this.physics.add.collider(bombs, platforms);\n      this.physics.add.collider(player, bombs, hitBomb, null, this);\n    }\n\n    function update() {\n      if (cursors.left.isDown) {\n        player.setVelocityX(-160);\n\n        player.anims.play(\"left\", true);\n      } else if (cursors.right.isDown) {\n        player.setVelocityX(160);\n\n        player.anims.play(\"right\", true);\n      } else {\n        player.setVelocityX(0);\n\n        player.anims.play(\"turn\");\n      }\n\n      if (cursors.up.isDown && player.body.touching.down) {\n        player.setVelocityY(-330);\n      }\n    }\n\n    getPhaser(canvasRef.current, config);\n  });\n\n  return <canvas ref={canvasRef} id=\"Phaser\" />;\n}\nPhaserTest.displayName = \"Phaser Test\";\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../world\";\nimport { Menu } from \"antd\";\n\nexport default function CityMenu({ defaultItem, menuItems, stateNamespace }) {\n  const { dispatch } = useContext(AppContext);\n\n  function changeMenuItem({ key }) {\n    dispatch({\n      type: \"changeSelectedContentMenu\",\n      payload: {\n        key,\n        stateNamespace,\n      },\n    });\n  }\n\n  return (\n    <Menu\n      onSelect={changeMenuItem}\n      theme=\"light\"\n      mode=\"horizontal\"\n      defaultSelectedKeys={[defaultItem]}\n    >\n      {menuItems.map((Item) => (\n        <Menu.Item key={Item.displayName}>{Item.displayName}</Menu.Item>\n      ))}\n    </Menu>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../world\";\nimport { Layout } from \"antd\";\n\nimport Menu from \"./menu\";\nimport { getNamespacedDefaultMenu } from \"../../redux/selectors\";\n\nconst { Header, Content } = Layout;\n\nfunction renderContent(dispatch, state, menuItems, stateNamespace) {\n  const Content = menuItems.find((Item) => {\n    return Item.displayName === state[stateNamespace].selectedItem;\n  });\n\n  return Content ? <Content /> : \"error\";\n}\n\nexport default function CityBuilding({ menuItems, stateNamespace }) {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <Layout style={{ background: \"white\" }}>\n      <Header\n        theme=\"light\"\n        style={{\n          background: \"white\",\n          padding: 0,\n        }}\n      >\n        <Menu\n          defaultItem={getNamespacedDefaultMenu(state, stateNamespace)}\n          menuItems={menuItems}\n          stateNamespace={stateNamespace}\n        />\n      </Header>\n      <Content\n        style={{\n          background: \"white\",\n          padding: 10,\n          margin: \"24px 16px 0\",\n          overflow: \"initial\",\n        }}\n      >\n        {renderContent(dispatch, state, menuItems, stateNamespace)}\n      </Content>\n    </Layout>\n  );\n}\n","import Overview from \"./overview\";\nimport Members from \"./members\";\nimport Quests from \"./quests\";\nimport Reports from \"./reports\";\nimport PhaserTest from \"./phaser-test\";\n\nimport CityBuilding from \"../city-building\";\n\nexport default function Guild() {\n  return (\n    <CityBuilding\n      menuItems={[Overview, Members, Quests, Reports, PhaserTest]}\n      stateNamespace=\"guild\"\n    />\n  );\n}\n","export default function Market() {\n  return \"hola\";\n}\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../world\";\nimport { Typography } from \"antd\";\n\nconst { Text } = Typography;\n\nexport default function Overview() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return <Text>Welcome to the Tavern, please take a seat!</Text>;\n}\n\nOverview.displayName = \"Overview\";\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../world\";\nimport { Card, Typography, Space, Collapse, Button } from \"antd\";\n\nimport { cardStyle } from \"../../utils/styles\";\nimport renderStats, { sumStats } from \"../../utils/renderStats\";\nimport { getMemberCost } from \"../../utils/members\";\n\nconst { Title, Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Recruits() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <>\n      <Title level={4}>Available Recruits</Title>\n\n      {state.tavern.recruits.map((member, key) => {\n        const cost = getMemberCost(member);\n        const canHire = state.guild.stats.gold >= cost;\n\n        return (\n          <Card\n            key={key}\n            style={cardStyle}\n            title={`${member.name} ${member.surname}`}\n            extra={\n              <div\n                style={{ width: 15, height: 15, background: member.color }}\n              ></div>\n            }\n          >\n            <Space style={{ width: \"100%\" }} direction=\"vertical\">\n              <Text>\n                Level: {member.level} ({member.exp} / {member.level * 2}){\" \"}\n                {member.exp > member.level * 2 ? \"▲\" : null}\n              </Text>\n              <Text>Type: {member.type}</Text>\n              <Collapse ghost style={{ marginLeft: -15 }}>\n                <Panel header={`Stats (${sumStats(member)})`} key=\"1\">\n                  <Space style={{ width: \"100%\" }} direction=\"vertical\">\n                    {renderStats(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n              <Button\n                type=\"primary\"\n                disabled={canHire ? false : true}\n                onClick={() => {\n                  dispatch({ type: \"hireGuildMember\", payload: member });\n\n                  state.notify.info({\n                    message: `You just hired ${member.name} for ${cost} gold coins`,\n                  });\n                }}\n              >\n                Hire for {cost} gold coins\n              </Button>\n            </Space>\n          </Card>\n        );\n      })}\n    </>\n  );\n}\n\nRecruits.displayName = \"Recruits\";\n","import React, { useContext, useState } from \"react\";\nimport { AppContext } from \"../world\";\nimport {\n  Card,\n  Typography,\n  Space,\n  Collapse,\n  Button,\n  Menu,\n  Dropdown,\n} from \"antd\";\nimport { StarOutlined, StarFilled, DownOutlined } from \"@ant-design/icons\";\n\nimport { getGuildMembers, getTicker } from \"../../redux/selectors\";\nimport { getMemberFullName } from \"../../utils/members\";\nimport {\n  getDifference,\n  getHumanTime,\n  getCurrentTime,\n} from \"../../utils/ticker/tickerUtils\";\n\nconst { Title, Paragraph, Text } = Typography;\nconst { Panel } = Collapse;\n\nfunction drawStarTimes(times) {\n  const result = [];\n\n  for (let i = 0; i < times; i++) {\n    result.push(<StarOutlined key={i} />);\n  }\n\n  return result;\n}\n\nfunction renderExpireTime(state, quest) {\n  const difference = getDifference(\n    getCurrentTime(getTicker(state)),\n    quest.expiresAt\n  );\n  let type = \"secondary\";\n  if (difference < 24) {\n    type = difference < 0 ? \"danger\" : \"warning\";\n  }\n\n  return <Text type={type}> Expires: {getHumanTime(quest.expiresAt)} </Text>;\n}\nexport default function Quests() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <Collapse>\n      {state.quests.quests\n        .filter((quest) => !quest.accepted)\n        .map((quest, key) => {\n          return (\n            <Panel\n              header={`${quest.name} (${quest.reward} coins)`}\n              key={quest.id}\n              extra={[\n                renderExpireTime(state, quest),\n                ...drawStarTimes(quest.level),\n              ]}\n            >\n              <Quest quest={quest} />\n            </Panel>\n          );\n        })}\n    </Collapse>\n  );\n}\nQuests.displayName = \"Quests\";\n\nexport function Quest({ quest }) {\n  const { state, dispatch } = useContext(AppContext);\n  const [selectedMember, setSelectedMember] = useState(null);\n\n  return (\n    <>\n      <Paragraph>{quest.description}</Paragraph>\n      <Paragraph>\n        The reward for completing this quest is{\" \"}\n        <Text strong>{quest.reward} gold coins</Text>.\n      </Paragraph>\n\n      <Paragraph>\n        Select the Hero that will perform this quest:{\" \"}\n        <SelectHeroDropdown\n          selectedMember={selectedMember}\n          onChange={setSelectedMember}\n        />{\" \"}\n      </Paragraph>\n\n      <Button\n        disabled={!selectedMember}\n        onClick={() => {\n          dispatch({ type: \"acceptQuest\", payload: { quest, selectedMember } });\n          state.notify.info({\n            message: `You just accepted ${quest.name} with ${getMemberFullName(\n              selectedMember\n            )}`,\n          });\n        }}\n      >\n        Start Quest!\n      </Button>\n    </>\n  );\n}\n\nexport function SelectHeroDropdown({ selectedMember, onChange }) {\n  const { state, dispatch } = useContext(AppContext);\n\n  const menu = (\n    <Menu>\n      <Menu.Item key=\"none\" onClick={() => onChange(null)}>\n        None\n      </Menu.Item>\n      {getGuildMembers(state)\n        .filter((member) => !member.task)\n        .map((member) => {\n          return (\n            <Menu.Item key={member.id} onClick={() => onChange(member)}>\n              <a>{getMemberFullName(member)}</a>\n            </Menu.Item>\n          );\n        })}\n    </Menu>\n  );\n\n  return (\n    <Dropdown overlay={menu}>\n      <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n        {selectedMember ? getMemberFullName(selectedMember) : \"None\"}{\" \"}\n        <DownOutlined />\n      </a>\n    </Dropdown>\n  );\n}\n","import CityBuilding from \"../city-building\";\n\nimport Overview from \"./overview\";\nimport Recruits from \"./recruits\";\nimport Quests from \"./quests\";\n\nexport default function Tavern() {\n  return (\n    <CityBuilding\n      menuItems={[Overview, Recruits, Quests]}\n      stateNamespace=\"tavern\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../world\";\n\nimport { Layout } from \"antd\";\n\nimport CityMenu from \"./city-menu\";\nimport Overview from \"./city-overview\";\nimport Guild from \"../guild\";\nimport Market from \"../market\";\nimport Tavern from \"../tavern\";\n\nconst { Sider, Content } = Layout;\n\nexport default function City() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <Layout>\n      <Sider\n        theme=\"light\"\n        style={{\n          overflow: \"auto\",\n          height: \"100vh\",\n          position: \"fixed\",\n          left: 0,\n        }}\n      >\n        <CityMenu />\n      </Sider>\n      <Layout style={{ marginLeft: 200, height: \"100vh\" }}>\n        <Content\n          style={{\n            background: \"white\",\n            padding: 10,\n            margin: \"24px 16px 0\",\n            overflow: \"initial\",\n          }}\n        >\n          {renderContent(dispatch, state)}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nfunction renderContent(dispatch, state) {\n  switch (state.city.selectedItem) {\n    case \"Overview\":\n      return <Overview />;\n    case \"Guild\":\n      return <Guild />;\n    case \"Market\":\n      return <Market />;\n    case \"Tavern\":\n      return <Tavern />;\n\n    default:\n      return \"No content for City\";\n  }\n}\n","import React, { useState, useReducer } from \"react\";\nimport { notification, Button } from \"antd\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\n\nimport ticker from \"../utils/ticker\";\nimport useInterval from \"../utils/useInterval\";\nimport { MONTHS } from \"../utils/consts\";\n\nimport reducer from \"../redux/reducer\";\nimport City from \"./city\";\nimport { createMember } from \"../utils/members\";\n\nimport { INIT_STAGE_SPEED } from \"../utils/consts\";\n\nimport { initializeReports } from \"../utils/guild/reports\";\n\nexport const AppContext = React.createContext();\n\nexport default function World() {\n  const [api, contextHolder] = notification.useNotification();\n  const [stageProgress, setStageProgress] = useState(0);\n\n  const [state, dispatch] = useReducer(reducer, {\n    guild: {\n      stats: {\n        name: \"Tainor\",\n        gold: 0,\n        members: [createMember(\"Hoijof\", \"indigo\")],\n        items: [],\n      },\n      logs: [],\n      selectedItem: \"Overview\",\n      reports: initializeReports(),\n    },\n    city: {\n      selectedItem: \"Overview\",\n    },\n    tavern: {\n      selectedItem: \"Overview\",\n      recruits: [],\n    },\n    quests: {\n      quests: [],\n      stats: {\n        questsCreated: 0,\n        questStarted: 0,\n        questsCompleted: 0,\n      },\n    },\n    selectedCity: \"City\",\n    stageSpeed: INIT_STAGE_SPEED,\n    isPaused: false,\n    notify: api,\n    ticker: ticker.initialize(),\n  });\n\n  useInterval(() => {\n    state.ticker.tick(dispatch, state, stageProgress, setStageProgress);\n  }, state.stageSpeed);\n\n  // #region Hotkeys\n  useHotkeys(\"space\", () => dispatch(\"switchPause\"));\n\n  useHotkeys(\"*\", (event) => {\n    if (event.key === \"+\") {\n      dispatch({ type: \"changeStageSpeed\", payload: -25 });\n    }\n\n    if (event.key === \"-\") {\n      dispatch({ type: \"changeStageSpeed\", payload: 25 });\n    }\n  });\n  //#endregion\n\n  window.state = state;\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {contextHolder}\n      {renderContent(state)}\n      <div\n        id=\"TickerBar\"\n        style={{ position: \"absolute\", left: 0, bottom: 0, width: \"100%\" }}\n      >\n        <div>\n          {state.ticker.day} / {MONTHS[state.ticker.month]} /{\" \"}\n          {state.ticker.year}\n        </div>\n        <div>Hour: {state.ticker.hour}:00</div>\n        <div>Time of The Day: {state.ticker.currentStage}</div>\n        <Button\n          onClick={() => {\n            dispatch(\"switchPause\");\n          }}\n        >\n          {state.isPaused ? \"Resume\" : \"Pause\"}\n        </Button>\n        <br />\n        <Button\n          onClick={() => {\n            dispatch({ type: \"changeStageSpeed\", payload: 10 });\n          }}\n        >\n          -\n        </Button>\n        <span> Speed: {state.stageSpeed} </span>\n        <Button\n          onClick={() => {\n            dispatch({ type: \"changeStageSpeed\", payload: -10 });\n          }}\n        >\n          +\n        </Button>\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nfunction renderContent(state) {\n  switch (state.selectedCity) {\n    case \"City\":\n      return <City />;\n\n    default:\n      return \"No city to render\";\n  }\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// From Dan Ama :D\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import World from './components/world';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <World />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}