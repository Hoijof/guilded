{"version":3,"sources":["redux/reducer.js","components/city/city-menu.js","components/city/city-overview.js","components/guild/menu.js","components/guild/stats.js","components/guild/overview.js","utils/renderStats.js","utils/styles.js","components/guild/members/index.js","components/guild/index.js","components/market/index.js","components/tavern/index.js","components/city/index.js","utils/random.js","utils/createMember.js","utils/getRandomName.js","components/world.js","App.js","reportWebVitals.js","index.js"],"names":["reducer","state","action","console","log","type","selectedItem","payload","guild","stats","gold","members","cb","member","id","map","newMember","computedStats","level","tavern","recruits","filter","recruit","city","cityMenu","dispatch","onSelect","key","theme","mode","defaultSelectedKeys","Item","CityOverview","GuildMenu","GuildStats","data","name","value","length","orientation","size","bordered","dataSource","renderItem","item","Overview","onClick","getStatColor","stat","computedStat","renderStats","Object","keys","statName","Text","sumStats","reduce","acc","health","renderData","cardStyle","width","float","margin","Typography","Panel","Collapse","Members","style","title","extra","height","background","color","direction","fontSize","cursor","exp","task","ghost","marginLeft","header","Header","Layout","Content","renderContent","Guild","padding","overflow","Market","Title","Tavern","cost","canHire","disabled","notify","info","message","Sider","City","position","left","getRandomInt","min","max","Math","round","random","getRandomColor","floor","toString","getRandomType","getRandomStats","strength","willpower","endurance","agility","createMember","missions","daysInGuild","items","World","notification","useNotification","api","contextHolder","useReducer","selectedCity","day","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95fd97b6.chunk.js","sourcesContent":["\nexport default function reducer(state, action) {\n  console.log(action);\n  switch (action.type) {\n      case 'changeSelectedMenu':\n          return {\n            ...state,\n            selectedItem: action.payload\n          }\n      default:\n  }\n\n  // Guild\n  switch (action.type) {\n    case 'changeSelectedGuildMenu': \n      return {\n        ...state,\n        guild: {\n          ...state.guild,\n          selectedItem: action.payload\n        }\n      }\n    case 'askFounding':\n      return {\n        ...state,\n        guild: {\n          ...state.guild,\n          stats: {\n            ...state.guild.stats,\n            gold: 25\n          }\n        }\n      };\n    case 'addGoldToMember':\n      return {\n        ...state,\n        guild: {\n          ...state.guild,\n          stats: {\n            ...state.guild.stats,\n            members: cloneMembers(state.guild.stats.members, (member) => {\n              if (member.id === action.payload.id) {\n                member.gold += 5;\n              }\n            }),\n            gold: state.guild.stats.gold - 5\n          }\n        }\n      }\n    case 'hireGuildMember':       \n      return {\n        ...state,\n        guild: {\n          ...state.guild,\n          stats: {\n            ...state.guild.stats,\n            members: [...state.guild.stats.members, action.payload],\n            gold: state.guild.stats.gold - (action.payload.level * 5)\n          }\n        },\n        tavern: {\n          ...state.tavern,\n          recruits: state.tavern.recruits.filter((recruit) => recruit.id !== action.payload.id)\n        }\n      }\n    default:\n  }\n\n  // City\n  switch (action.type) {\n    case 'changeSelectedCityMenu': \n      return {\n        ...state,\n        city: {\n          ...state.city,\n          selectedItem: action.payload\n        }\n      }\n    default:\n  }\n\n  console.log(\"returning Default\");\n  return state;\n}\n\n\nfunction cloneMembers(members, cb) {\n  return members.map((member) => {\n    const newMember = {\n      ...member,\n      stats: {...member.stats},\n      computedStats: {...member.computedStats}\n    };\n\n    cb(newMember);\n\n    return newMember;\n  })\n}","import { Menu } from 'antd';\n\nexport default function cityMenu({dispatch}) {\n  function changeMenuItem({ key }) {\n    dispatch({\n      type: 'changeSelectedCityMenu',\n      payload: key\n    });\n  }\n  \n  return (\n  <Menu onSelect={changeMenuItem} theme=\"light\" mode=\"inline\" defaultSelectedKeys={[\"Overview\"]}>\n    <Menu.Item key=\"Overview\">Overview</Menu.Item>\n    <Menu.Item key=\"Guild\">Guild</Menu.Item>\n    <Menu.Item key=\"Market\">Market</Menu.Item>\n    <Menu.Item key=\"Tavern\">Tavern</Menu.Item>\n  </Menu>\n  );\n}\n\n","export default function CityOverview({dispatch, state}) {\n  return \"overview\";\n}\n","import { Menu } from 'antd';\n\nexport default function GuildMenu({dispatch}) {\n  function changeMenuItem({ key }) {\n    dispatch({\n      type: 'changeSelectedGuildMenu',\n      payload: key\n    });\n  }\n  \n  return (\n  <Menu onSelect={changeMenuItem} theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={[\"Overview\"]} >\n    <Menu.Item key=\"Overview\">Overview</Menu.Item>\n    <Menu.Item key=\"Members\">Members</Menu.Item>\n  </Menu>\n  );\n}\n\n","import { List, Typography, Divider } from 'antd';\n\nexport default function GuildStats({name, gold, members}) {\n    const data = [\n        {name: \"name\", value: name},\n        {name: 'gold', value: gold},\n        {name: 'members', value: members.length}\n    ];\n    \n    return (\n        <>\n            <Divider orientation=\"left\">Stats</Divider>\n            <List\n                size=\"small\"\n                bordered\n                dataSource={data}\n                renderItem={item => (\n                    <List.Item>\n                        {item.name}: {item.value}\n                    </List.Item>\n                )}\n            />\n        </>\n    )\n}","import { Button } from 'antd';\n\nimport Stats from \"./stats\";\n\n\nexport default function Overview({dispatch, state}) {\n  const {gold, members} = state.guild.stats;\n\n  return (\n    <>\n      <Stats {...state.guild.stats} />\n      <br />\n      {gold === 0 && members.length === 1 ? (\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            dispatch({ type: \"askFounding\" });\n          }}\n        >\n          Ask for founding to the city council\n        </Button>\n      ) : null}\n    </>\n  );\n}\n","import { Typography } from 'antd';\n\nexport function getStatColor(stat, computedStat) {\n  if (computedStat > stat) {\n    return 'success';\n  }\n\n  if (computedStat < stat) {\n    return 'danger';\n  }\n\n  return 'default';\n}\n\nexport default function renderStats(member) {\n  return Object.keys(member.stats).map((statName) => {\n    const stat = member.stats[statName];\n    const computedStat = member.computedStats[statName];\n\n    return <Typography.Text key={statName} type={getStatColor(stat, computedStat)}>{statName}: {computedStat}</Typography.Text>\n  });\n}\n\nexport function sumStats(member) {\n  return Object.keys(member.stats).reduce((acc, statName) => {\n    const stat = member.stats[statName];\n\n    return acc + stat;\n  }, 0) - member.stats.health;\n}\n\nexport function renderData(member) {\n  return Object.keys(member.data).map((statName) => {\n    const data = member.data[statName];\n\n    return <Typography.Text key={statName} >{statName}: {data}</Typography.Text>\n  });\n}","export const cardStyle = {\n  width: 200,\n  float: 'left',\n  margin: 5\n};","\nimport { Card, Typography, Space, Collapse } from 'antd';\n\n\nimport renderStats, {sumStats, renderData} from '../../../utils/renderStats';\nimport { cardStyle } from '../../../utils/styles';\n\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Members({dispatch, state}) {\n\n  return (\n    <>\n      {state.guild.stats.members.map((member, key) => {\n        return (\n          <Card key={key} style={cardStyle} title={member.name} extra={<div style={{width: 15, height: 15, background: member.color}}></div>}>\n            <Space style={{width: '100%'}} direction=\"vertical\">\n              <Text>Gold: {member.gold} <Text style={{fontSize: 18, cursor: 'pointer'}} onClick={() => {dispatch({type: \"addGoldToMember\", payload: member})}}>+</Text></Text>\n              <Text>Level: {member.level} ({member.exp} / {member.level * 2}) {member.exp > member.level * 2 ? '▲' : null}</Text>\n              <Text>Type: {member.type}</Text>\n              <Text>Task: {member.task ? member.task : \"None\"}</Text>\n              <Collapse ghost style={{marginLeft: -15}}>\n                <Panel header={`Stats (${sumStats(member)})`} key=\"1\">\n                  <Space style={{width: '100%'}} direction=\"vertical\">\n                    {renderStats(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n              <Collapse ghost style={{marginLeft: -15}}>\n                <Panel header=\"Data\" key=\"2\">\n                  <Space style={{width: '100%'}} direction=\"vertical\">\n                    {renderData(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n            </Space>\n          </Card>);\n      })}\n    </>\n  )\n}","import { Layout } from \"antd\";\n\nimport GuildMenu from './menu';\nimport Overview from './overview';\nimport Members from './members';\n\nconst { Header, Content } = Layout;\n\nfunction renderContent(dispatch, state) {\n  switch(state.guild.selectedItem) {\n    case 'Overview': \n      return <Overview dispatch={dispatch} state={state} />\n    case 'Members':\n      return <Members dispatch={dispatch} state={state} />\n    case 'Market': \n      return <Overview dispatch={dispatch} state={state} />\n\n    default:\n      return \"error\";\n  }\n}\n\nexport default function Guild({dispatch, state}) {\n  \n  return (\n    <Layout style={{ background: 'white'}}>\n      <Header\n        theme=\"light\"\n        style={{\n          background: 'white',\n          padding: 0\n        }}\n      >\n        <GuildMenu dispatch={dispatch} />\n      </Header>\n      <Content style={{ background: 'white', padding: 10, margin: \"24px 16px 0\", overflow: \"initial\"}}>\n          {renderContent(dispatch, state)}\n      </Content>\n    </Layout>\n  );\n}\n","export default function Market() {\n  return \"hola\"\n}","import { Card, Typography, Space, Collapse, Button } from 'antd';\n\nimport renderStats, { sumStats } from '../../utils/renderStats';\nimport { cardStyle } from '../../utils/styles';\n\nconst { Title, Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Tavern({ dispatch, state }) {  \n\n  return (\n    <>\n      <Text>Welcome to the Tavern, please take a seat!</Text>\n      <Title level={4}>Available Recruits</Title>\n      \n      {state.tavern.recruits.map((member, key) => {\n        const cost = member.level * 5;\n        const canHire = state.guild.stats.gold >= cost;\n\n        return (\n          <Card key={key} style={cardStyle} title={member.name} extra={<div style={{width: 15, height: 15, background: member.color}}></div>}>\n            <Space style={{width: '100%'}} direction=\"vertical\">\n              <Text>Level: {member.level} ({member.exp} / {member.level * 2}) {member.exp > member.level * 2 ? '▲' : null}</Text>\n              <Text>Type: {member.type}</Text>\n              <Collapse ghost style={{marginLeft: -15}}>\n                <Panel header={`Stats (${sumStats(member)})`} key=\"1\">\n                  <Space style={{width: '100%'}} direction=\"vertical\">\n                    {renderStats(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n              <Button type=\"primary\" disabled={canHire ? false : true} onClick={() => {\n                dispatch({type: 'hireGuildMember', payload: member})\n              \n                state.notify.info({message: `You just hired ${member.name} for ${cost} gold coins`});\n              }\n              }>Hire for {cost} gold coins</Button>\n            </Space>\n          </Card>);\n      })}\n    </>\n  );\n}","import { Layout } from \"antd\";\n\nimport CityMenu from './city-menu';\nimport Overview from './city-overview';\nimport Guild from '../guild';\nimport Market from '../market';\nimport Tavern from '../tavern';\n\nconst { Sider, Content } = Layout;\n\n\nexport default function City({dispatch, state}) {\n  const city = state.city;\n\n  return (\n    <Layout>\n      <Sider\n        theme=\"light\"\n        style={{\n          overflow: \"auto\",\n          height: \"100vh\",\n          position: \"fixed\",\n          left: 0,\n        }}\n      >\n        <CityMenu dispatch={dispatch} />\n      </Sider>\n      <Layout style={{ marginLeft: 200, height: \"100vh\" }}>\n        <Content style={{ background: 'white', padding: 10, margin: \"24px 16px 0\", overflow: \"initial\"}}>\n            {renderContent(dispatch, state)}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\n\nfunction renderContent(dispatch, state) {\n  switch(state.city.selectedItem) {\n    case 'Overview': \n      return <Overview dispatch={dispatch} state={state} />\n    case 'Guild':\n      return <Guild dispatch={dispatch} state={state} />\n    case 'Market': \n      return <Market dispatch={dispatch} state={state} />\n    case 'Tavern': \n      return <Tavern dispatch={dispatch} state={state} />\n\n    default:\n      return \"No content\";\n  }\n}","export function getRandomNumber(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport function getRandomInt(min, max) {\n  return Math.round(Math.random() * (max - min) + min);\n}\n\nexport function getRandomColor() {\n  return `#${Math.floor(Math.random()*16777215).toString(16)}`;\n}","import getRandomName from './getRandomName';\nimport {getRandomInt, getRandomColor} from './random';\n\nlet id = 0;\n\nfunction getRandomType() {\n  return Math.random() > 0.5 ? 'warrior' : 'mage';\n}\n\nfunction getRandomStats() {\n  return {\n    health: getRandomInt(8, 10),\n    strength: getRandomInt(1, 3),\n    willpower: getRandomInt(1, 3),\n    endurance: getRandomInt(1, 3),\n    agility: getRandomInt(1, 3)\n  }\n}\n\nfunction getInitialData() {\n  return {\n    missions: 0,\n    daysInGuild: 0,\n  }\n}\n\nexport default function createMember(name = getRandomName(), color = getRandomColor(), type = getRandomType(), stats = getRandomStats(), data = getInitialData()) {\n  return {\n    id: id++,\n    name,\n    color,\n    items: [],\n    gold: 0,\n    exp: 0,\n    level: 1,\n    type,\n    task: null,\n    stats,\n    computedStats: stats,\n    data\n  } \n}\n\n","export default function getRandomName() {\n  return \"name\";\n}","import React, { useReducer } from \"react\";\nimport { notification } from 'antd';\n\nimport reducer from '../redux/reducer';\nimport City from './city';\nimport createMember from '../utils/createMember';\n\nexport default function World() {\n  const [api, contextHolder] = notification.useNotification();\n\n  const [state, dispatch] = useReducer(reducer, {\n    guild: {\n      stats: {\n        name: \"Tainor\",\n        gold: 0,\n        members: [createMember(\"Hoijof\", \"indigo\")],\n        items: [],\n      },\n      selectedItem: 'Overview' \n    },\n    city: {\n      selectedItem: 'Overview',\n    },\n    tavern: {\n      recruits: [1,2,3,4,5,6,7,8,9,10].map(() => createMember())\n    },\n    selectedCity: 'City',\n    day: 0,\n    notify: api\n  });\n\n\n  return (\n    <>\n      {contextHolder}\n      {renderContent(dispatch, state)}\n    </>\n  )\n}\n\nfunction renderContent(dispatch, state) {\n  switch(state.selectedCity) {\n    case 'City': \n      return <City dispatch={dispatch} state={state} />\n\n    default:\n      return \"No city to render\";\n  }\n}","import World from './components/world';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <World />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import './mvp.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}