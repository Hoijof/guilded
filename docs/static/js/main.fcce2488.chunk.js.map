{"version":3,"sources":["redux/selectors.js","utils/consts.js","utils/ticker/tickerUtils.js","utils/event.js","utils/names.js","utils/random.js","utils/members.js","utils/quest/questUtils.js","utils/quest/fetch.js","utils/quest/index.js","utils/quest/createQuestEvent.js","utils/renderStats.js","utils/styles.js","components/guild/members.js","utils/guild/createGuildEvents.js","utils/ticker/index.js","redux/reducer.js","components/city/city-menu.js","components/city/city-overview.js","components/guild/stats.js","components/guild/overview.js","components/guild/quests.js","components/city-building/menu.js","components/city-building/index.js","components/guild/index.js","components/market/index.js","components/tavern/overview.js","components/tavern/recruits.js","components/tavern/quests.js","components/tavern/index.js","components/city/index.js","components/world.js","utils/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["getTicker","state","ticker","getNamespacedDefaultMenu","stateNamespace","selectedItem","getActiveEvents","activeEvents","getGuild","guild","getGuildMembers","stats","members","getQuests","quests","getAcceptedQuests","filter","quest","accepted","TIME_OF_THE_DAY","MONTHS","EVENT_TYPES","QUEST_TYPES","SEXES","MALE","FEMALE","LOCATIONS","isToday","date","year","month","day","getTimeInFuture","startTime","difference","getTimeFromHours","getTotalHours","getCurrentTime","hour","getHumanTime","time","getDifference","endTime","hours","Math","floor","createEvent","start","end","name","description","type","startHandler","endHandler","rescheduleEvent","event","startDate","endDate","femaleNames","maleNames","surnames","getRandomInt","min","max","round","random","getRandomNumber","getRandomColor","toString","isHappening","prob","getRandomName","sex","length","getRandomSurname","id","getRandomType","getRandomStats","health","energy","strength","willpower","endurance","agility","getMemberCost","member","statsCost","Object","values","reduce","total","stat","level","createMember","surname","color","data","missions","yearsInGuild","items","gold","exp","task","location","computedStats","getMemberFullName","getMemberTravelCapacity","modifyEnergy","change","computedEnergy","createStepTravelFor","questValue","store","currentTime","memberTravelCapacity","assignee","timeTraveling","dispatch","addLog","message","travelCapacity","maxTravelCapacity","consumeTravelCapacity","steps","splice","remainingQuestValue","memberRestTime","ceil","getMemberRestTime","payload","createRestEvent","logId","log","logs","push","createdAt","createStepQuestObjective","firstTime","execute","Number","prototype","map","in_min","in_max","out_min","out_max","this","lastId","createQuest","expiresAt","reward","active","completed","startedAt","generateStepsFetch","addRandomQuestData","advanceQuest","shift","completeQuest","executeStep","events","todayEvents","createQuestEvent","numberOfQuests","isAfter","forEach","i","getStatColor","computedStat","renderStats","keys","statName","Text","sumStats","acc","renderData","cardStyle","width","float","margin","Typography","Panel","Collapse","Members","useContext","AppContext","key","style","title","extra","height","background","direction","fontSize","cursor","onClick","ghost","marginLeft","header","createGuildCheckupEvent","getAcceptedAndNotDepartedQuests","startQuest","checkupQuests","computeDayEvents","tick","stageProgress","setStageProgress","isPaused","ticks","advanceStage","indexOf","checkEvents","currentStage","callADay","getNextTime","callAYear","callAMonth","displayName","initialize","totalEvents","festivityOne","console","festivityTwo","questEvent","guildCheckupEvent","reducer","action","computedAction","includes","update","$set","stageSpeed","memberIndex","updatedMember","$splice","$push","tavern","recruits","city","selectedMember","$apply","cityMenu","className","onSelect","theme","mode","defaultSelectedKeys","Item","CityOverview","Stats","value","orientation","size","bordered","dataSource","renderItem","item","Overview","Title","Paragraph","Quests","getStarted","Quest","strong","Log","label","CityMenu","defaultItem","menuItems","Header","Layout","Content","renderContent","find","CityBuilding","padding","overflow","Guild","Market","Recruits","cost","canHire","disabled","notify","info","drawStarTimes","times","result","StarOutlined","renderExpireTime","useState","setSelectedMember","SelectHeroDropdown","onChange","menu","overlay","e","preventDefault","DownOutlined","Tavern","Sider","City","position","left","React","createContext","World","notification","useNotification","api","contextHolder","useReducer","questsCreated","questStarted","questsCompleted","selectedCity","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","useHotkeys","window","Provider","bottom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcce2488.chunk.js","sourcesContent":["export function getTicker(state) {\n  return state.ticker;\n}\n\nexport function getNamespacedDefaultMenu(state, stateNamespace) {\n  return state[stateNamespace].selectedItem;\n}\n\nexport function getActiveEvents(state) {\n  return getTicker(state).activeEvents;\n}\n\nexport function getGuild(state) {\n  return state.guild;\n}\n\nexport function getGuildMembers(state) {\n  return getGuild(state).stats.members;\n}\n\n// #region Quests\n\nexport function getQuests(state) {\n  return state.quests.quests;\n}\n\nexport function getAcceptedQuests(state) {\n  return getQuests(state).filter(quest => quest.accepted);\n}\n\nexport function getAcceptedAndNotDepartedQuests(state) {\n  return getAcceptedQuests(state).filter(quest => !quest.startedAt);\n}\n\n//#endregion\n\n","export const SLOW_STAGE_SPEED = 1500;\nexport const INIT_STAGE_SPEED = 750;\nexport const FAST_STAGE_SPEED = 400;\nexport const MONTH_LENGTH = 15;\n\nexport const QUEST_ARRIVAL_TIME = 12;\nexport const GUILD_QUEST_DEPARTURE_TIME = 6;\n\nexport const TIME_OF_THE_DAY = {\n  MORNING: 'Morning',\n  AFTERNOON: 'Afternoon',\n  EVENING: 'Evening',\n  NIGHT: 'Night'\n};\n\nexport const MONTHS = [\n  'Decembary',\n  'Aprimay',\n  'Jugust',\n  'Septober'\n];\n\nexport const EVENT_TYPES = {\n  QUEST: 'QUEST',\n  EVENT: 'EVENT'\n};\n\nexport const QUEST_TYPES = {\n  GO_FETCH: 'Go Fetch'\n};\n\nexport const SEXES = {\n  MALE: 'male',\n  FEMALE: 'female'\n};\n\nexport const LOCATIONS = {\n  GUILD: 'Guild',\n  TRAVELING: 'Traveling',\n  CITY: 'City',\n  CAMP: 'Camp'\n};\n\nexport const MAX_ENERGY_RECOVERY_TIME = 4;","import { TIME_OF_THE_DAY, MONTHS } from '../consts';\n\n\n\nexport function isToday(ticker, date) {\n  return ticker.year === date[0] && ticker.month === date[1] && ticker.day === date[2];\n}\n\nexport function getTimeInFuture(startTime, difference) {\n  return getTimeFromHours(getTotalHours(startTime) + difference);\n}\n\nexport function getCurrentTime(ticker) {\n  return [ticker.year, ticker.month, ticker.day, ticker.hour];\n}\n\nexport function getHumanTime(time) {\n  const day = time[2] > 10 ? time[2] : `0${time[2]}`;\n\n  return `${day}/${MONTHS[time[1]]}/${time[0]}`;\n}\n\n// [475, 0, 3, 12] [475, 0, 3, 5]\nexport function isAfter(startTime, endTime) {\n  return getDifference(startTime, endTime) < 0;\n}\n\nexport function getDifferenceTime(startTime, endTime) {\n  return getTimeFromHours(getDifference(startTime, endTime));\n}\n\nexport function getDifference(startTime, endTime) {\n  return getTotalHours(endTime) - getTotalHours(startTime);\n}\n\n/*\n  year: 4 * 15 * 24 = 1440\n*/\nexport function getTotalHours(time) {\n  return time[0] * 1440 + time[1] * 360 + (time[2] - 1) * 24 + time[3];\n}\n\nexport function getTimeFromHours(hours) {\n  return [Math.floor(hours / 1440), Math.floor((hours / 360) % 4), Math.floor((hours / 24) % 15) + 1, hours % 24];\n}\n\n\nexport function getNextTime(currentStage) {\n  switch(currentStage) {\n    case TIME_OF_THE_DAY.MORNING:\n      return TIME_OF_THE_DAY.AFTERNOON;\n    case TIME_OF_THE_DAY.AFTERNOON:\n      return TIME_OF_THE_DAY.EVENING;\n    case TIME_OF_THE_DAY.EVENING:\n      return TIME_OF_THE_DAY.NIGHT;\n  }\n}\n","export function createEvent(start, end, name, description, type, startHandler, endHandler) {\n  return {\n    start,\n    end,\n    name,\n    description,\n    type,\n    startHandler,\n    endHandler\n  };\n}\n\nexport function rescheduleEvent(event, startDate, endDate) {\n  return createEvent(startDate, endDate, event.name, event.description, event.type, event.startHandler, event.endHandler);\n}\n\nexport default {\n  createEvent,\n  rescheduleEvent\n};","export const femaleNames = [\"Aekkein\", \"Erna\", \"Gica\", \"Iris\", \"Laen\", \"Oanei\", \"Urusla\", \"Unt\", \"Zy\", \"Giny\", \"Teni\", \"Tania\",\n\t\"Tenisa\", \"Falish\", \"Tirs\", \"Bera\", \"Boria\", \"Terkia\", \"Tronash\", \"Si\", \"Gi\", \"Ti\", \"Fi\", \"Di\", \"Mi\", \"Peli\", \"Irnia\", \"Beth\",\n   \"Riven\", \"Vi\", \"Lio\"];\n\nexport const maleNames = [\"Anttirnet\", \"Carnil\", \"Estiv\", \"Halt\", \"Hoijof\", \"Laen\", \"Lisiern\", \"Berin\", \"Ton\", \"Shome\", \"Regit\",\n\t\"Lurin\", \"Maers\", \"Musten\", \"Oanei\", \"Raesh\", \"Terio\", \"Unt\", \"Ust\", \"Redik\", \"James\", \"Loki\", \"Tem\", \"Regot\",\n\t\"Josh\", \"Tom\" ,\"Jei\", \"Lioth\"];\n\nexport const surnames = [\"Golpeo\", \"Anorda\", \"Severnin\", \"Part\", \"Kek-vek-loah\", \"Vaen\", \"Nerivin\", \"Haeshi\", \"Vin-ti-selh\",\n\t\"Ver-to\", \"Vintoret\", \"Da Teri\", \"Von Bien\", \"Maer\", \"Serisn\", \"Vintaren\", \"Bertis\", \"Tetirit\", \"Tornet\", \"Bellabi\",\n\t\"Geron\", \"Tornes\", \"Gorez\", \"Lorez\", \"Gareth\"];\n\nexport const townNames = [\"Laptius\", \"Birnicie\", \"Gerina\", \"Olvinast\", \"Maktius\", \"New Berinet\", \"Berinet\", \"Old Berinet\",\n\t\"Not So Old Berinet\", \"Dantias\", \"Maktius\", \"Bluelake\", \"Pryland\", \"Crystalsage\"];\n\nexport const townFirstNames = [\"Great\", \"Big\", \"Blue\", \"Black\", \"Greay\", \"Nordic\", \"Rapid\", \"Shadow\", \"Violet\", \"White\", \"Gold\", \"Silver\",\n\t\"Bronze\", \"Iron\", \"Stone\", \"Water\", \"Rose\", \"Cold\", \"Cor\", \"Coast\", \"Bright\", \"Well\", \"Butter\", \"Dork\", \"Wind\", \"Orba\", \"North\",\n\t\"Wolf\", \"South\", \"East\", \"West\"];\n\nexport const townSecondNames = [\"shore\", \"size\", \"port\", \"fox\", \"ham\", \"mill\", \"mere\", \"gate\", \"bush\", \"bank\", \"way\", \"dedge\",\n\t\"keep\", \"cliff\", \"row\", \"mount\", \"river\", \"sea\", \"fall\", \"flea\", \"wald\", \"crest\", \"wick\", \"well\", \"mead\"];","import { maleNames, femaleNames, surnames } from './names';\nimport { SEXES } from './consts';\n\nexport function getRandomNumber(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport function getRandomInt(min, max) {\n  return Math.round(getRandomNumber(min, max));\n}\n\nexport function getRandomColor() {\n  return `#${Math.floor(Math.random()*16777215).toString(16)}`;\n}\n\n/*\n* Gets a random int from 1 to the number passed\n*/\nexport function roll(max) {\n return getRandomInt(0, max);\n}\n\n/*\n * Returns true or false based in a % probability\n*/\nexport function isHappening(prob) {\n\treturn getRandomInt(0, 100) <= prob;\n}\n\nexport function getRandomName(sex = SEXES.MALE) {\n\tif (sex == SEXES.MALE) {\n\t\treturn maleNames[getRandomInt(0,maleNames.length-1)];\n\t} else if (sex == SEXES.FEMALE) {\n\t\treturn femaleNames[getRandomInt(0,femaleNames.length-1)];\n\t}\n\treturn 'Bernt'; \n}\n\nexport function getRandomSurname() {\n\treturn surnames[getRandomInt(0,surnames.length-1)];\n}","import { SEXES, LOCATIONS, MAX_ENERGY_RECOVERY_TIME } from './consts';\nimport {getRandomInt, getRandomNumber ,getRandomColor, getRandomName, getRandomSurname} from './random';\n\nlet id = 0;\n\nfunction getRandomType() {\n  return Math.random() > 0.5 ? 'warrior' : 'mage';\n}\n\nfunction getRandomStats() {\n  return {\n    health: getRandomInt(8, 10),\n    energy: getRandomInt(8, 10),\n    strength: getRandomInt(1, 3),\n    willpower: getRandomInt(1, 3),\n    endurance: getRandomInt(1, 3),\n    agility: getRandomInt(1, 3)\n  }\n}\n\nfunction getInitialData() {\n  return {\n    missions: 0,\n    yearsInGuild: 0,\n  }\n}\n\nexport function getMemberCost(member) {\n  const statsCost = Object.values(member.stats).reduce((total, stat) => {\n    return total + stat;\n  }, 0);\n  \n  return ((member.level * 5) + statsCost);\n}\n\nexport function createMember(\n  name, sex = SEXES[getRandomInt(0,1)], surname = getRandomSurname(), \n  color = getRandomColor(), type = getRandomType(), stats = getRandomStats(),\n  data = getInitialData()) {\n\n  return {\n    id: id++,\n    sex,\n    name: name ? name :  getRandomName(sex),\n    surname,\n    color,\n    items: [],\n    gold: 0,\n    exp: 0,\n    level: 1,\n    type,\n    task: null,\n    location: LOCATIONS.GUILD,\n    stats,\n    computedStats: {...stats},\n    data\n  } \n}\n\nexport function getMemberFullName(member) {\n  return `${member.name} ${member.surname}`;\n}\n\nexport function getMemberTravelCapacity(member) {\n  const {energy, endurance, agility } = member.computedStats;\n\n  return energy === 0 ? 0 : Math.floor((energy + endurance + agility) / 2);\n}\n\nexport function consumeTravelCapacity(member, travelCapacity) {\n  const maxTravelCapacity = getMemberTravelCapacity(member);\n\n  const energyToConsume = -(member.computedStats.energy * travelCapacity) / maxTravelCapacity;\n\n  modifyEnergy(member, energyToConsume);\n}\n\nexport function modifyEnergy(member, change) {\n  member.computedStats.energy += Math.floor(change);\n\n  if (member.computedStats.energy < 0) {\n    member.computedStats.energy = 0;\n  } else if (member.computedStats.energy > member.stats.energy) {\n    member.stats.computedEnergy = member.stats.energy;\n  }\n}\n\nexport function getMemberRestTime(member) {\n  const { energy } = member.stats;\n  const { energy: computedEnergy } = member.computedStats;\n\n  return Math.ceil((energy - computedEnergy) / (energy / MAX_ENERGY_RECOVERY_TIME));\n}\n\nexport function restMemberFor(member, hours) {\n  const { energy } = member.stats;\n  \n  const recoveryRation = (energy / MAX_ENERGY_RECOVERY_TIME);\n\n  modifyEnergy(member, recoveryRation * hours);\n}","import { getTicker } from '../../redux/selectors';\nimport { createEvent }  from '../event';\nimport { getTimeInFuture, getCurrentTime } from '../ticker/tickerUtils';\nimport { EVENT_TYPES, LOCATIONS } from '../consts';\nimport { restMemberFor, getMemberRestTime, getMemberTravelCapacity, consumeTravelCapacity } from '../members';\n\nexport function createStepTravelFor(quest, questValue) {\n  return (store) => {\n    const ticker = getTicker(store);\n    const currentTime = getCurrentTime(ticker);\n    currentTime[3]++;\n\n    const memberTravelCapacity = getMemberTravelCapacity(quest.assignee);\n    const timeTraveling = memberTravelCapacity >= questValue ? questValue : memberTravelCapacity;  \n    const endTime = getTimeInFuture(currentTime, timeTraveling);\n\n    // Travel event needs to be first in case we have this scenario [travel, rest]\n    return createEvent(currentTime, endTime, 'Quest Traveling', 'None', EVENT_TYPES.QUEST,\n      (dispatch, state, event) => {\n        addLog(state, quest, `Going to travel for ${timeTraveling} of ${questValue} hours.`);\n        \n        quest.assignee.location = LOCATIONS.TRAVELING;\n      }, (dispatch, state, event) => {\n        let message = 'We arrived at our destination';\n\n        consumeTravelCapacity(quest.assignee, timeTraveling);\n\n        if (timeTraveling < questValue) {\n          quest.steps.splice(1, 0, createRestEvent(quest, questValue - memberTravelCapacity));\n\n          message = \"We have to stop due to lack of energy.\";\n        } \n\n        \n        quest.assignee.location = LOCATIONS.CITY;\n        \n        addLog(state, quest, message);\n\n        dispatch({type: 'advanceQuest', payload: quest});\n      })\n  };\n}\n\nexport function createRestEvent(quest, remainingQuestValue) {\n  return (store) => {\n    const ticker = getTicker(store);\n    const currentTime = getCurrentTime(ticker);\n    currentTime[3]++;\n\n    const memberRestTime = getMemberRestTime(quest.assignee);\n    const endTime = getTimeInFuture(currentTime, memberRestTime);\n\n    // Travel event needs to be first in case we have this scenario [travel, rest]\n    return createEvent(currentTime, endTime, 'Quest Resting', 'None', EVENT_TYPES.QUEST,\n      (dispatch, state, event) => {\n        addLog(state, quest, `Going to rest for ${memberRestTime} hours.`);\n\n        quest.assignee.location = LOCATIONS.CAMP\n\n      }, (dispatch, state, event) => {\n        addLog(state, quest, `We are rested!`);\n\n        restMemberFor(quest.assignee, memberRestTime);\n\n        quest.steps.splice(1, 0, createStepTravelFor(quest, remainingQuestValue));\n\n        quest.assignee.location = LOCATIONS.TRAVELING;\n\n        dispatch({type: 'advanceQuest', payload: quest});\n      })\n  };\n}\n\nlet logId = 0;\n\nexport function addLog(state, quest, log) {\n  quest.logs.push({\n    id: ++logId,\n    createdAt: getCurrentTime(getTicker(state)),\n    log\n  });\n}\n\n","import { getTicker } from '../../redux/selectors';\nimport { createEvent }  from '../event';\nimport { getTimeInFuture, getCurrentTime } from '../ticker/tickerUtils';\nimport { EVENT_TYPES, QUEST_TYPES } from '../consts';\nimport { createStepTravelFor, addLog } from './questUtils';\nimport { isHappening } from '../random';\n\n\nfunction createStepQuestObjective(quest, firstTime = true) {\n  const execute = (store) => {\n    const ticker = getTicker(store);\n    const currentTime = getCurrentTime(ticker);\n    currentTime[3]++;\n\n    const endTime = getTimeInFuture(currentTime, 3);\n\n    return createEvent(currentTime, endTime, 'Executing Quest', 'None', EVENT_TYPES.QUEST,\n      (dispatch, state, event) => {\n        if (firstTime) {\n          addLog(store, quest, 'Started searching for the thing.');\n        }\n      }, (dispatch, state, event) => {\n        if (!isHappening(50)) {\n          addLog(store, quest, \"Couldn't find the thing. We'll try again.\");\n\n          quest.steps.splice(1, 0, createStepQuestObjective(quest, false));\n        } else {\n          addLog(store, quest, 'Found the thing.');\n        }\n\n        dispatch({type: 'advanceQuest', payload: quest});\n      })\n  };\n  \n  return execute;\n}\n\nexport default function generateStepsFetch(quest, questValue) {\n  return [\n    createStepTravelFor(quest, questValue),\n    createStepQuestObjective(quest, QUEST_TYPES.GO_FETCH, questValue),\n    createStepTravelFor(quest, questValue)\n  ];\n}","import { getTicker } from '../../redux/selectors';\nimport { getRandomInt } from '../random';\nimport { LOCATIONS } from '../consts';\nimport { getCurrentTime, getTimeInFuture } from '../ticker/tickerUtils';\n\n\n// Quest types\nimport generateStepsFetch from './fetch';\nimport { addLog } from './questUtils';\n\n/*\n * Returns a number of a range mapped into another range\n*/\nNumber.prototype.map = function ( in_min , in_max , out_min , out_max ) {\n  return ( this - in_min ) * ( out_max - out_min ) / ( in_max - in_min ) + out_min;\n};\n\nlet lastId = 0;\n\nexport default function createQuest(state) {\n  const id = ++lastId;\n  const ticker = getTicker(state);\n\n  const expiresAt = getTimeInFuture(getCurrentTime(ticker), getRandomInt(1, 4) * 24);\n\n  const quest = {\n    id,\n    name: 'No name',\n    description: 'No Description',\n    steps: [],\n    reward: 0,\n    questValue: 0,\n    level: 1,\n    accepted: false,\n    active: false,\n    completed: false,\n    assignee: null,\n    logs: [],\n    createdAt: getCurrentTime(ticker),\n    expiresAt,\n    startedAt: null\n  }\n\n  addRandomQuestData(quest);\n\n  return quest;\n}\n\nfunction addRandomQuestData(quest) {\n  // Value in hours\n  const questValue = getRandomInt(2, 8);\n\n  quest.name = 'Go Fetch';\n  quest.level = questValue.map(2,8,1,5);\n  quest.description = 'Go find something somewhere';\n  quest.reward =  Math.round(questValue * 2 + getRandomInt(-3, 4));\n  quest.steps = generateStepsFetch(quest, questValue);\n}\n\nexport function acceptQuest(state, quest, member) {\n  quest.accepted = true;\n  quest.assignee = member;\n  member.task = quest;  \n}\n\nexport function startQuest(state, quest) {\n  quest.startedAt = getCurrentTime(getTicker(state));\n  quest.active = true;\n\n  executeStep(state, quest);\n}\n\nexport function advanceQuest(state, quest) {\n  quest.steps.shift()\n\n  if (quest.steps.length === 0) {\n    return completeQuest(state, quest);\n  }\n\n  executeStep(state, quest);\n}\n\nexport function executeStep(state, quest) {\n  const event = quest.steps[0](state);\n  const ticker = getTicker(state);\n\n  ticker.events.push(event);\n  ticker.todayEvents.push(event);\n}\n\nfunction completeQuest(state, quest) {\n  quest.completed = true;\n  quest.active = false;  \n\n  quest.assignee.task = null;\n  quest.assignee.location = LOCATIONS.GUILD;\n\n  addLog(state, quest, 'Quest completed');\n} \n\n","import { getTicker, getQuests } from '../../redux/selectors';\nimport { createEvent, rescheduleEvent } from '../event';\nimport { getTimeInFuture, getCurrentTime, isAfter } from '../ticker/tickerUtils';\nimport { EVENT_TYPES, QUEST_ARRIVAL_TIME } from '../consts';\nimport { getRandomInt } from '../random';\nimport createQuest from './index';\n\nexport function createQuestEvent(ticker) {\n  const startTime = getCurrentTime(ticker);\n  startTime[3] = QUEST_ARRIVAL_TIME;\n\n  return createEvent(\n    startTime,\n    getTimeInFuture(startTime, 1),\n    'New quest just arrived!',\n    'We may have got new quests from the capital',\n    EVENT_TYPES.EVENT,\n    (dispatch, state, event) => {\n      const numberOfQuests = getRandomInt(0, 4);\n\n      const questsToExpire = getQuests(state).filter(quest => {\n        const isExpired = isAfter(getCurrentTime(ticker), quest.expiresAt);\n\n        return isExpired && !quest.accepted;\n      });\n      \n      questsToExpire.forEach(quest => {\n        dispatch({type: 'removeQuest', payload: quest})\n      });\n\n      for (let i = 0; i < numberOfQuests; ++i) {\n        dispatch({type: 'addQuest', payload: createQuest(state)});\n      }\n    }, (dispatch, state, event) => {\n      const ticker = getTicker(state);\n      const startTime = getTimeInFuture(getCurrentTime(ticker), 24);\n\n      startTime[3] = QUEST_ARRIVAL_TIME;\n\n      ticker.events.push(rescheduleEvent(event, startTime, getTimeInFuture(startTime, 1)));\n    });\n}","import { Typography } from 'antd';\n\nexport function getStatColor(stat, computedStat) {\n  if (computedStat > stat) {\n    return 'success';\n  }\n\n  if (computedStat < stat) {\n    return 'danger';\n  }\n\n  return 'default';\n}\n\nexport default function renderStats(member) {\n  return Object.keys(member.stats).map((statName) => {\n    const stat = member.stats[statName];\n    const computedStat = member.computedStats[statName];\n\n    return <Typography.Text key={statName} type={getStatColor(stat, computedStat)}>{statName}: {computedStat}</Typography.Text>\n  });\n}\n\nexport function sumStats(member) {\n  return Object.keys(member.stats).reduce((acc, statName) => {\n    const stat = member.stats[statName];\n\n    return acc + stat;\n  }, 0) - member.stats.health;\n}\n\nexport function renderData(member) {\n  return Object.keys(member.data).map((statName) => {\n    const data = member.data[statName];\n\n    return <Typography.Text key={statName} >{statName}: {data}</Typography.Text>\n  });\n}","export const cardStyle = {\n  width: 200,\n  float: 'left',\n  margin: 5\n};\n\n/*\n * Formats a number and returns it with a given length\n*/\nexport function formatNumberLength(num, length) {\n\tlet r = \"\" + num;\n\twhile (r.length < length) {\n\t\tr = \"0\" + r;\n\t}\n\treturn r;\n}","\nimport React, { useContext } from 'react';\nimport { AppContext } from '../world';\nimport { Card, Typography, Space, Collapse } from 'antd';\n\n\nimport renderStats, {sumStats, renderData} from '../../utils/renderStats';\nimport { cardStyle } from '../../utils/styles';\n\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Members() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <>\n      {state.guild.stats.members.map((member, key) => {\n        return (\n          <Card key={key} style={cardStyle} title={member.name} extra={<div style={{width: 15, height: 15, background: member.color}}></div>}>\n            <Space style={{width: '100%'}} direction=\"vertical\">\n              <Text>Gold: {member.gold} <Text style={{fontSize: 18, cursor: 'pointer'}} onClick={() => {dispatch({type: \"addGoldToMember\", payload: member})}}>+</Text></Text>\n              <Text>Level: {member.level} ({member.exp} / {member.level * 2}) {member.exp > member.level * 2 ? '▲' : null}</Text>\n              <Text>Type: {member.type}</Text>\n              <Text>Location: {member.location}</Text>\n              <Text>Task: {member.task ? member.task.name : \"None\"}</Text>\n              <Collapse ghost style={{marginLeft: -15}}>\n                <Panel header={`Stats (${sumStats(member)})`} key=\"1\">\n                  <Space style={{width: '100%'}} direction=\"vertical\">\n                    {renderStats(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n              <Collapse ghost style={{marginLeft: -15}}>\n                <Panel header=\"Data\" key=\"2\">\n                  <Space style={{width: '100%'}} direction=\"vertical\">\n                    {renderData(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n            </Space>\n          </Card>);\n      })}\n    </>\n  )\n}\n\nMembers.displayName = 'Members';","import { getTicker, getQuests, getAcceptedAndNotDepartedQuests } from '../../redux/selectors';\nimport { createEvent, rescheduleEvent } from '../event';\nimport { getTimeInFuture, getCurrentTime, isAfter } from '../ticker/tickerUtils';\nimport { EVENT_TYPES, GUILD_QUEST_DEPARTURE_TIME } from '../consts';\nimport { startQuest } from '../quest';\nimport Members from '../../components/guild/members';\n\nexport function createGuildCheckupEvent(ticker) {\n  const startTime = getTimeInFuture(getCurrentTime(ticker), 24);\n  startTime[3] = GUILD_QUEST_DEPARTURE_TIME;\n\n  return createEvent(\n    startTime,\n    getTimeInFuture(startTime, 1),\n    'Performing daily guild checkup',\n    'May they have luck!',\n    EVENT_TYPES.EVENT,\n    (dispatch, state, event) => {\n      checkupQuests(state);\n    }, (dispatch, state, event) => {\n      const ticker = getTicker(state);\n      const startTime = getTimeInFuture(getCurrentTime(ticker), 24);\n\n      startTime[3] = GUILD_QUEST_DEPARTURE_TIME;\n\n      ticker.events.push(rescheduleEvent(event, startTime, getTimeInFuture(startTime, 1)));\n    });\n}\n\nfunction checkupQuests(state) {\n  getAcceptedAndNotDepartedQuests(state).forEach(quest => {\n    startQuest(state, quest);\n  });\n}","import { getTicker } from '../../redux/selectors';\nimport { isToday, getNextTime } from './tickerUtils';\nimport { createEvent, rescheduleEvent } from '../event';\nimport { createQuestEvent } from '../quest/createQuestEvent';\nimport { createGuildCheckupEvent } from '../guild/createGuildEvents';\n\nimport { MONTH_LENGTH, TIME_OF_THE_DAY, EVENT_TYPES } from '../../utils/consts';\n\n\nlet ticker;\n\nfunction initialize() {\n  const ticker = {\n    currentStage: TIME_OF_THE_DAY.MORNING,\n    hour: 0,\n    day: 1,\n    month: 0,\n    year: 475,\n    todayEvents: [],\n    activeEvents:[],\n    events: [],\n    stats: {\n      totalEvents: 0,\n      ticks: 0\n    },\n    callADay,\n    advanceStage,\n    tick\n  };\n\n//#region Create default events\n  const festivityOne = createEvent([475, 0, 5, 8], [475, 0, 6, 0], 'Fifth of Decembrary', 'A very beautiful festivity', EVENT_TYPES.EVENT, (dispatch, state, event) => {\n    console.log(`It's ${event.name}  !!`);\n  }, (dispatch, state, event) => {\n    const ticker = getTicker(state);\n\n    ticker.events.push(rescheduleEvent(event, [ticker.year + 1, 0, 5, 8], [ticker.year + 1, 0, 6, 0]));\n  });\n\n  const festivityTwo = createEvent([475, 0, 1, 8], [475, 0, 8, 8], 'First Week of the year!', 'The very first week of the year', EVENT_TYPES.EVENT, (dispatch, state, event) => {\n    console.log(`It's ${event.name}  !!`);\n  }, (dispatch, state, event) => {\n    const ticker = getTicker(state);\n\n    ticker.events.push(rescheduleEvent(event, [ticker.year + 1, 0, 1, 8], [ticker.year + 1, 0, 8, 1]));\n  });\n\n  const questEvent = createQuestEvent(ticker);\n  const guildCheckupEvent = createGuildCheckupEvent(ticker);\n\n  ticker.events.push(festivityOne, festivityTwo, questEvent, guildCheckupEvent);\n\n  computeDayEvents({\n    ticker \n  });\n  \n//#endregion\n\n  return ticker;\n}\n\nfunction computeDayEvents(state) {\n  const ticker = getTicker(state);\n\n  ticker.todayEvents = ticker.events.filter((event) => {\n    return isToday(ticker, event.start) || isToday(ticker, event.end);\n  });\n}\n\nfunction checkEvents(dispatch, state) {\n  const ticker = getTicker(state);\n\n  // Events that start\n  ticker.todayEvents.filter((event) => {\n    return (isToday(ticker, event.start) && event.start[3] === ticker.hour)\n  }).forEach((event) => {\n    event.startHandler(dispatch, state, event);\n    ticker.activeEvents.push(event);\n  });\n\n  // Events that end\n  ticker.todayEvents.filter((event) => {\n    return (isToday(ticker, event.end) && event.end[3] === ticker.hour)\n  }).forEach((event) => {\n    event.endHandler(dispatch, state, event);\n    ticker.events.splice(ticker.events.indexOf(event), 1);\n    ticker.activeEvents.splice(ticker.activeEvents.indexOf(event), 1);\n  });\n}\n\n\n//#region Ticking\n\nfunction tick(dispatch, state, stageProgress, setStageProgress) {\n  if (state.isPaused) {\n    return;\n  }\n\n  getTicker(state).stats.ticks++;\n  getTicker(state).hour++;\n\n  setStageProgress(stageProgress + 1);\n\n  if (stageProgress === 5) {\n    state.ticker.advanceStage(dispatch, state);\n  \n    setStageProgress(0);\n  }   \n\n  checkEvents(dispatch, state);\n}\n\nfunction advanceStage(dispatch, state) {\n  const ticker = getTicker(state);\n\n  if (ticker.currentStage === TIME_OF_THE_DAY.NIGHT) {\n    return callADay(dispatch, state);    \n  }\n\n  ticker.currentStage = getNextTime(ticker.currentStage);\n}\n\nfunction callADay(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.currentStage = TIME_OF_THE_DAY.MORNING;\n  ticker.hour = 0;\n  ticker.day++;\n\n\n  if (ticker.day > MONTH_LENGTH) {\n    callAMonth(dispatch, state);\n  }  \n\n  computeDayEvents(state);\n\n  // console.log(ticker.todayEvents, ticker.activeEvents, ticker.events)\n}\n\nfunction callAMonth(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.day = 1;\n  ticker.month++;\n\n  if (ticker.month === 4) {\n    callAYear(dispatch, state);\n  }\n}\n\nfunction callAYear(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.month = 0;\n  ticker.year++;\n}\n\nexport default {\n  initialize\n};\n","\n// https://github.com/kolodny/immutability-helper\nimport update from 'immutability-helper';\n\nimport { acceptQuest, advanceQuest } from '../utils/quest';\nimport { getMemberCost } from '../utils/members';\n\nexport default function reducer(state, action) {\n  const computedAction = typeof action === 'string' ? { type: action} : action;\n\n  if (!['increaseStageProgress', 'resetStageProgress'].includes(computedAction.type))\n  console.log(computedAction);\n  switch (computedAction.type) {\n      case 'changeSelectedMenu':\n        return update(state, {\n          selectedItem: {$set: computedAction.payload}\n        });\n      case 'switchPause':\n        return update(state, {\n          isPaused: {$set: !state.isPaused}\n        });\n      case 'changeStageSpeed':\n        return update(state, {\n          stageSpeed: {$set: state.stageSpeed + computedAction.payload}\n        }); \n      default:\n  }\n\n  // #region Menus\n  switch (computedAction.type) {\n    case 'changeSelectedContentMenu': \n      return update(state, {\n        [computedAction.payload.stateNamespace]: {\n          selectedItem: { $set: computedAction.payload.key}\n        }\n      });\n    default:\n  }\n\n  //#endregion\n\n  // Guild\n  switch (computedAction.type) {\n    case 'askFounding':\n      return update(state, {\n        guild: {\n          stats: {\n            gold: { $set: 25 }\n          }\n        }\n      });\n    case 'addGoldToMember':\n      var memberIndex = state.guild.stats.members.indexOf(computedAction.payload);\n      var updatedMember = update(computedAction.payload, { gold: { $set: computedAction.payload.gold + 5}});\n\n      return update(state, {\n        guild: {\n          stats: {\n            members: {\n              $splice: [[memberIndex, 1, updatedMember]]\n            },\n            gold: { $set: state.guild.stats.gold - 5}\n          }\n        }\n      });\n    case 'hireGuildMember':   \n      return update(state, {\n        guild: {\n          stats: {\n            members: { $push: [computedAction.payload] },\n            gold: { $set: state.guild.stats.gold - getMemberCost(computedAction.payload) }\n          }\n        },\n        tavern: {\n          recruits: { $splice: [[state.tavern.recruits.indexOf(computedAction.payload), 1]]}\n        }\n      });   \n    default:\n  }\n\n  // City\n  switch (computedAction.type) {\n    case 'changeSelectedCityMenu': \n      return update(state, {\n        city: {\n          selectedItem: { $set: computedAction.payload}\n        }\n      });\n    default:\n  }\n\n  // Quests\n  switch (computedAction.type) {\n    case 'addQuest':\n      return update(state, {\n        quests: { quests: {$push: [computedAction.payload] } }\n      });\n    case 'removeQuest': \n      return update(state, {\n        quests: {quests: { $splice: [[state.quests.quests.indexOf(computedAction.payload), 1]] }}\n      });\n    case 'acceptQuest': \n      acceptQuest(state, computedAction.payload.quest, computedAction.payload.selectedMember);\n\n      return  update(state, {\n        quests: {quests: { $splice: [[state.quests.quests.indexOf(computedAction.payload.quest), 1, computedAction.payload.quest]] }}\n      });\n    case 'advanceQuest': \n      advanceQuest(state, computedAction.payload);\n      \n      return update(state, {\n        quests: {quests: { $splice: [[state.quests.quests.indexOf(computedAction.payload), 1, computedAction.payload]] }}\n      });\n    case 'closeQuest':\n      return update(state, {\n        guild: {\n          stats: {\n            gold: {$apply: (gold) => gold + computedAction.payload.reward}\n          }\n        },\n        quests: {quests: { $splice: [[state.quests.quests.indexOf(computedAction.payload), 1]] }}\n      });\n    default:\n  }\n\n  console.log(\"returning Default\");\n  return state;\n}\n\n\n/*Available Commands\n{$push: array} push() all the items in array on the target.\n{$unshift: array} unshift() all the items in array on the target.\n{$splice: array of arrays} for each item in arrays call splice() on the target with the parameters provided by the item. Note: The items in the array are applied sequentially, so the order matters. The indices of the target may change during the operation.\n{$set: any} replace the target entirely.\n{$toggle: array of strings} toggles a list of boolean fields from the target object.\n{$unset: array of strings} remove the list of keys in array from the target object.\n{$merge: object} merge the keys of object with the target.\n{$apply: function} passes in the current value to the function and updates it with the new returned value.\n{$add: array of objects} add a value to a Map or Set. When adding to a Set you pass in an array of objects to add, when adding to a Map, you pass in [key, value] arrays like so: update(myMap, {$add: [['foo', 'bar'], ['baz', 'boo']]})\n{$remove: array of strings} remove the list of keys in array from a Map or Set.*/","import React, { useContext } from 'react';\nimport { AppContext } from '../world';\nimport { Menu } from 'antd';\n\nexport default function cityMenu() {\n  const { dispatch } = useContext(AppContext);\n\n  function changeMenuItem({ key }) {\n    dispatch({\n      type: 'changeSelectedCityMenu',\n      payload: key\n    });\n  }\n  \n  return (\n  <Menu className=\"CityMenu\" onSelect={changeMenuItem} theme=\"light\" mode=\"inline\" defaultSelectedKeys={[\"Overview\"]}>\n    <Menu.Item key=\"Overview\">Overview</Menu.Item>\n    <Menu.Item key=\"Guild\">Guild</Menu.Item>\n    <Menu.Item key=\"Market\">Market</Menu.Item>\n    <Menu.Item key=\"Tavern\">Tavern</Menu.Item>\n  </Menu>\n  );\n}\n\n","import React, { useContext } from 'react';\nimport { AppContext } from '../world';\nimport { getActiveEvents } from '../../redux/selectors';\n\nexport default function CityOverview() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <>\n      <h1>Overview</h1>\n\n      <h3>Active Events</h3>\n      \n      {getActiveEvents(state).map((event) => (<div key={event.name}>{event.name}</div>))}\n    </>\n  );\n}\n","import { AppContext } from '../world';\nimport React, { useContext } from 'react';\nimport { List, Typography, Divider } from 'antd';\n\nimport { getGuild, getAcceptedQuests } from '../../redux/selectors';\nexport default function Stats({name, gold, members}) {\n  const { state, dispatch } = useContext(AppContext);\n  const guild = getGuild(state);\n\n    const data = [\n        {name: \"name\", value: guild.stats.name},\n        {name: 'gold', value: guild.stats.gold},\n        {name: 'members', value: guild.stats.members.length},\n        {name: 'Active Quests', value: getAcceptedQuests(state).length}\n    ];\n    \n    return (\n        <>\n            <Divider orientation=\"left\">Stats</Divider>\n            <List\n                size=\"small\"\n                bordered\n                dataSource={data}\n                renderItem={item => (\n                    <List.Item>\n                        {item.name}: {item.value}\n                    </List.Item>\n                )}\n            />\n        </>\n    )\n}\n\nStats.displayName = 'Stats';","import React, { useContext } from 'react';\nimport { AppContext } from '../world';\nimport { Button } from 'antd';\n\nimport Stats from \"./stats\";\n\n\nexport default function Overview() {\n  const { state, dispatch } = useContext(AppContext);\n  const {gold, members} = state.guild.stats;\n\n  return (\n    <>\n      <Stats />\n      <br />\n      {gold === 0 && members.length === 1 ? (\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            dispatch({ type: \"askFounding\" });\n          }}\n        >\n          Ask for founding to the city council\n        </Button>\n      ) : null}\n    </>\n  );\n}\n\nOverview.displayName = \"Overview\";","import React, { useContext } from 'react';\nimport { AppContext } from '../world';\nimport { Card, Typography, Space, Collapse, Button, Timeline } from 'antd';\n\nimport { getAcceptedQuests } from '../../redux/selectors';\nimport { getMemberCost, getMemberFullName } from '../../utils/members';\nimport { getHumanTime } from '../../utils/ticker/tickerUtils';\nimport { addLog } from '../../utils/quest/questUtils';\n\nconst { Title, Paragraph, Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Quests() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <Collapse >\n      {getAcceptedQuests(state)\n      .map((quest, key) => {\n        return (\n          <Panel header={`${quest.name} `} key={quest.id} extra={getStarted(quest)}>\n            <Quest quest={quest} />\n          </Panel>\n        );\n      })}\n    </Collapse>\n  );\n}\nQuests.displayName = 'Quests';\n\nfunction getStarted(quest) {\n  if (!quest.startedAt) {\n    return 'Not yet departed';\n  }\n\n  return `Depart date: ${getHumanTime(quest.startedAt)}`\n}\n\nexport function Quest({ quest }) {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <>\n      <Paragraph>{quest.description}</Paragraph>\n      <Paragraph>The reward for completing this quest is <Text strong>{quest.reward} gold coins</Text>.</Paragraph>\n      \n      <Paragraph>This quest is assigned to: {getMemberFullName(quest.assignee)} </Paragraph>\n\n      <Title level={4}>Quest Log</Title>\n      \n      <Log quest={quest} />\n\n      {quest.completed && <Button onClick={() => { \n          dispatch({ type: 'closeQuest', payload: quest});\n          addLog(state, state.guild, `Finished quest ${quest.name} and earned ${quest.reward}`);\n      }}>\n        Close Quest \n      </Button>}\n    </>\n  );\n}\n\nexport function Log({ quest }) {\n  return (\n    <Timeline mode=\"right\">\n      {quest.logs.map((log) => {\n        return <Timeline.Item key={log.id} label={getHumanTime(log.createdAt)}>{log.log}</Timeline.Item>;\n      })}\n    </Timeline>\n  )\n}","import React, { useContext } from 'react';\nimport { AppContext } from '../world';\nimport { Menu } from 'antd';\n\nexport default function CityMenu({defaultItem, menuItems, stateNamespace}) {\n  const { dispatch } = useContext(AppContext);\n\n  function changeMenuItem({ key }) {\n    dispatch({\n      type: 'changeSelectedContentMenu',\n      payload: {\n        key,\n        stateNamespace\n      }\n    });\n  }\n  \n  return (\n  <Menu onSelect={changeMenuItem} theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={[defaultItem]} >\n    {menuItems.map(Item => <Menu.Item key={Item.displayName}>{Item.displayName}</Menu.Item>)}\n  </Menu>\n  );\n}\n\n","import React, { useContext } from 'react';\nimport { AppContext } from '../world';\nimport { Layout } from \"antd\";\n\nimport Menu from './menu';\nimport { getNamespacedDefaultMenu } from '../../redux/selectors';\n\nconst { Header, Content } = Layout;\n\nfunction renderContent(dispatch, state, menuItems, stateNamespace) {\n  const Content = menuItems.find((Item) => {\n    return Item.name === state[stateNamespace].selectedItem;\n  });\n\n  return Content ? <Content /> : \"error\";\n}\n\nexport default function CityBuilding({menuItems, stateNamespace}) {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <Layout style={{ background: 'white'}}>\n      <Header\n        theme=\"light\"\n        style={{\n          background: 'white',\n          padding: 0\n        }}\n      >\n        <Menu defaultItem={getNamespacedDefaultMenu(state, stateNamespace)} menuItems={menuItems} stateNamespace={stateNamespace} />\n      </Header>\n      <Content style={{ background: 'white', padding: 10, margin: \"24px 16px 0\", overflow: \"initial\"}}>\n          {renderContent(dispatch, state, menuItems, stateNamespace) }\n      </Content>\n    </Layout>\n  );\n}\n","import Overview from './overview';\nimport Members from './members';\nimport Quests from './quests';\n\nimport CityBuilding from '../city-building';\n\nexport default function Guild() {\n\n  return (\n    <CityBuilding menuItems={[Overview, Members, Quests]} stateNamespace=\"guild\" />\n  );\n}\n","export default function Market() {\n  return \"hola\"\n}","import React, { useContext } from 'react';\nimport { AppContext } from '../world';\nimport { Typography } from 'antd';\n\nconst { Text } = Typography;\n\nexport default function Overview() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return <Text>Welcome to the Tavern, please take a seat!</Text>\n}\n\nOverview.displayName = \"Overview\";","import React, { useContext } from \"react\";\nimport { AppContext } from \"../world\";\nimport { Card, Typography, Space, Collapse, Button } from \"antd\";\n\nimport { cardStyle } from '../../utils/styles';\nimport renderStats, { sumStats } from '../../utils/renderStats';\nimport { getMemberCost } from '../../utils/members';\n\nconst { Title, Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Recruits() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <>\n      <Title level={4}>Available Recruits</Title>\n\n      {state.tavern.recruits.map((member, key) => {\n        const cost = getMemberCost(member);\n        const canHire = state.guild.stats.gold >= cost;\n\n        return (\n          <Card\n            key={key}\n            style={cardStyle}\n            title={`${member.name} ${member.surname}`}\n            extra={\n              <div\n                style={{ width: 15, height: 15, background: member.color }}\n              ></div>\n            }\n          >\n            <Space style={{ width: \"100%\" }} direction=\"vertical\">\n              <Text>\n                Level: {member.level} ({member.exp} / {member.level * 2}){\" \"}\n                {member.exp > member.level * 2 ? \"▲\" : null}\n              </Text>\n              <Text>Type: {member.type}</Text>\n              <Collapse ghost style={{ marginLeft: -15 }}>\n                <Panel header={`Stats (${sumStats(member)})`} key=\"1\">\n                  <Space style={{ width: \"100%\" }} direction=\"vertical\">\n                    {renderStats(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n              <Button\n                type=\"primary\"\n                disabled={canHire ? false : true}\n                onClick={() => {\n                  dispatch({ type: \"hireGuildMember\", payload: member });\n\n                  state.notify.info({\n                    message: `You just hired ${member.name} for ${cost} gold coins`,\n                  });\n                }}\n              >\n                Hire for {cost} gold coins\n              </Button>\n            </Space>\n          </Card>\n        );\n      })}\n    </>\n  );\n}\n\nRecruits.displayName = 'Recruits';\n","import React, { useContext, useState } from \"react\";\nimport { AppContext } from \"../world\";\nimport { Card, Typography, Space, Collapse, Button, Menu, Dropdown } from \"antd\";\nimport { StarOutlined, StarFilled, DownOutlined } from '@ant-design/icons';\n\nimport { getGuildMembers, getTicker } from '../../redux/selectors';\nimport { getMemberFullName } from '../../utils/members';\nimport { getDifference, getHumanTime, getCurrentTime } from '../../utils/ticker/tickerUtils';\n\nconst { Title, Paragraph, Text } = Typography;\nconst { Panel } = Collapse;\n\nfunction drawStarTimes(times) {\n  const result = [];\n\n  for (let i = 0; i < times; i++) {\n    result.push(<StarOutlined key={i} />);\n  }\n\n  return result;\n}\n\nfunction renderExpireTime(state, quest) {\n  const difference = getDifference(getCurrentTime(getTicker(state)), quest.expiresAt);\n  let type = 'secondary';\n  if (difference < 24) {\n    type = difference < 0 ? 'danger' : 'warning';\n  }\n\n\n  return <Text type={type}> Expires: {getHumanTime(quest.expiresAt)} </Text>\n}\nexport default function Quests() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <Collapse >\n      {state.quests.quests\n      .filter(quest => !quest.accepted)\n      .map((quest, key) => {\n        return (\n          <Panel header={`${quest.name} (${quest.reward} coins)`} key={quest.id} extra={[renderExpireTime(state, quest) , ...drawStarTimes(quest.level)]}>\n            <Quest quest={quest} />\n          </Panel>\n        );\n      })}\n    </Collapse>\n  );\n}\nQuests.displayName = \"Quests\";\n\nexport function Quest({ quest }) {\n  const { state, dispatch } = useContext(AppContext);\n  const [selectedMember, setSelectedMember] = useState(null);\n\n  return (\n    <>\n      <Paragraph>{quest.description}</Paragraph>\n      <Paragraph>The reward for completing this quest is <Text strong>{quest.reward} gold coins</Text>.</Paragraph>\n      \n      <Paragraph>Select the Hero that will perform this quest: <SelectHeroDropdown selectedMember={selectedMember} onChange={setSelectedMember}/> </Paragraph>\n\n      <Button disabled={!selectedMember} onClick={() => { \n          dispatch({ type: 'acceptQuest', payload: {quest, selectedMember}});\n          state.notify.info({\n            message: `You just accepted ${quest.name} with ${getMemberFullName(selectedMember)}`,\n          });\n      }}>\n        Start Quest!\n      </Button>\n    </>\n  );\n}\n\nexport function SelectHeroDropdown({ selectedMember, onChange}) {\n  const { state, dispatch } = useContext(AppContext);\n\n  const menu = (\n    <Menu>\n      <Menu.Item key='none' onClick={() => onChange(null)} >\n        None\n      </Menu.Item>\n      {getGuildMembers(state)\n      .filter(member => !member.task)\n      .map(member => {\n        return (\n          <Menu.Item key={member.id} onClick={() => onChange(member)}>\n            <a>\n              {getMemberFullName(member)}\n            </a>\n          </Menu.Item>\n        )\n      })}\n    </Menu>\n  );\n\n  return (\n    <Dropdown overlay={menu}>\n      <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n        {selectedMember ? getMemberFullName(selectedMember) : 'None'} <DownOutlined />\n      </a>\n    </Dropdown>\n  );\n\n}","import CityBuilding from '../city-building';\n\nimport Overview from './overview';\nimport Recruits from './recruits';\nimport Quests from './quests';\n\nexport default function Tavern() {  \n  \n  return <CityBuilding menuItems={[Overview, Recruits, Quests]} stateNamespace=\"tavern\" />\n}","import React, { useContext } from 'react';\nimport { AppContext } from '../world';\n\nimport { Layout } from \"antd\";\n\nimport CityMenu from './city-menu';\nimport Overview from './city-overview';\nimport Guild from '../guild';\nimport Market from '../market';\nimport Tavern from '../tavern';\n\nconst { Sider, Content } = Layout;\n\n\nexport default function City() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <Layout>\n      <Sider\n        theme=\"light\"\n        style={{\n          overflow: \"auto\",\n          height: \"100vh\",\n          position: \"fixed\",\n          left: 0,\n        }}\n      >\n        <CityMenu />\n      </Sider>\n      <Layout style={{ marginLeft: 200, height: \"100vh\" }}>\n        <Content style={{ background: 'white', padding: 10, margin: \"24px 16px 0\", overflow: \"initial\"}}>\n            {renderContent(dispatch, state)}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\n\nfunction renderContent(dispatch, state) {\n  switch(state.city.selectedItem) {\n    case 'Overview': \n      return <Overview />\n    case 'Guild':\n      return <Guild />\n    case 'Market': \n      return <Market />\n    case 'Tavern': \n      return <Tavern />\n\n    default:\n      return \"No content for City\";\n  }\n}","import React, { useState, useReducer } from \"react\";\nimport { notification, Button } from 'antd';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport ticker from '../utils/ticker';\nimport useInterval from '../utils/useInterval';\nimport { MONTHS } from '../utils/consts';\n\nimport reducer from '../redux/reducer';\nimport City from './city';\nimport { createMember } from '../utils/members';\n\nimport { INIT_STAGE_SPEED } from '../utils/consts';\n\nexport const AppContext = React.createContext();\n\nexport default function World() {\n  const [api, contextHolder] = notification.useNotification();\n  const [stageProgress, setStageProgress] = useState(0);\n\n  const [state, dispatch] = useReducer(reducer, {\n    guild: {\n      stats: {\n        name: \"Tainor\",\n        gold: 0,\n        members: [createMember(\"Hoijof\", \"indigo\")],\n        items: [],\n      },\n      logs: [],\n      selectedItem: 'Overview',\n    },\n    city: {\n      selectedItem: 'Overview',\n    },\n    tavern: {\n      selectedItem: 'Overview',\n      recruits: [1,2,3,4].map(() => createMember())\n    },\n    quests: {\n      quests: [],\n      stats: {\n        questsCreated: 0,\n        questStarted: 0,\n        questsCompleted: 0\n      }\n    },\n    selectedCity: 'City',\n    stageSpeed: INIT_STAGE_SPEED,\n    isPaused: false,\n    notify: api,\n    ticker: ticker.initialize(),\n  });\n\n  useInterval(() => {\n    state.ticker.tick(dispatch, state, stageProgress, setStageProgress);\n  }, state.stageSpeed)\n\n  // #region Hotkeys\n  useHotkeys('space', () => dispatch('switchPause')) \n\n  useHotkeys(\"*\", event => {\n    if (event.key === \"+\") {\n      dispatch({type: 'changeStageSpeed', payload: -25})\n    }\n\n    if (event.key === \"-\") {\n      dispatch({type: 'changeStageSpeed', payload: 25})\n    }\n  })\n  //#endregion\n\n  window.state = state;\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {contextHolder}\n      {renderContent(state)}\n      <div id=\"TickerBar\" style={{position: 'absolute', left: 0, bottom: 0, width: '100%'}}>\n        <div>{state.ticker.day} / {MONTHS[state.ticker.month]} / {state.ticker.year}</div>\n        <div>Hour: {state.ticker.hour}:00</div>\n        <div>Time of The Day: {state.ticker.currentStage}</div>\n        <Button onClick={() => {dispatch('switchPause')}}>{state.isPaused ? 'Resume' : 'Pause'}</Button>\n        <br />\n        <Button onClick={() => {dispatch({type: 'changeStageSpeed', payload: 10})}}>-</Button>\n        <span> Speed: {state.stageSpeed} </span>\n        <Button onClick={() => {dispatch({type: 'changeStageSpeed', payload: -10})}}>+</Button>\n      </div>\n    </AppContext.Provider>\n  )\n}\n\nfunction renderContent(state) {\n  switch(state.selectedCity) {\n    case 'City': \n      return <City />\n\n    default:\n      return \"No city to render\";\n  }\n}","import React, { useState, useEffect, useRef } from 'react';\n\n// From Dan Ama :D \n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}","import World from './components/world';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <World />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}