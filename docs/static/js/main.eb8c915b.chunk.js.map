{"version":3,"sources":["redux/selectors.js","utils/consts.js","utils/ticker/tickerUtils.js","utils/event.js","utils/ticker/index.js","utils/names.js","utils/random.js","utils/quest/questUtils.js","utils/quest/fetch.js","utils/quest/index.js","redux/reducer.js","components/city/city-menu.js","components/city/city-overview.js","components/guild/stats.js","components/guild/overview.js","utils/renderStats.js","utils/styles.js","components/guild/members.js","components/city-building/menu.js","components/city-building/index.js","components/guild/index.js","components/market/index.js","components/tavern/overview.js","components/tavern/recruits.js","components/tavern/quests.js","components/tavern/index.js","components/city/index.js","utils/createMember.js","components/world.js","utils/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["getTicker","state","ticker","getNamespacedDefaultMenu","stateNamespace","selectedItem","getActiveEvents","activeEvents","TIME_OF_THE_DAY","MONTHS","EVENT_TYPES","SEXES","MALE","FEMALE","isToday","date","year","month","day","getTimeInFuture","startTime","difference","getTimeFromHours","getTotalHours","getCurrentTime","hour","time","hours","Math","floor","createEvent","start","end","name","description","type","startHandler","endHandler","rescheduleEvent","event","startDate","endDate","computeDayEvents","todayEvents","events","filter","tick","dispatch","isPaused","stats","ticks","stageProgress","advanceStage","forEach","push","splice","indexOf","checkEvents","currentStage","callADay","getNextTime","callAYear","callAMonth","initialize","totalEvents","festivityOne","console","log","festivityTwo","femaleNames","maleNames","surnames","getRandomInt","min","max","round","random","getRandomNumber","getRandomColor","toString","getRandomName","sex","length","getRandomSurname","createStepTravelFor","quest","questValue","store","currentTime","payload","createStepQuestObjective","questType","generateStepsFetch","QUEST_TYPES","lastId","createQuest","id","steps","reward","active","completed","assignee","generateRandomQuestData","executeStep","reducer","action","computedAction","includes","update","$set","stageSpeed","key","guild","gold","memberIndex","members","updatedMember","$splice","$push","level","tavern","recruits","city","quests","startQuest","shift","completeQuest","advanceQuest","cityMenu","useContext","AppContext","className","onSelect","theme","mode","defaultSelectedKeys","Item","CityOverview","map","GuildStats","data","value","orientation","size","bordered","dataSource","renderItem","item","Overview","onClick","getStatColor","stat","computedStat","renderStats","member","Object","keys","statName","computedStats","Text","sumStats","reduce","acc","health","renderData","cardStyle","width","float","margin","Typography","Panel","Collapse","Members","style","title","extra","height","background","color","direction","fontSize","cursor","exp","task","ghost","marginLeft","header","CityMenu","defaultItem","menuItems","Header","Layout","Content","renderContent","find","CityBuilding","padding","overflow","Guild","Market","Title","Recruits","cost","canHire","surname","disabled","notify","info","message","Quests","Tavern","Sider","City","position","left","getRandomType","getRandomStats","strength","willpower","endurance","agility","createMember","missions","daysInGuild","items","React","createContext","World","notification","useNotification","api","contextHolder","useReducer","questsCreated","questStarted","questsCompleted","selectedCity","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","useHotkeys","splitKey","e","Provider","bottom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+NAAO,SAASA,EAAUC,GACxB,OAAOA,EAAMC,OAGR,SAASC,EAAyBF,EAAOG,GAC9C,OAAOH,EAAMG,GAAgBC,aAGxB,SAASC,EAAgBL,GAC9B,OAAOD,EAAUC,GAAOM,aCTnB,IAIMC,EACF,UADEA,EAEA,YAFAA,EAGF,UAHEA,EAIJ,QAGIC,EAAS,CACpB,YACA,UACA,SACA,YAGWC,EACJ,QADIA,EAEJ,QAOIC,EAAQ,CACnBC,KAAM,OACNC,OAAQ,UCzBH,SAASC,EAAQZ,EAAQa,GAC9B,OAAOb,EAAOc,OAASD,EAAK,IAAMb,EAAOe,QAAUF,EAAK,IAAMb,EAAOgB,MAAQH,EAAK,GAG7E,SAASI,EAAgBC,EAAWC,GACzC,OAAOC,EAAiBC,EAAcH,GAAaC,GAG9C,SAASG,EAAetB,GAC7B,MAAO,CAACA,EAAOc,KAAMd,EAAOe,MAAOf,EAAOgB,IAAKhB,EAAOuB,MAgBjD,SAASF,EAAcG,GAC5B,OAAiB,KAAVA,EAAK,GAAsB,IAAVA,EAAK,GAA2B,IAAfA,EAAK,GAAK,GAAUA,EAAK,GAG7D,SAASJ,EAAiBK,GAC/B,MAAO,CAACC,KAAKC,MAAMF,EAAQ,MAAOC,KAAKC,MAAOF,EAAQ,IAAO,GAAIC,KAAKC,MAAOF,EAAQ,GAAM,IAAM,EAAGA,EAAQ,IClCvG,SAASG,EAAYC,EAAOC,EAAKC,EAAMC,EAAaC,EAAMC,EAAcC,GAC7E,MAAO,CACLN,QACAC,MACAC,OACAC,cACAC,OACAC,eACAC,cAIG,SAASC,EAAgBC,EAAOC,EAAWC,GAChD,OAAOX,EAAYU,EAAWC,EAASF,EAAMN,KAAMM,EAAML,YAAaK,EAAMJ,KAAMI,EAAMH,aAAcG,EAAMF,YAG/F,ICTXnC,EAiDJ,SAASwC,EAAiBzC,GACxB,IAAMC,EAASF,EAAUC,GAEzBC,EAAOyC,YAAczC,EAAO0C,OAAOC,QAAO,SAACN,GACzC,OAAOzB,EAAQZ,EAAQqC,EAAMR,QAAUjB,EAAQZ,EAAQqC,EAAMP,QAwBjE,SAASc,EAAKC,EAAU9C,GAClBA,EAAM+C,WAIVhD,EAAUC,GAAOgD,MAAMC,QACvBlD,EAAUC,GAAOwB,OAEjBsB,EAAS,yBAEmB,IAAxB9C,EAAMkD,gBACRlD,EAAMC,OAAOkD,aAAaL,EAAU9C,GAEpC8C,EAAS,uBAjCb,SAAqBA,EAAU9C,GAC7B,IAAMC,EAASF,EAAUC,GAEzBC,EAAOyC,YAAYE,QAAO,SAACN,GACzB,OAAQA,EAAMR,MAAM,KAAO7B,EAAOuB,MAAUc,EAAMP,IAAI,KAAO9B,EAAOuB,QACnE4B,SAAQ,SAACd,GACNzB,EAAQZ,EAAQqC,EAAMR,QAAUQ,EAAMR,MAAM,KAAO7B,EAAOuB,MAC5Dc,EAAMH,aAAaW,EAAU9C,EAAOsC,GACpCrC,EAAOK,aAAa+C,KAAKf,KAEzBA,EAAMF,WAAWU,EAAU9C,EAAOsC,GAClCrC,EAAO0C,OAAOW,OAAOrD,EAAO0C,OAAOY,QAAQjB,GAAQ,GACnDrC,EAAOK,aAAagD,OAAOrD,EAAOK,aAAaiD,QAAQjB,GAAQ,OAwBnEkB,CAAYV,EAAU9C,IAGxB,SAASmD,EAAaL,EAAU9C,GAC9B,IAAMC,EAASF,EAAUC,GAEzB,GAAIC,EAAOwD,eAAiBlD,EAC1B,OAAOmD,EAASZ,EAAU9C,GAG5BC,EAAOwD,aFxEF,SAAqBA,GAC1B,OAAOA,GACL,KAAKlD,EACH,OAAOA,EACT,KAAKA,EACH,OAAOA,EACT,KAAKA,EACH,OAAOA,GEiEWoD,CAAY1D,EAAOwD,cAG3C,SAASC,EAASZ,EAAU9C,GAC1B,IAAMC,EAASF,EAAUC,GAEzBC,EAAOwD,aAAelD,EACtBN,EAAOuB,KAAO,EACdvB,EAAOgB,MAGHhB,EAAOgB,IHvHe,IGgI5B,SAAoB6B,EAAU9C,GAC5B,IAAMC,EAASF,EAAUC,GAEzBC,EAAOgB,IAAM,EACbhB,EAAOe,QAEc,IAAjBf,EAAOe,OAKb,SAAmB8B,EAAU9C,GAC3B,IAAMC,EAASF,EAAUC,GAEzBC,EAAOe,MAAQ,EACff,EAAOc,OARL6C,CAAUd,EAAU9C,GAfpB6D,CAAWf,EAAU9C,GAGvByC,EAAiBzC,GAuBJ,OACb8D,WA5IF,SAAoB9D,GAClBC,EAAS,CACPwD,aAAclD,EACdiB,KAAM,EACNP,IAAK,EACLD,MAAO,EACPD,KAAM,IACN2B,YAAa,GACbpC,aAAa,GACbqC,OAAQ,GACRK,MAAO,CACLe,YAAa,EACbd,MAAO,GAETS,WACAP,eACAN,QAIF,IAAMmB,EAAenC,EAAY,CAAC,IAAK,EAAG,EAAG,GAAI,CAAC,IAAK,EAAG,EAAG,GAAI,sBAAuB,6BAA8BpB,GAAmB,SAACqC,EAAU9C,EAAOsC,GACzJ2B,QAAQC,IAAR,eAAoB5B,EAAMN,KAA1B,YACC,SAACc,EAAU9C,EAAOsC,GACnB,IAAMrC,EAASF,EAAUC,GAEzBC,EAAO0C,OAAOU,KAAKhB,EAAgBC,EAAO,CAACrC,EAAOc,KAAO,EAAG,EAAG,EAAG,GAAI,CAACd,EAAOc,KAAO,EAAG,EAAG,EAAG,QAG1FoD,EAAetC,EAAY,CAAC,IAAK,EAAG,EAAG,GAAI,CAAC,IAAK,EAAG,EAAG,GAAI,0BAA2B,kCAAmCpB,GAAmB,SAACqC,EAAU9C,EAAOsC,GAClK2B,QAAQC,IAAR,eAAoB5B,EAAMN,KAA1B,YACC,SAACc,EAAU9C,EAAOsC,GACnB,IAAMrC,EAASF,EAAUC,GAEzBC,EAAO0C,OAAOU,KAAKhB,EAAgBC,EAAO,CAACrC,EAAOc,KAAO,EAAG,EAAG,EAAG,GAAI,CAACd,EAAOc,KAAO,EAAG,EAAG,EAAG,QAWhG,OARAd,EAAO0C,OAAOU,KAAKW,EAAcG,GAEjC1B,EAAiB,CACfxC,WAKKA,I,6BCrDImE,EAAc,CAAC,UAAW,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,SAAU,MAAO,KAAM,OAAQ,OAAQ,QACtH,SAAU,SAAU,OAAQ,OAAQ,QAAS,SAAU,UAAW,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAAQ,QAAS,OACrH,QAAS,KAAM,OAELC,EAAY,CAAC,YAAa,SAAU,QAAS,OAAQ,SAAU,OAAQ,UAAW,QAAS,MAAO,QAAS,QACvH,QAAS,QAAS,SAAU,QAAS,QAAS,QAAS,MAAO,MAAO,QAAS,QAAS,OAAQ,MAAO,QACtG,OAAQ,MAAO,MAAO,SAEVC,EAAW,CAAC,SAAU,SAAU,WAAY,OAAQ,eAAgB,OAAQ,UAAW,SAAU,cAC7G,SAAU,WAAY,UAAW,WAAY,OAAQ,SAAU,WAAY,SAAU,UAAW,SAAU,UAC1G,QAAS,SAAU,QAAS,QAAS,UCH/B,SAASC,EAAaC,EAAKC,GAChC,OAAO9C,KAAK+C,MALP,SAAyBF,EAAKC,GACnC,OAAO9C,KAAKgD,UAAYF,EAAMD,GAAOA,EAInBI,CAAgBJ,EAAKC,IAGlC,SAASI,IACd,MAAM,IAAN,OAAWlD,KAAKC,MAAoB,SAAdD,KAAKgD,UAAmBG,SAAS,KAiBlD,SAASC,IAAiC,IAAnBC,EAAkB,uDAAZtE,EAAMC,KACzC,OAAIqE,GAAOtE,EAAMC,KACT0D,EAAUE,EAAa,EAAEF,EAAUY,OAAO,IACvCD,GAAOtE,EAAME,OAChBwD,EAAYG,EAAa,EAAEH,EAAYa,OAAO,IAE/C,QAGD,SAASC,IACf,OAAOZ,EAASC,EAAa,EAAED,EAASW,OAAO,IClCzC,SAASE,EAAoBC,EAAOC,GAkBzC,OAjBgB,SAACC,GACf,IACMC,EAAchE,EADLxB,EAAUuF,IAMzB,OAJAC,EAAY,KAIL1D,EAAY0D,EAFHrE,EAAgBqE,EAAaF,GAEJ,kBAAmB,OAAQ5E,GAClE,SAACqC,EAAU9C,EAAOsC,GAChB8C,EAAMlB,IAAIb,KAAV,8BAAsCgC,EAAtC,eACC,SAACvC,EAAU9C,EAAOsC,GACnB8C,EAAMlB,IAAIb,KAAV,iCAEAP,EAAS,CAACZ,KAAM,eAAgBsD,QAASJ,QCZjD,SAASK,EAAyBL,EAAOM,GAkBvC,OAjBgB,SAACJ,GACf,IACMC,EAAchE,EADLxB,EAAUuF,IAMzB,OAJAC,EAAY,KAIL1D,EAAY0D,EAFHrE,EAAgBqE,EAAa,GAEJ,kBAAmB,OAAQ9E,GAClE,SAACqC,EAAU9C,EAAOsC,GAChB8C,EAAMlB,IAAIb,KAAV,uCACC,SAACP,EAAU9C,EAAOsC,GACnB8C,EAAMlB,IAAIb,KAAV,oBAEAP,EAAS,CAACZ,KAAM,eAAgBsD,QAASJ,QAOlC,SAASO,EAAmBP,EAAOC,GAChD,MAAO,CACLF,EAAoBC,EAAOC,GAC3BI,EAAyBL,EAAOQ,GAChCT,EAAoBC,EAAOC,IC1B/B,IAAIQ,EAAS,EAEE,SAASC,IACtB,IAEMV,EAAQ,CACZW,KAHWF,EAIX7D,KAAM,UACNC,YAAa,iBACb+D,MAAO,GACPC,OAAQ,EACRZ,WAAY,EACZa,QAAQ,EACRC,WAAW,EACXC,SAAU,KACVlC,IAAK,IAb6B,EA0BtC,SAAiCkB,GAE/B,IAAMC,EAAad,EAAa,EAAG,GAEnC,MAAO,CACLvC,KAAM,WACNC,YAAa,8BACbgE,OAAQtE,KAAKC,MAAmB,EAAbyD,EAAiBd,GAAc,EAAG,IACrDc,aACAW,MAAOL,EAAmBP,EAAOC,IAnBQgB,CAAwBjB,GAA5DpD,EAhB6B,EAgB7BA,KAAMC,EAhBuB,EAgBvBA,YAAagE,EAhBU,EAgBVA,OAAQD,EAhBE,EAgBFA,MAOlC,OALAZ,EAAMpD,KAAOA,EACboD,EAAMnD,YAAcA,EACpBmD,EAAMa,OAASA,EACfb,EAAMY,MAAQA,EAEPZ,EAsCF,SAASkB,EAAYtG,EAAOoF,GACjC,IAAM9C,EAAQ8C,EAAMY,MAAM,GAAGhG,GACvBC,EAASF,EAAUC,GAEzBC,EAAO0C,OAAOU,KAAKf,GACnBrC,EAAOyC,YAAYW,KAAKf,GCnEX,SAASiE,EAAQvG,EAAOwG,GACrC,IAAMC,EAAmC,kBAAXD,EAAsB,CAAEtE,KAAMsE,GAAUA,EAItE,OAFK,CAAC,wBAAyB,sBAAsBE,SAASD,EAAevE,OAC7E+B,QAAQC,IAAIuC,GACJA,EAAevE,MACnB,IAAK,qBACH,OAAOyE,IAAO3G,EAAO,CACnBI,aAAc,CAACwG,KAAMH,EAAejB,WAExC,IAAK,wBACH,OAAOmB,IAAO3G,EAAO,CACnBkD,cAAe,CAAC0D,KAAM5G,EAAMkD,cTlBE,KSoBlC,IAAK,qBACH,OAAOyD,IAAO3G,EAAO,CACnBkD,cAAe,CAAC0D,KAAM,KAE1B,IAAK,cACH,OAAOD,IAAO3G,EAAO,CACnB+C,SAAU,CAAC6D,MAAO5G,EAAM+C,YAE5B,IAAK,mBACH,OAAO4D,IAAO3G,EAAO,CACnB6G,WAAY,CAACD,KAAM5G,EAAM6G,WAAaJ,EAAejB,WAM7D,OAAQiB,EAAevE,MACrB,IAAK,4BACH,OAAOyE,IAAO3G,EAAD,eACVyG,EAAejB,QAAQrF,eAAiB,CACvCC,aAAc,CAAEwG,KAAMH,EAAejB,QAAQsB,QASrD,OAAQL,EAAevE,MACrB,IAAK,cACH,OAAOyE,IAAO3G,EAAO,CACnB+G,MAAO,CACL/D,MAAO,CACLgE,KAAM,CAAEJ,KAAM,QAItB,IAAK,kBACH,IAAIK,EAAcjH,EAAM+G,MAAM/D,MAAMkE,QAAQ3D,QAAQkD,EAAejB,SAC/D2B,EAAgBR,IAAOF,EAAejB,QAAS,CAAEwB,KAAM,CAAEJ,KAAMH,EAAejB,QAAQwB,KAAO,KAEjG,OAAOL,IAAO3G,EAAO,CACnB+G,MAAO,CACL/D,MAAO,CACLkE,QAAS,CACPE,QAAS,CAAC,CAACH,EAAa,EAAGE,KAE7BH,KAAM,CAAEJ,KAAM5G,EAAM+G,MAAM/D,MAAMgE,KAAO,OAI/C,IAAK,kBACH,OAAOL,IAAO3G,EAAO,CACnB+G,MAAO,CACL/D,MAAO,CACLkE,QAAS,CAAEG,MAAO,CAACZ,EAAejB,UAClCwB,KAAM,CAAEJ,KAAM5G,EAAM+G,MAAM/D,MAAMgE,KAAuC,EAA/BP,EAAejB,QAAQ8B,SAGnEC,OAAQ,CACNC,SAAU,CAAEJ,QAAS,CAAC,CAACpH,EAAMuH,OAAOC,SAASjE,QAAQkD,EAAejB,SAAU,QAOtF,OAAQiB,EAAevE,MACrB,IAAK,yBACH,OAAOyE,IAAO3G,EAAO,CACnByH,KAAM,CACJrH,aAAc,CAAEwG,KAAMH,EAAejB,YAO7C,OAAQiB,EAAevE,MACrB,IAAK,WACH,OAAOyE,IAAO3G,EAAO,CACnB0H,OAAQ,CAAEA,OAAQ,CAACL,MAAOZ,EAAejB,YAE7C,IAAK,cACH,OAAOmB,IAAO3G,EAAO,CACnB0H,OAAQ,CAACA,OAAQ,CAAEN,QAAS,CAAC,CAACpH,EAAM0H,OAAOA,OAAOnE,QAAQkD,EAAejB,SAAU,QAEvF,IAAK,aAGH,OD/DC,SAAoBxF,EAAOoF,GAC5BA,EAAMc,SAIVd,EAAMc,QAAS,EAEfI,EAAYtG,EAAOoF,ICsDfuC,CAAW3H,EAAOyG,EAAejB,SAEzBmB,IAAO3G,EAAO,CACpB0H,OAAQ,CAACA,OAAQ,CAAEN,QAAS,CAAC,CAACpH,EAAM0H,OAAOA,OAAOnE,QAAQkD,EAAejB,SAAU,EAAGiB,EAAejB,cAEzG,IAAK,eAGH,OD3DC,SAAsBxF,EAAOoF,GAGlC,GAFAA,EAAMY,MAAM4B,QAEe,IAAvBxC,EAAMY,MAAMf,OACd,OAcJ,SAAuBG,GACrBA,EAAMe,WAAY,EAClBf,EAAMc,QAAS,EAEfd,EAAMlB,IAAIb,KAAK,kBAlBNwE,CAAczC,GAGvBkB,EAAYtG,EAAOoF,GCkDf0C,CAAa9H,EAAOyG,EAAejB,SAE5BmB,IAAO3G,EAAO,CACnB0H,OAAQ,CAACA,OAAQ,CAAEN,QAAS,CAAC,CAACpH,EAAM0H,OAAOA,OAAOnE,QAAQkD,EAAejB,SAAU,EAAGiB,EAAejB,cAM3G,OADAvB,QAAQC,IAAI,qBACLlE,E,uBCzHM,SAAS+H,KAAY,IAC1BjF,EAAakF,qBAAWC,IAAxBnF,SASR,OACA,eAAC,KAAD,CAAMoF,UAAU,WAAWC,SAR3B,YAAkC,IAARrB,EAAO,EAAPA,IACxBhE,EAAS,CACPZ,KAAM,yBACNsD,QAASsB,KAKwCsB,MAAM,QAAQC,KAAK,SAASC,oBAAqB,CAAC,YAAvG,UACE,cAAC,KAAKC,KAAN,sBAAe,YACf,cAAC,KAAKA,KAAN,mBAAe,SACf,cAAC,KAAKA,KAAN,oBAAe,UACf,cAAC,KAAKA,KAAN,oBAAe,aCfJ,SAASC,KAAgB,IAAD,EACTR,qBAAWC,IAA/BjI,EAD6B,EAC7BA,MAD6B,EACtB8C,SAEf,OACE,qCACE,0CAEA,+CAECzC,EAAgBL,GAAOyI,KAAI,SAACnG,GAAD,OAAY,8BAAuBA,EAAMN,MAAnBM,EAAMN,Y,kCCX/C,SAAS0G,GAAT,GAA4C,IACjDC,EAAO,CACT,CAAC3G,KAAM,OAAQ4G,MAFmC,EAAtB5G,MAG5B,CAACA,KAAM,OAAQ4G,MAHmC,EAAhB5B,MAIlC,CAAChF,KAAM,UAAW4G,MAJgC,EAAV1B,QAIPjC,SAGrC,OACI,qCACI,cAAC,KAAD,CAAS4D,YAAY,OAArB,mBACA,cAAC,KAAD,CACIC,KAAK,QACLC,UAAQ,EACRC,WAAYL,EACZM,WAAY,SAAAC,GAAI,OACZ,eAAC,KAAKX,KAAN,WACKW,EAAKlH,KADV,KACkBkH,EAAKN,eCX5B,SAASO,KAAY,IAAD,EACLnB,qBAAWC,IAA/BjI,EADyB,EACzBA,MAAO8C,EADkB,EAClBA,SADkB,EAET9C,EAAM+G,MAAM/D,MAA7BgE,EAF0B,EAE1BA,KAAME,EAFoB,EAEpBA,QAEb,OACE,qCACE,cAAC,GAAD,gBAAWlH,EAAM+G,MAAM/D,QACvB,uBACU,IAATgE,GAAiC,IAAnBE,EAAQjC,OACrB,cAAC,IAAD,CACE/C,KAAK,UACLkH,QAAS,WACPtG,EAAS,CAAEZ,KAAM,iBAHrB,kDAQE,Q,4CCtBH,SAASmH,GAAaC,EAAMC,GACjC,OAAIA,EAAeD,EACV,UAGLC,EAAeD,EACV,SAGF,UAGM,SAASE,GAAYC,GAClC,OAAOC,OAAOC,KAAKF,EAAOzG,OAAOyF,KAAI,SAACmB,GACpC,IAAMN,EAAOG,EAAOzG,MAAM4G,GACpBL,EAAeE,EAAOI,cAAcD,GAE1C,OAAO,eAAC,KAAWE,KAAZ,CAAgC5H,KAAMmH,GAAaC,EAAMC,GAAzD,UAAyEK,EAAzE,KAAqFL,IAA/DK,MAI1B,SAASG,GAASN,GACvB,OAAOC,OAAOC,KAAKF,EAAOzG,OAAOgH,QAAO,SAACC,EAAKL,GAG5C,OAAOK,EAFMR,EAAOzG,MAAM4G,KAGzB,GAAKH,EAAOzG,MAAMkH,OAGhB,SAASC,GAAWV,GACzB,OAAOC,OAAOC,KAAKF,EAAOd,MAAMF,KAAI,SAACmB,GACnC,IAAMjB,EAAOc,EAAOd,KAAKiB,GAEzB,OAAO,eAAC,KAAWE,KAAZ,WAAkCF,EAAlC,KAA8CjB,IAAxBiB,MCnC1B,IAAMQ,GAAY,CACvBC,MAAO,IACPC,MAAO,OACPC,OAAQ,G,ICOFT,GAASU,KAATV,KACAW,GAAUC,KAAVD,MAEO,SAASE,KAAW,IAAD,EACJ3C,qBAAWC,IAA/BjI,EADwB,EACxBA,MAAO8C,EADiB,EACjBA,SAEf,OACE,mCACG9C,EAAM+G,MAAM/D,MAAMkE,QAAQuB,KAAI,SAACgB,EAAQ3C,GACtC,OACE,cAAC,KAAD,CAAgB8D,MAAOR,GAAWS,MAAOpB,EAAOzH,KAAM8I,MAAO,qBAAKF,MAAO,CAACP,MAAO,GAAIU,OAAQ,GAAIC,WAAYvB,EAAOwB,SAApH,SACE,eAAC,KAAD,CAAOL,MAAO,CAACP,MAAO,QAASa,UAAU,WAAzC,UACE,eAACpB,GAAD,oBAAaL,EAAOzC,KAApB,IAA0B,cAAC8C,GAAD,CAAMc,MAAO,CAACO,SAAU,GAAIC,OAAQ,WAAYhC,QAAS,WAAOtG,EAAS,CAACZ,KAAM,kBAAmBsD,QAASiE,KAA5G,kBAC1B,eAACK,GAAD,qBAAcL,EAAOnC,MAArB,KAA8BmC,EAAO4B,IAArC,MAA4D,EAAf5B,EAAOnC,MAApD,KAAiEmC,EAAO4B,IAAqB,EAAf5B,EAAOnC,MAAY,SAAM,QACvG,eAACwC,GAAD,oBAAaL,EAAOvH,QACpB,eAAC4H,GAAD,oBAAaL,EAAO6B,KAAO7B,EAAO6B,KAAO,UACzC,cAAC,KAAD,CAAUC,OAAK,EAACX,MAAO,CAACY,YAAa,IAArC,SACE,cAACf,GAAD,CAAOgB,OAAM,iBAAY1B,GAASN,GAArB,KAAb,SACE,cAAC,KAAD,CAAOmB,MAAO,CAACP,MAAO,QAASa,UAAU,WAAzC,SACG1B,GAAYC,MAFiC,OAMpD,cAAC,KAAD,CAAU8B,OAAK,EAACX,MAAO,CAACY,YAAa,IAArC,SACE,cAACf,GAAD,CAAOgB,OAAO,OAAd,SACE,cAAC,KAAD,CAAOb,MAAO,CAACP,MAAO,QAASa,UAAU,WAAzC,SACGf,GAAWV,MAFS,WAdpB3C,QChBN,SAAS4E,GAAT,GAA6D,IAA1CC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,UAAWzL,EAAiB,EAAjBA,eAChD2C,EAAakF,qBAAWC,IAAxBnF,SAYR,OACA,cAAC,KAAD,CAAMqF,SAXN,YAAkC,IAARrB,EAAO,EAAPA,IACxBhE,EAAS,CACPZ,KAAM,4BACNsD,QAAS,CACPsB,MACA3G,qBAM0BiI,MAAM,QAAQC,KAAK,aAAaC,oBAAqB,CAACqD,GAAtF,SACGC,EAAUnD,KAAI,SAAAF,GAAI,OAAI,cAAC,KAAKA,KAAN,UAA4BA,EAAKvG,MAAjBuG,EAAKvG,W,ICZxC6J,GAAoBC,IAApBD,OAAQE,GAAYD,IAAZC,QAEhB,SAASC,GAAclJ,EAAU9C,EAAO4L,EAAWzL,GACjD,IAAM4L,EAAUH,EAAUK,MAAK,SAAC1D,GAE9B,OAAOA,EAAKvG,OAAShC,EAAMG,GAAgBC,gBAG7C,OAAO2L,EAAU,cAACA,EAAD,IAAc,QAGlB,SAASG,GAAT,GAAoD,IAA7BN,EAA4B,EAA5BA,UAAWzL,EAAiB,EAAjBA,eAAiB,EACpC6H,qBAAWC,IAA/BjI,EADwD,EACxDA,MADwD,EACjD8C,SAEf,OACE,eAAC,IAAD,CAAQ8H,MAAO,CAAEI,WAAY,SAA7B,UACE,cAACa,GAAD,CACEzD,MAAM,QACNwC,MAAO,CACLI,WAAY,QACZmB,QAAS,GAJb,SAOE,cAAC,GAAD,CAAMR,YAAazL,EAAyBF,EAAOG,GAAiByL,UAAWA,EAAWzL,eAAgBA,MAE5G,cAAC,GAAD,CAASyK,MAAO,CAAEI,WAAY,QAASmB,QAAS,GAAI5B,OAAQ,cAAe6B,SAAU,WAArF,SACKJ,GAAclJ,EAAU9C,EAAO4L,EAAWzL,QC5BtC,SAASkM,KAEtB,OACE,cAACH,GAAD,CAAcN,UAAW,CAACzC,GAAUwB,IAAUxK,eAAe,UCRlD,SAASmM,KACtB,MAAO,O,ICGDxC,GAASU,KAATV,KAEO,SAASX,KAAY,IAAD,EACLnB,qBAAWC,IADN,EACzBjI,MADyB,EAClB8C,SAEf,OAAO,cAAC,GAAD,yD,ICFDyJ,GAAgB/B,KAAhB+B,MAAOzC,GAASU,KAATV,KACPW,GAAUC,KAAVD,MAEO,SAAS+B,KAAY,IAAD,EACLxE,qBAAWC,IAA/BjI,EADyB,EACzBA,MAAO8C,EADkB,EAClBA,SAEf,OACE,qCACE,cAACyJ,GAAD,CAAOjF,MAAO,EAAd,gCAECtH,EAAMuH,OAAOC,SAASiB,KAAI,SAACgB,EAAQ3C,GAClC,IAAM2F,EAAsB,EAAfhD,EAAOnC,MACdoF,EAAU1M,EAAM+G,MAAM/D,MAAMgE,MAAQyF,EAE1C,OACE,cAAC,KAAD,CAEE7B,MAAOR,GACPS,MAAK,UAAKpB,EAAOzH,KAAZ,YAAoByH,EAAOkD,SAChC7B,MACE,qBACEF,MAAO,CAAEP,MAAO,GAAIU,OAAQ,GAAIC,WAAYvB,EAAOwB,SANzD,SAUE,eAAC,KAAD,CAAOL,MAAO,CAAEP,MAAO,QAAUa,UAAU,WAA3C,UACE,eAAC,GAAD,qBACUzB,EAAOnC,MADjB,KAC0BmC,EAAO4B,IADjC,MACwD,EAAf5B,EAAOnC,MADhD,IAC4D,IACzDmC,EAAO4B,IAAqB,EAAf5B,EAAOnC,MAAY,SAAM,QAEzC,eAAC,GAAD,oBAAamC,EAAOvH,QACpB,cAAC,KAAD,CAAUqJ,OAAK,EAACX,MAAO,CAAEY,YAAa,IAAtC,SACE,cAAC,GAAD,CAAOC,OAAM,iBAAY1B,GAASN,GAArB,KAAb,SACE,cAAC,KAAD,CAAOmB,MAAO,CAAEP,MAAO,QAAUa,UAAU,WAA3C,SACG1B,GAAYC,MAFiC,OAMpD,eAAC,IAAD,CACEvH,KAAK,UACL0K,UAAUF,EACVtD,QAAS,WACPtG,EAAS,CAAEZ,KAAM,kBAAmBsD,QAASiE,IAE7CzJ,EAAM6M,OAAOC,KAAK,CAChBC,QAAQ,kBAAD,OAAoBtD,EAAOzH,KAA3B,gBAAuCyK,EAAvC,kBAPb,sBAWYA,EAXZ,qBAtBG3F,SCjBO0D,KAAhB+B,M,IAAOzC,GAASU,KAATV,KACPW,GAAUC,KAAVD,MAEO,SAASuC,KAAU,IAAD,EACHhF,qBAAWC,IAA/BjI,EADuB,EACvBA,MAAO8C,EADgB,EAChBA,SAEf,OACE,mCACG9C,EAAM0H,OAAOA,OAAOe,KAAI,SAACrD,EAAO0B,GAC/B,OACE,cAAC,KAAD,CAAgB8D,MAAOR,GAAWS,MAAOzF,EAAMpD,KAA/C,SACE,eAAC,KAAD,CAAO4I,MAAO,CAAEP,MAAO,QAAUa,UAAU,WAA3C,UACE,eAAC,GAAD,oBAAa9F,EAAMpD,QACnB,eAAC,GAAD,2BAAoBoD,EAAMnD,eAC1B,eAAC,GAAD,sBAAemD,EAAMa,UACrB,cAAC,KAAD,CAAUsF,OAAK,EAACX,MAAO,CAAEY,YAAa,IAAtC,SACE,cAAC,GAAD,CAAOC,OAAM,oBAAerG,EAAMlB,IAAIe,QAAtC,SACE,cAAC,KAAD,CAAO2F,MAAO,CAAEP,MAAO,QAAUa,UAAU,WAA3C,SACG9F,EAAMlB,IAAIuE,KAAI,SAACvE,GAAD,OACb,8BAAgBA,GAANA,SAHoC,OAQtD,cAAC,IAAD,CACEhC,KAAK,UACLkH,QAAS,WACPtG,EAAS,CAAEZ,KAAM,aAAcsD,QAASJ,IAExCpF,EAAM6M,OAAOC,KAAK,CAChBC,QAAQ,oBAAD,OAAsB3H,EAAMpD,SANzC,6BAdO8E,QCVN,SAASmG,KAEtB,OAAO,cAACf,GAAD,CAAcN,UAAW,CAACzC,GAAUqD,GAAUQ,IAAS7M,eAAe,W,ICGvE+M,GAAmBpB,IAAnBoB,MAAOnB,GAAYD,IAAZC,QAGA,SAASoB,KAAQ,IAAD,EACDnF,qBAAWC,IAA/BjI,EADqB,EACrBA,MAAO8C,EADc,EACdA,SAEf,OACE,eAAC,IAAD,WACE,cAACoK,GAAD,CACE9E,MAAM,QACNwC,MAAO,CACLwB,SAAU,OACVrB,OAAQ,QACRqC,SAAU,QACVC,KAAM,GANV,SASE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAQzC,MAAO,CAAEY,WAAY,IAAKT,OAAQ,SAA1C,SACE,cAAC,GAAD,CAASH,MAAO,CAAEI,WAAY,QAASmB,QAAS,GAAI5B,OAAQ,cAAe6B,SAAU,WAArF,SACKJ,GAAclJ,EAAU9C,UAQrC,SAASgM,GAAclJ,EAAU9C,GAC/B,OAAOA,EAAMyH,KAAKrH,cAChB,IAAK,WACH,OAAO,cAAC,GAAD,IACT,IAAK,QACH,OAAO,cAACiM,GAAD,IACT,IAAK,SACH,OAAO,cAACC,GAAD,IACT,IAAK,SACH,OAAO,cAACW,GAAD,IAET,QACE,MAAO,uBCjDb,IAAIlH,GAAK,EAET,SAASuH,KACP,OAAO3L,KAAKgD,SAAW,GAAM,UAAY,OAG3C,SAAS4I,KACP,MAAO,CACLrD,OAAQ3F,EAAa,EAAG,IACxBiJ,SAAUjJ,EAAa,EAAG,GAC1BkJ,UAAWlJ,EAAa,EAAG,GAC3BmJ,UAAWnJ,EAAa,EAAG,GAC3BoJ,QAASpJ,EAAa,EAAG,IAWd,SAASqJ,GACtB5L,GAE0B,IAFpBgD,EAEmB,uDAFbtE,EAAM6D,EAAa,EAAE,IAAKoI,EAEb,uDAFuBzH,IAChD+F,EACyB,uDADjBpG,IAAkB3C,EACD,uDADQoL,KAAiBtK,EACzB,uDADiCuK,KAC1D5E,EAAyB,uDATlB,CACLkF,SAAU,EACVC,YAAa,GASf,MAAO,CACL/H,GAAIA,KACJf,MACAhD,KAAMA,GAAe+C,EAAcC,GACnC2H,UACA1B,QACA8C,MAAO,GACP/G,KAAM,EACNqE,IAAK,EACL/D,MAAO,EACPpF,OACAoJ,KAAM,KACNtI,QACA6G,cAAe7G,EACf2F,QC9BG,IAAMV,GAAa+F,IAAMC,gBAEjB,SAASC,KAAS,IAAD,EACDC,IAAaC,kBADZ,mBACvBC,EADuB,KAClBC,EADkB,OAGJC,qBAAWhI,EAAS,CAC5CQ,MAAO,CACL/D,MAAO,CACLhB,KAAM,SACNgF,KAAM,EACNE,QAAS,CAAC0G,GAAa,SAAU,WACjCG,MAAO,IAET3N,aAAc,YAEhBqH,KAAM,CACJrH,aAAc,YAEhBmH,OAAQ,CACNnH,aAAc,WACdoH,SAAU,CAAC,EAAE,EAAE,EAAE,GAAGiB,KAAI,kBAAMmF,SAEhClG,OAAQ,CACNA,OAAQ,CAAC5B,IAAcA,IAAcA,IAAcA,IAAcA,KACjE9C,MAAO,CACLwL,cAAe,EACfC,aAAc,EACdC,gBAAiB,IAGrBC,aAAc,OACd1N,IAAK,EACL4F,W3B/C4B,I2BgD5B3D,cAAe,EACfH,UAAU,EACV8J,OAAQwB,EACRpO,OAAQA,EAAO6D,eAlCa,mBAGvB9D,EAHuB,KAGhB8C,EAHgB,KA0D9B,OCvEa,SAAqB8L,EAAUC,GAC5C,IAAMC,EAAgBC,mBAGtBC,qBAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,IAGJI,qBAAU,WAIR,GAAc,OAAVH,EAAgB,CAClB,IAAI9I,EAAKmJ,aAJX,WACEJ,EAAcG,YAGaJ,GAC3B,OAAO,kBAAMM,cAAcpJ,OAE5B,CAAC8I,IDiCJO,EAAY,WACVpP,EAAMC,OAAO4C,KAAKC,EAAU9C,KAC3BA,EAAM6G,YAGTwI,YAAW,SAAS,kBAAMvM,EAAS,kBAEnCuM,YAAW,IAAK,CAAEC,SAAU,MAAO,SAASC,GAC1CtL,QAAQC,IAAI,oBAEdmL,YAAW,KAAK,SAAA/M,GACI,MAAdA,EAAMwE,KACRhE,EAAS,CAACZ,KAAM,mBAAoBsD,SAAU,KAG9B,MAAdlD,EAAMwE,KACRhE,EAAS,CAACZ,KAAM,mBAAoBsD,QAAS,QAM/C,eAACyC,GAAWuH,SAAZ,CAAqB5G,MAAO,CAAE5I,QAAO8C,YAArC,UACGwL,EACAtC,GAAchM,GACf,sBAAK+F,GAAG,YAAY6E,MAAO,CAACwC,SAAU,WAAYC,KAAM,EAAGoC,OAAQ,EAAGpF,MAAO,QAA7E,UACE,gCAAMrK,EAAMC,OAAOgB,IAAnB,MAA2BT,EAAOR,EAAMC,OAAOe,OAA/C,MAA0DhB,EAAMC,OAAOc,QACvE,yCAAYf,EAAMC,OAAOuB,KAAzB,SACA,oDAAuBxB,EAAMC,OAAOwD,gBACpC,cAAC,IAAD,CAAQ2F,QAAS,WAAOtG,EAAS,gBAAjC,SAAmD9C,EAAM+C,SAAW,SAAW,UAC/E,uBACA,cAAC,IAAD,CAAQqG,QAAS,WAAOtG,EAAS,CAACZ,KAAM,mBAAoBsD,QAAS,MAArE,eACA,4CAAexF,EAAM6G,WAArB,OACA,cAAC,IAAD,CAAQuC,QAAS,WAAOtG,EAAS,CAACZ,KAAM,mBAAoBsD,SAAU,MAAtE,qBAMR,SAASwG,GAAchM,GACrB,OAAOA,EAAM2O,cACX,IAAK,OACH,OAAO,cAACxB,GAAD,IAET,QACE,MAAO,qBEzFEuC,OARf,WACE,OACE,qBAAKxH,UAAU,MAAf,SACE,cAACgG,GAAD,OCOSyB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.eb8c915b.chunk.js","sourcesContent":["export function getTicker(state) {\n  return state.ticker;\n}\n\nexport function getNamespacedDefaultMenu(state, stateNamespace) {\n  return state[stateNamespace].selectedItem;\n}\n\nexport function getActiveEvents(state) {\n  return getTicker(state).activeEvents;\n}","export const INIT_STAGE_SPEED = 500;\nexport const STATE_PROGRESS_INCREMENT = 1;\nexport const MONTH_LENGTH = 15;\n\nexport const TIME_OF_THE_DAY = {\n  MORNING: 'Morning',\n  AFTERNOON: 'Afternoon',\n  EVENING: 'Evening',\n  NIGHT: 'Night'\n};\n\nexport const MONTHS = [\n  'Decembary',\n  'Aprimay',\n  'Jugust',\n  'Septober'\n];\n\nexport const EVENT_TYPES = {\n  QUEST: 'QUEST',\n  EVENT: 'EVENT'\n};\n\nexport const QUEST_TYPES = {\n  GO_FETCH: 'Go Fetch'\n};\n\nexport const SEXES = {\n  MALE: 'male',\n  FEMALE: 'female'\n};","import { TIME_OF_THE_DAY } from '../consts';\n\n\n\nexport function isToday(ticker, date) {\n  return ticker.year === date[0] && ticker.month === date[1] && ticker.day === date[2];\n}\n\nexport function getTimeInFuture(startTime, difference) {\n  return getTimeFromHours(getTotalHours(startTime) + difference);\n}\n\nexport function getCurrentTime(ticker) {\n  return [ticker.year, ticker.month, ticker.day, ticker.hour];\n}\n\nexport function getHumanTime(time) {\n  \n}\n\nexport function getDifferenceTime(startTime, endTime) {\n  const difference = getTotalHours(endTime) - getTotalHours(startTime);\n\n  return getTimeFromHours(difference);\n}\n\n/*\n  year: 4 * 15 * 24 = 1440\n*/\nexport function getTotalHours(time) {\n  return time[0] * 1440 + time[1] * 360 + (time[2] - 1) * 24 + time[3];\n}\n\nexport function getTimeFromHours(hours) {\n  return [Math.floor(hours / 1440), Math.floor((hours / 360) % 4), Math.floor((hours / 24) % 15) + 1, hours % 24];\n}\n\n\nexport function getNextTime(currentStage) {\n  switch(currentStage) {\n    case TIME_OF_THE_DAY.MORNING:\n      return TIME_OF_THE_DAY.AFTERNOON;\n    case TIME_OF_THE_DAY.AFTERNOON:\n      return TIME_OF_THE_DAY.EVENING;\n    case TIME_OF_THE_DAY.EVENING:\n      return TIME_OF_THE_DAY.NIGHT;\n  }\n}\n","export function createEvent(start, end, name, description, type, startHandler, endHandler) {\n  return {\n    start,\n    end,\n    name,\n    description,\n    type,\n    startHandler,\n    endHandler\n  };\n}\n\nexport function rescheduleEvent(event, startDate, endDate) {\n  return createEvent(startDate, endDate, event.name, event.description, event.type, event.startHandler, event.endHandler);\n}\n\nexport default {\n  createEvent,\n  rescheduleEvent\n};","import { getTicker } from '../../redux/selectors';\nimport { isToday, getNextTime } from './tickerUtils';\nimport { createEvent, rescheduleEvent } from '../event';\n\nimport { MONTH_LENGTH, TIME_OF_THE_DAY, EVENT_TYPES } from '../../utils/consts';\n\n\nlet ticker;\n\nfunction initialize(state) {\n  ticker = {\n    currentStage: TIME_OF_THE_DAY.MORNING,\n    hour: 0,\n    day: 1,\n    month: 0,\n    year: 475,\n    todayEvents: [],\n    activeEvents:[],\n    events: [],\n    stats: {\n      totalEvents: 0,\n      ticks: 0\n    },\n    callADay,\n    advanceStage,\n    tick\n  };\n\n//#region Create default events\n  const festivityOne = createEvent([475, 0, 5, 8], [475, 0, 6, 0], 'Fifth of Decembrary', 'A very beautiful festivity', EVENT_TYPES.EVENT, (dispatch, state, event) => {\n    console.log(`It's ${event.name}  !!`);\n  }, (dispatch, state, event) => {\n    const ticker = getTicker(state);\n\n    ticker.events.push(rescheduleEvent(event, [ticker.year + 1, 0, 5, 8], [ticker.year + 1, 0, 6, 0]));\n  });\n\n  const festivityTwo = createEvent([475, 0, 1, 8], [475, 0, 8, 8], 'First Week of the year!', 'The very first week of the year', EVENT_TYPES.EVENT, (dispatch, state, event) => {\n    console.log(`It's ${event.name}  !!`);\n  }, (dispatch, state, event) => {\n    const ticker = getTicker(state);\n\n    ticker.events.push(rescheduleEvent(event, [ticker.year + 1, 0, 1, 8], [ticker.year + 1, 0, 8, 1]));\n  });\n\n  ticker.events.push(festivityOne, festivityTwo);\n\n  computeDayEvents({\n    ticker \n  });\n  \n//#endregion\n\n  return ticker;\n}\n\nfunction computeDayEvents(state) {\n  const ticker = getTicker(state);\n\n  ticker.todayEvents = ticker.events.filter((event) => {\n    return isToday(ticker, event.start) || isToday(ticker, event.end);\n  });\n}\n\nfunction checkEvents(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.todayEvents.filter((event) => {\n    return (event.start[3] === ticker.hour) || (event.end[3] === ticker.hour)\n  }).forEach((event) => {\n    if (isToday(ticker, event.start) && event.start[3] === ticker.hour) {\n      event.startHandler(dispatch, state, event);\n      ticker.activeEvents.push(event);\n    } else {\n      event.endHandler(dispatch, state, event);\n      ticker.events.splice(ticker.events.indexOf(event), 1);\n      ticker.activeEvents.splice(ticker.activeEvents.indexOf(event), 1);\n    }\n  });\n}\n\n\n//#region Ticking\n\nfunction tick(dispatch, state) {\n  if (state.isPaused) {\n    return;\n  }\n\n  getTicker(state).stats.ticks++;\n  getTicker(state).hour++;\n\n  dispatch('increaseStageProgress');\n\n  if (state.stageProgress === 5) {\n    state.ticker.advanceStage(dispatch, state);\n  \n    dispatch('resetStageProgress');\n  }   \n\n  checkEvents(dispatch, state);\n}\n\nfunction advanceStage(dispatch, state) {\n  const ticker = getTicker(state);\n\n  if (ticker.currentStage === TIME_OF_THE_DAY.NIGHT) {\n    return callADay(dispatch, state);    \n  }\n\n  ticker.currentStage = getNextTime(ticker.currentStage);\n}\n\nfunction callADay(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.currentStage = TIME_OF_THE_DAY.MORNING;\n  ticker.hour = 0;\n  ticker.day++;\n\n\n  if (ticker.day > MONTH_LENGTH) {\n    callAMonth(dispatch, state);\n  }  \n\n  computeDayEvents(state);\n\n  // console.log(ticker.todayEvents, ticker.activeEvents, ticker.events)\n}\n\nfunction callAMonth(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.day = 1;\n  ticker.month++;\n\n  if (ticker.month === 4) {\n    callAYear(dispatch, state);\n  }\n}\n\nfunction callAYear(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.month = 0;\n  ticker.year++;\n}\n\nexport default {\n  initialize\n};\n","export const femaleNames = [\"Aekkein\", \"Erna\", \"Gica\", \"Iris\", \"Laen\", \"Oanei\", \"Urusla\", \"Unt\", \"Zy\", \"Giny\", \"Teni\", \"Tania\",\n\t\"Tenisa\", \"Falish\", \"Tirs\", \"Bera\", \"Boria\", \"Terkia\", \"Tronash\", \"Si\", \"Gi\", \"Ti\", \"Fi\", \"Di\", \"Mi\", \"Peli\", \"Irnia\", \"Beth\",\n   \"Riven\", \"Vi\", \"Lio\"];\n\nexport const maleNames = [\"Anttirnet\", \"Carnil\", \"Estiv\", \"Halt\", \"Hoijof\", \"Laen\", \"Lisiern\", \"Berin\", \"Ton\", \"Shome\", \"Regit\",\n\t\"Lurin\", \"Maers\", \"Musten\", \"Oanei\", \"Raesh\", \"Terio\", \"Unt\", \"Ust\", \"Redik\", \"James\", \"Loki\", \"Tem\", \"Regot\",\n\t\"Josh\", \"Tom\" ,\"Jei\", \"Lioth\"];\n\nexport const surnames = [\"Golpeo\", \"Anorda\", \"Severnin\", \"Part\", \"Kek-vek-loah\", \"Vaen\", \"Nerivin\", \"Haeshi\", \"Vin-ti-selh\",\n\t\"Ver-to\", \"Vintoret\", \"Da Teri\", \"Von Bien\", \"Maer\", \"Serisn\", \"Vintaren\", \"Bertis\", \"Tetirit\", \"Tornet\", \"Bellabi\",\n\t\"Geron\", \"Tornes\", \"Gorez\", \"Lorez\", \"Gareth\"];\n\nexport const townNames = [\"Laptius\", \"Birnicie\", \"Gerina\", \"Olvinast\", \"Maktius\", \"New Berinet\", \"Berinet\", \"Old Berinet\",\n\t\"Not So Old Berinet\", \"Dantias\", \"Maktius\", \"Bluelake\", \"Pryland\", \"Crystalsage\"];\n\nexport const townFirstNames = [\"Great\", \"Big\", \"Blue\", \"Black\", \"Greay\", \"Nordic\", \"Rapid\", \"Shadow\", \"Violet\", \"White\", \"Gold\", \"Silver\",\n\t\"Bronze\", \"Iron\", \"Stone\", \"Water\", \"Rose\", \"Cold\", \"Cor\", \"Coast\", \"Bright\", \"Well\", \"Butter\", \"Dork\", \"Wind\", \"Orba\", \"North\",\n\t\"Wolf\", \"South\", \"East\", \"West\"];\n\nexport const townSecondNames = [\"shore\", \"size\", \"port\", \"fox\", \"ham\", \"mill\", \"mere\", \"gate\", \"bush\", \"bank\", \"way\", \"dedge\",\n\t\"keep\", \"cliff\", \"row\", \"mount\", \"river\", \"sea\", \"fall\", \"flea\", \"wald\", \"crest\", \"wick\", \"well\", \"mead\"];","import { maleNames, femaleNames, surnames } from './names';\nimport { SEXES } from './consts';\n\nexport function getRandomNumber(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport function getRandomInt(min, max) {\n  return Math.round(getRandomNumber(min, max));\n}\n\nexport function getRandomColor() {\n  return `#${Math.floor(Math.random()*16777215).toString(16)}`;\n}\n\n/*\n* Gets a random int from 1 to the number passed\n*/\nexport function roll(max) {\n return getRandomInt(0, max);\n}\n\n/*\n * Returns true or false based in a % probability\n*/\nfunction isHappening(prob) {\n\treturn getRandomInt(0, 100) <= prob;\n}\n\nexport function getRandomName(sex = SEXES.MALE) {\n\tif (sex == SEXES.MALE) {\n\t\treturn maleNames[getRandomInt(0,maleNames.length-1)];\n\t} else if (sex == SEXES.FEMALE) {\n\t\treturn femaleNames[getRandomInt(0,femaleNames.length-1)];\n\t}\n\treturn 'Bernt';\n}\n\nexport function getRandomSurname() {\n\treturn surnames[getRandomInt(0,surnames.length-1)];\n}","import { getTicker } from '../../redux/selectors';\nimport { createEvent }  from '../event';\nimport { getTimeInFuture, getCurrentTime } from '../ticker/tickerUtils';\nimport { EVENT_TYPES } from '../consts';\n\nexport function createStepTravelFor(quest, questValue) {\n  const execute = (store) => {\n    const ticker = getTicker(store);\n    const currentTime = getCurrentTime(ticker);\n    currentTime[3]++;\n\n    const endTime = getTimeInFuture(currentTime, questValue);\n    \n    return createEvent(currentTime, endTime, 'Quest Traveling', 'None', EVENT_TYPES.QUEST,\n      (dispatch, state, event) => {\n        quest.log.push(`Going to travel for ${questValue} hours.`)\n      }, (dispatch, state, event) => {\n        quest.log.push(`We arrived at our destination`);\n\n        dispatch({type: 'advanceQuest', payload: quest});\n      })\n  };\n  \n  return execute;\n}","import { getTicker } from '../../redux/selectors';\nimport { createEvent }  from '../event';\nimport { getTimeInFuture, getCurrentTime } from '../ticker/tickerUtils';\nimport { EVENT_TYPES, QUEST_TYPES } from '../consts';\nimport { createStepTravelFor } from './questUtils';\n\n\nfunction createStepQuestObjective(quest, questType) {\n  const execute = (store) => {\n    const ticker = getTicker(store);\n    const currentTime = getCurrentTime(ticker);\n    currentTime[3]++;\n\n    const endTime = getTimeInFuture(currentTime, 3);\n\n    return createEvent(currentTime, endTime, 'Executing Quest', 'None', EVENT_TYPES.QUEST,\n      (dispatch, state, event) => {\n        quest.log.push(`Started searching for the thing.`)\n      }, (dispatch, state, event) => {\n        quest.log.push(`Found the thing.`);\n\n        dispatch({type: 'advanceQuest', payload: quest});\n      })\n  };\n  \n  return execute;\n}\n\nexport default function generateStepsFetch(quest, questValue) {\n  return [\n    createStepTravelFor(quest, questValue),\n    createStepQuestObjective(quest, QUEST_TYPES.GO_FETCH, questValue),\n    createStepTravelFor(quest, questValue)\n  ];\n}","import { getTicker } from '../../redux/selectors';\nimport { getRandomInt } from '../random';\nimport { QUEST_TYPES } from '../consts';\nimport generateStepsFetch from './fetch';\n\n\nlet lastId = 0;\n\nexport default function createQuest() {\n  const id = ++lastId;\n\n  const quest = {\n    id,\n    name: 'No name',\n    description: 'No Description',\n    steps: [],\n    reward: 0,\n    questValue: 0,\n    active: false,\n    completed: false,\n    assignee: null,\n    log: []\n  }\n\n  const {name, description, reward, steps} = generateRandomQuestData(quest);\n\n  quest.name = name;\n  quest.description = description;\n  quest.reward = reward;\n  quest.steps = steps;\n\n  return quest;\n}\n\nfunction generateRandomQuestData(quest) {\n  // Value in hours\n  const questValue = getRandomInt(2, 8);\n\n  return {\n    name: 'Go Fetch',\n    description: 'Go find something somewhere',\n    reward: Math.floor(questValue * 2 + getRandomInt(-3, 4)),\n    questValue,\n    steps: generateStepsFetch(quest, questValue)\n  }\n}\n\n\n\nexport function startQuest(state, quest) {\n  if (quest.active) {\n    return;\n  }\n\n  quest.active = true;\n\n  executeStep(state, quest);\n}\n\nexport function advanceQuest(state, quest) {\n  quest.steps.shift()\n\n  if (quest.steps.length === 0) {\n    return completeQuest(quest);\n  }\n\n  executeStep(state, quest);\n}\n\nexport function executeStep(state, quest) {\n  const event = quest.steps[0](state);\n  const ticker = getTicker(state);\n\n  ticker.events.push(event);\n  ticker.todayEvents.push(event);\n}\n\nfunction completeQuest(quest) {\n  quest.completed = true;\n  quest.active = false;  \n\n  quest.log.push('Quest finished');\n} \n\n","\n// https://github.com/kolodny/immutability-helper\nimport update from 'immutability-helper';\n\nimport { startQuest, advanceQuest } from '../utils/quest';\nimport { STATE_PROGRESS_INCREMENT } from '../utils/consts';\n\nexport default function reducer(state, action) {\n  const computedAction = typeof action === 'string' ? { type: action} : action;\n\n  if (!['increaseStageProgress', 'resetStageProgress'].includes(computedAction.type))\n  console.log(computedAction);\n  switch (computedAction.type) {\n      case 'changeSelectedMenu':\n        return update(state, {\n          selectedItem: {$set: computedAction.payload}\n        });\n      case 'increaseStageProgress': \n        return update(state, {\n          stageProgress: {$set: state.stageProgress + STATE_PROGRESS_INCREMENT}\n        });\n      case 'resetStageProgress': \n        return update(state, {\n          stageProgress: {$set: 0}\n        });\n      case 'switchPause':\n        return update(state, {\n          isPaused: {$set: !state.isPaused}\n        });\n      case 'changeStageSpeed':\n        return update(state, {\n          stageSpeed: {$set: state.stageSpeed + computedAction.payload}\n        }); \n      default:\n  }\n\n  // #region Menus\n  switch (computedAction.type) {\n    case 'changeSelectedContentMenu': \n      return update(state, {\n        [computedAction.payload.stateNamespace]: {\n          selectedItem: { $set: computedAction.payload.key}\n        }\n      });\n    default:\n  }\n\n  //#endregion\n\n  // Guild\n  switch (computedAction.type) {\n    case 'askFounding':\n      return update(state, {\n        guild: {\n          stats: {\n            gold: { $set: 25 }\n          }\n        }\n      });\n    case 'addGoldToMember':\n      var memberIndex = state.guild.stats.members.indexOf(computedAction.payload);\n      var updatedMember = update(computedAction.payload, { gold: { $set: computedAction.payload.gold + 5}});\n\n      return update(state, {\n        guild: {\n          stats: {\n            members: {\n              $splice: [[memberIndex, 1, updatedMember]]\n            },\n            gold: { $set: state.guild.stats.gold - 5}\n          }\n        }\n      });\n    case 'hireGuildMember':   \n      return update(state, {\n        guild: {\n          stats: {\n            members: { $push: [computedAction.payload] },\n            gold: { $set: state.guild.stats.gold - (computedAction.payload.level * 5) }\n          }\n        },\n        tavern: {\n          recruits: { $splice: [[state.tavern.recruits.indexOf(computedAction.payload), 1]]}\n        }\n      });   \n    default:\n  }\n\n  // City\n  switch (computedAction.type) {\n    case 'changeSelectedCityMenu': \n      return update(state, {\n        city: {\n          selectedItem: { $set: computedAction.payload}\n        }\n      });\n    default:\n  }\n\n  // Quests\n  switch (computedAction.type) {\n    case 'addQuest':\n      return update(state, {\n        quests: { quests: {$push: computedAction.payload } }\n      });\n    case 'removeQuest': \n      return update(state, {\n        quests: {quests: { $splice: [[state.quests.quests.indexOf(computedAction.payload), 1]] }}\n      });\n    case 'startQuest': \n      startQuest(state, computedAction.payload);\n\n      return  update(state, {\n        quests: {quests: { $splice: [[state.quests.quests.indexOf(computedAction.payload), 1, computedAction.payload]] }}\n      });\n    case 'advanceQuest': \n      advanceQuest(state, computedAction.payload);\n      \n      return update(state, {\n        quests: {quests: { $splice: [[state.quests.quests.indexOf(computedAction.payload), 1, computedAction.payload]] }}\n      });\n    default:\n  }\n\n  console.log(\"returning Default\");\n  return state;\n}\n\n\n/*Available Commands\n{$push: array} push() all the items in array on the target.\n{$unshift: array} unshift() all the items in array on the target.\n{$splice: array of arrays} for each item in arrays call splice() on the target with the parameters provided by the item. Note: The items in the array are applied sequentially, so the order matters. The indices of the target may change during the operation.\n{$set: any} replace the target entirely.\n{$toggle: array of strings} toggles a list of boolean fields from the target object.\n{$unset: array of strings} remove the list of keys in array from the target object.\n{$merge: object} merge the keys of object with the target.\n{$apply: function} passes in the current value to the function and updates it with the new returned value.\n{$add: array of objects} add a value to a Map or Set. When adding to a Set you pass in an array of objects to add, when adding to a Map, you pass in [key, value] arrays like so: update(myMap, {$add: [['foo', 'bar'], ['baz', 'boo']]})\n{$remove: array of strings} remove the list of keys in array from a Map or Set.*/","import React, { useContext } from 'react';\nimport { AppContext } from '../world';\nimport { Menu } from 'antd';\n\nexport default function cityMenu() {\n  const { dispatch } = useContext(AppContext);\n\n  function changeMenuItem({ key }) {\n    dispatch({\n      type: 'changeSelectedCityMenu',\n      payload: key\n    });\n  }\n  \n  return (\n  <Menu className=\"CityMenu\" onSelect={changeMenuItem} theme=\"light\" mode=\"inline\" defaultSelectedKeys={[\"Overview\"]}>\n    <Menu.Item key=\"Overview\">Overview</Menu.Item>\n    <Menu.Item key=\"Guild\">Guild</Menu.Item>\n    <Menu.Item key=\"Market\">Market</Menu.Item>\n    <Menu.Item key=\"Tavern\">Tavern</Menu.Item>\n  </Menu>\n  );\n}\n\n","import React, { useContext } from 'react';\nimport { AppContext } from '../world';\nimport { getActiveEvents } from '../../redux/selectors';\n\nexport default function CityOverview() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <>\n      <h1>Overview</h1>\n\n      <h3>Active Events</h3>\n      \n      {getActiveEvents(state).map((event) => (<div key={event.name}>{event.name}</div>))}\n    </>\n  );\n}\n","import { List, Typography, Divider } from 'antd';\n\nexport default function GuildStats({name, gold, members}) {\n    const data = [\n        {name: \"name\", value: name},\n        {name: 'gold', value: gold},\n        {name: 'members', value: members.length}\n    ];\n    \n    return (\n        <>\n            <Divider orientation=\"left\">Stats</Divider>\n            <List\n                size=\"small\"\n                bordered\n                dataSource={data}\n                renderItem={item => (\n                    <List.Item>\n                        {item.name}: {item.value}\n                    </List.Item>\n                )}\n            />\n        </>\n    )\n}","import React, { useContext } from 'react';\nimport { AppContext } from '../world';\nimport { Button } from 'antd';\n\nimport Stats from \"./stats\";\n\n\nexport default function Overview() {\n  const { state, dispatch } = useContext(AppContext);\n  const {gold, members} = state.guild.stats;\n\n  return (\n    <>\n      <Stats {...state.guild.stats} />\n      <br />\n      {gold === 0 && members.length === 1 ? (\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            dispatch({ type: \"askFounding\" });\n          }}\n        >\n          Ask for founding to the city council\n        </Button>\n      ) : null}\n    </>\n  );\n}\n","import { Typography } from 'antd';\n\nexport function getStatColor(stat, computedStat) {\n  if (computedStat > stat) {\n    return 'success';\n  }\n\n  if (computedStat < stat) {\n    return 'danger';\n  }\n\n  return 'default';\n}\n\nexport default function renderStats(member) {\n  return Object.keys(member.stats).map((statName) => {\n    const stat = member.stats[statName];\n    const computedStat = member.computedStats[statName];\n\n    return <Typography.Text key={statName} type={getStatColor(stat, computedStat)}>{statName}: {computedStat}</Typography.Text>\n  });\n}\n\nexport function sumStats(member) {\n  return Object.keys(member.stats).reduce((acc, statName) => {\n    const stat = member.stats[statName];\n\n    return acc + stat;\n  }, 0) - member.stats.health;\n}\n\nexport function renderData(member) {\n  return Object.keys(member.data).map((statName) => {\n    const data = member.data[statName];\n\n    return <Typography.Text key={statName} >{statName}: {data}</Typography.Text>\n  });\n}","export const cardStyle = {\n  width: 200,\n  float: 'left',\n  margin: 5\n};\n\n/*\n * Formats a number and returns it with a given length\n*/\nexport function formatNumberLength(num, length) {\n\tlet r = \"\" + num;\n\twhile (r.length < length) {\n\t\tr = \"0\" + r;\n\t}\n\treturn r;\n}","\nimport React, { useContext } from 'react';\nimport { AppContext } from '../world';\nimport { Card, Typography, Space, Collapse } from 'antd';\n\n\nimport renderStats, {sumStats, renderData} from '../../utils/renderStats';\nimport { cardStyle } from '../../utils/styles';\n\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Members() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <>\n      {state.guild.stats.members.map((member, key) => {\n        return (\n          <Card key={key} style={cardStyle} title={member.name} extra={<div style={{width: 15, height: 15, background: member.color}}></div>}>\n            <Space style={{width: '100%'}} direction=\"vertical\">\n              <Text>Gold: {member.gold} <Text style={{fontSize: 18, cursor: 'pointer'}} onClick={() => {dispatch({type: \"addGoldToMember\", payload: member})}}>+</Text></Text>\n              <Text>Level: {member.level} ({member.exp} / {member.level * 2}) {member.exp > member.level * 2 ? '▲' : null}</Text>\n              <Text>Type: {member.type}</Text>\n              <Text>Task: {member.task ? member.task : \"None\"}</Text>\n              <Collapse ghost style={{marginLeft: -15}}>\n                <Panel header={`Stats (${sumStats(member)})`} key=\"1\">\n                  <Space style={{width: '100%'}} direction=\"vertical\">\n                    {renderStats(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n              <Collapse ghost style={{marginLeft: -15}}>\n                <Panel header=\"Data\" key=\"2\">\n                  <Space style={{width: '100%'}} direction=\"vertical\">\n                    {renderData(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n            </Space>\n          </Card>);\n      })}\n    </>\n  )\n}","import React, { useContext } from 'react';\nimport { AppContext } from '../world';\nimport { Menu } from 'antd';\n\nexport default function CityMenu({defaultItem, menuItems, stateNamespace}) {\n  const { dispatch } = useContext(AppContext);\n\n  function changeMenuItem({ key }) {\n    dispatch({\n      type: 'changeSelectedContentMenu',\n      payload: {\n        key,\n        stateNamespace\n      }\n    });\n  }\n  \n  return (\n  <Menu onSelect={changeMenuItem} theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={[defaultItem]} >\n    {menuItems.map(Item => <Menu.Item key={Item.name}>{Item.name}</Menu.Item>)}\n  </Menu>\n  );\n}\n\n","import React, { useContext } from 'react';\nimport { AppContext } from '../world';\nimport { Layout } from \"antd\";\n\nimport Menu from './menu';\nimport { getNamespacedDefaultMenu } from '../../redux/selectors';\n\nconst { Header, Content } = Layout;\n\nfunction renderContent(dispatch, state, menuItems, stateNamespace) {\n  const Content = menuItems.find((Item) => {\n    debugger;\n    return Item.name === state[stateNamespace].selectedItem;\n  });\n\n  return Content ? <Content /> : \"error\";\n}\n\nexport default function CityBuilding({menuItems, stateNamespace}) {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <Layout style={{ background: 'white'}}>\n      <Header\n        theme=\"light\"\n        style={{\n          background: 'white',\n          padding: 0\n        }}\n      >\n        <Menu defaultItem={getNamespacedDefaultMenu(state, stateNamespace)} menuItems={menuItems} stateNamespace={stateNamespace} />\n      </Header>\n      <Content style={{ background: 'white', padding: 10, margin: \"24px 16px 0\", overflow: \"initial\"}}>\n          {renderContent(dispatch, state, menuItems, stateNamespace) }\n      </Content>\n    </Layout>\n  );\n}\n","import Overview from './overview';\nimport Members from './members';\n\nimport CityBuilding from '../city-building';\n\nexport default function Guild() {\n\n  return (\n    <CityBuilding menuItems={[Overview, Members]} stateNamespace=\"guild\" />\n  );\n}\n","export default function Market() {\n  return \"hola\"\n}","import React, { useContext } from 'react';\nimport { AppContext } from '../world';\nimport { Typography } from 'antd';\n\nconst { Text } = Typography;\n\nexport default function Overview() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return <Text>Welcome to the Tavern, please take a seat!</Text>\n}","import React, { useContext } from \"react\";\nimport { AppContext } from \"../world\";\nimport { Card, Typography, Space, Collapse, Button } from \"antd\";\n\nimport { cardStyle } from '../../utils/styles';\nimport renderStats, { sumStats } from '../../utils/renderStats';\n\nconst { Title, Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Recruits() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <>\n      <Title level={4}>Available Recruits</Title>\n\n      {state.tavern.recruits.map((member, key) => {\n        const cost = member.level * 5;\n        const canHire = state.guild.stats.gold >= cost;\n\n        return (\n          <Card\n            key={key}\n            style={cardStyle}\n            title={`${member.name} ${member.surname}`}\n            extra={\n              <div\n                style={{ width: 15, height: 15, background: member.color }}\n              ></div>\n            }\n          >\n            <Space style={{ width: \"100%\" }} direction=\"vertical\">\n              <Text>\n                Level: {member.level} ({member.exp} / {member.level * 2}){\" \"}\n                {member.exp > member.level * 2 ? \"▲\" : null}\n              </Text>\n              <Text>Type: {member.type}</Text>\n              <Collapse ghost style={{ marginLeft: -15 }}>\n                <Panel header={`Stats (${sumStats(member)})`} key=\"1\">\n                  <Space style={{ width: \"100%\" }} direction=\"vertical\">\n                    {renderStats(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n              <Button\n                type=\"primary\"\n                disabled={canHire ? false : true}\n                onClick={() => {\n                  dispatch({ type: \"hireGuildMember\", payload: member });\n\n                  state.notify.info({\n                    message: `You just hired ${member.name} for ${cost} gold coins`,\n                  });\n                }}\n              >\n                Hire for {cost} gold coins\n              </Button>\n            </Space>\n          </Card>\n        );\n      })}\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../world\";\nimport { Card, Typography, Space, Collapse, Button } from \"antd\";\n\nimport { cardStyle } from '../../utils/styles';\n\nconst { Title, Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Quests() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <>\n      {state.quests.quests.map((quest, key) => {\n        return (\n          <Card key={key} style={cardStyle} title={quest.name}>\n            <Space style={{ width: \"100%\" }} direction=\"vertical\">\n              <Text>name: {quest.name}</Text>\n              <Text>description: {quest.description}</Text>\n              <Text>reward: {quest.reward}</Text>\n              <Collapse ghost style={{ marginLeft: -15 }}>\n                <Panel header={`Quest Log ${quest.log.length}`} key=\"1\">\n                  <Space style={{ width: \"100%\" }} direction=\"vertical\">\n                    {quest.log.map((log) => (\n                      <div key={log}>{log}</div>\n                    ))}\n                  </Space>\n                </Panel>\n              </Collapse>\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  dispatch({ type: \"startQuest\", payload: quest });\n\n                  state.notify.info({\n                    message: `You just started ${quest.name}`,\n                  });\n                }}\n              >\n                Start quest\n              </Button>\n            </Space>\n          </Card>\n        );\n      })}\n    </>\n  );\n}\n","import CityBuilding from '../city-building';\n\nimport Overview from './overview';\nimport Recruits from './recruits';\nimport Quests from './quests';\n\nexport default function Tavern() {  \n  \n  return <CityBuilding menuItems={[Overview, Recruits, Quests]} stateNamespace=\"tavern\" />\n}","import React, { useContext } from 'react';\nimport { AppContext } from '../world';\n\nimport { Layout } from \"antd\";\n\nimport CityMenu from './city-menu';\nimport Overview from './city-overview';\nimport Guild from '../guild';\nimport Market from '../market';\nimport Tavern from '../tavern';\n\nconst { Sider, Content } = Layout;\n\n\nexport default function City() {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <Layout>\n      <Sider\n        theme=\"light\"\n        style={{\n          overflow: \"auto\",\n          height: \"100vh\",\n          position: \"fixed\",\n          left: 0,\n        }}\n      >\n        <CityMenu />\n      </Sider>\n      <Layout style={{ marginLeft: 200, height: \"100vh\" }}>\n        <Content style={{ background: 'white', padding: 10, margin: \"24px 16px 0\", overflow: \"initial\"}}>\n            {renderContent(dispatch, state)}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\n\nfunction renderContent(dispatch, state) {\n  switch(state.city.selectedItem) {\n    case 'Overview': \n      return <Overview />\n    case 'Guild':\n      return <Guild />\n    case 'Market': \n      return <Market />\n    case 'Tavern': \n      return <Tavern />\n\n    default:\n      return \"No content for City\";\n  }\n}","import { SEXES } from './consts';\nimport {getRandomInt, getRandomColor, getRandomName, getRandomSurname} from './random';\n\nlet id = 0;\n\nfunction getRandomType() {\n  return Math.random() > 0.5 ? 'warrior' : 'mage';\n}\n\nfunction getRandomStats() {\n  return {\n    health: getRandomInt(8, 10),\n    strength: getRandomInt(1, 3),\n    willpower: getRandomInt(1, 3),\n    endurance: getRandomInt(1, 3),\n    agility: getRandomInt(1, 3)\n  }\n}\n\nfunction getInitialData() {\n  return {\n    missions: 0,\n    daysInGuild: 0,\n  }\n}\n\nexport default function createMember(\n  name, sex = SEXES[getRandomInt(0,1)], surname = getRandomSurname(), \n  color = getRandomColor(), type = getRandomType(), stats = getRandomStats(),\n  data = getInitialData()) {\n\n  return {\n    id: id++,\n    sex,\n    name: name ? name :  getRandomName(sex),\n    surname,\n    color,\n    items: [],\n    gold: 0,\n    exp: 0,\n    level: 1,\n    type,\n    task: null,\n    stats,\n    computedStats: stats,\n    data\n  } \n}\n\n","import React, { useReducer } from \"react\";\nimport { notification, Progress, Button } from 'antd';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport ticker from '../utils/ticker';\nimport useInterval from '../utils/useInterval';\nimport { MONTHS } from '../utils/consts';\n\nimport reducer from '../redux/reducer';\nimport City from './city';\nimport createMember from '../utils/createMember';\nimport createQuest from '../utils/quest';\n\nimport { INIT_STAGE_SPEED } from '../utils/consts';\n\nexport const AppContext = React.createContext();\n\nexport default function World() {\n  const [api, contextHolder] = notification.useNotification();\n\n  const [state, dispatch] = useReducer(reducer, {\n    guild: {\n      stats: {\n        name: \"Tainor\",\n        gold: 0,\n        members: [createMember(\"Hoijof\", \"indigo\")],\n        items: [],\n      },\n      selectedItem: 'Overview' \n    },\n    city: {\n      selectedItem: 'Overview',\n    },\n    tavern: {\n      selectedItem: 'Overview',\n      recruits: [1,2,3,4].map(() => createMember())\n    },\n    quests: {\n      quests: [createQuest(),createQuest(),createQuest(),createQuest(),createQuest()],\n      stats: {\n        questsCreated: 0,\n        questStarted: 0,\n        questsCompleted: 0\n      }\n    },\n    selectedCity: 'City',\n    day: 0,\n    stageSpeed: INIT_STAGE_SPEED,\n    stageProgress: 0,\n    isPaused: false,\n    notify: api,\n    ticker: ticker.initialize(),\n  });\n\n  useInterval(() => {\n    state.ticker.tick(dispatch, state);\n  }, state.stageSpeed)\n\n  // #region Hotkeys\n  useHotkeys('space', () => dispatch('switchPause')) \n  \n  useHotkeys('+', { splitKey: '-' }, function(e){\n    console.log('you pressed +');\n  })\n  useHotkeys(\"*\", event => {\n    if (event.key === \"+\") {\n      dispatch({type: 'changeStageSpeed', payload: -25})\n    }\n\n    if (event.key === \"-\") {\n      dispatch({type: 'changeStageSpeed', payload: 25})\n    }\n  })\n  //#endregion\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {contextHolder}\n      {renderContent(state)}\n      <div id=\"TickerBar\" style={{position: 'absolute', left: 0, bottom: 0, width: '100%'}}>\n        <div>{state.ticker.day} / {MONTHS[state.ticker.month]} / {state.ticker.year}</div>\n        <div>Hour: {state.ticker.hour}:00</div>\n        <div>Time of The Day: {state.ticker.currentStage}</div>\n        <Button onClick={() => {dispatch('switchPause')}}>{state.isPaused ? 'Resume' : 'Pause'}</Button>\n        <br />\n        <Button onClick={() => {dispatch({type: 'changeStageSpeed', payload: 10})}}>-</Button>\n        <span> Speed: {state.stageSpeed} </span>\n        <Button onClick={() => {dispatch({type: 'changeStageSpeed', payload: -10})}}>+</Button>\n      </div>\n    </AppContext.Provider>\n  )\n}\n\nfunction renderContent(state) {\n  switch(state.selectedCity) {\n    case 'City': \n      return <City />\n\n    default:\n      return \"No city to render\";\n  }\n}","import React, { useState, useEffect, useRef } from 'react';\n\n// From Dan Ama :D \n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}","import World from './components/world';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <World />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import './mvp.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}