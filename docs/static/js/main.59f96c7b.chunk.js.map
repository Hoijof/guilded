{"version":3,"sources":["redux/selectors.js","utils/event.js","utils/ticker/index.js","utils/consts.js","redux/reducer.js","components/city/city-menu.js","components/city/city-overview.js","components/guild/menu.js","components/guild/stats.js","components/guild/overview.js","utils/renderStats.js","utils/styles.js","components/guild/members/index.js","components/guild/index.js","components/market/index.js","components/tavern/index.js","components/city/index.js","utils/random.js","utils/createMember.js","utils/getRandomName.js","components/world.js","utils/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["getTicker","state","ticker","getGuildDefaultMenu","guild","selectedItem","getActiveEvents","activeEvents","createEvent","start","end","name","description","type","startHandler","endHandler","EVENT_TYPES","computeDayEvents","todayEvents","events","filter","event","isToday","date","year","month","day","rescheduleEvent","startDate","endDate","advanceStage","dispatch","currentStage","TimeOfTheDay","NIGHT","callADay","MORNING","AFTERNOON","EVENING","getNextTime","hour","callAYear","callAMonth","tick","isPaused","stats","ticks","stageProgress","forEach","push","splice","indexOf","checkEvents","MONTHS","initialize","totalEvents","festivityOne","console","log","festivityTwo","reducer","action","computedAction","includes","update","$set","payload","stageSpeed","gold","memberIndex","members","updatedMember","$splice","$push","level","tavern","recruits","city","cityMenu","className","onSelect","key","theme","mode","defaultSelectedKeys","Item","CityOverview","map","GuildMenu","defaultItem","GuildStats","data","value","length","orientation","size","bordered","dataSource","renderItem","item","Overview","onClick","getStatColor","stat","computedStat","renderStats","member","Object","keys","statName","computedStats","Text","sumStats","reduce","acc","health","renderData","cardStyle","width","float","margin","Typography","Panel","Collapse","Members","style","title","extra","height","background","color","direction","fontSize","cursor","exp","task","ghost","marginLeft","header","Header","Layout","Content","renderContent","Guild","padding","overflow","Market","Title","Tavern","cost","canHire","disabled","notify","info","message","Sider","City","position","left","getRandomInt","min","max","Math","round","random","getRandomColor","floor","toString","id","getRandomType","getRandomStats","strength","willpower","endurance","agility","createMember","missions","daysInGuild","items","World","notification","useNotification","api","contextHolder","useReducer","selectedCity","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","useHotkeys","splitKey","e","bottom","percent","showInfo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59f96c7b.chunk.js","sourcesContent":["export function getTicker(state) {\n  return state.ticker;\n}\n\nexport function getGuildDefaultMenu(state) {\n  return state.guild.selectedItem;\n}\n\nexport function getActiveEvents(state) {\n  return getTicker(state).activeEvents;\n}","export default function createEvent(start, end, name, description, type, startHandler, endHandler) {\n  return {\n    start,\n    end,\n    name,\n    description,\n    type,\n    startHandler,\n    endHandler\n  };\n}\n\nexport const EVENT_TYPES = {\n  QUEST: 'QUEST',\n  EVENT: 'EVENT'\n};","import { getTicker } from '../../redux/selectors';\nimport { MONTH_LENGTH } from '../../utils/consts';\n\nimport createEvent, { EVENT_TYPES } from '../event';\n\nlet ticker;\n\nfunction initialize(state) {\n  ticker = {\n    currentStage: TimeOfTheDay.MORNING,\n    hour: 0,\n    day: 1,\n    month: 0,\n    year: 475,\n    todayEvents: [],\n    activeEvents:[],\n    events: [],\n    stats: {\n      totalEvents: 0,\n      ticks: 0\n    },\n    callADay,\n    advanceStage,\n    tick\n  };\n\n//#region Create default events\n  const festivityOne = createEvent([475, 0, 5, 8], [475, 0, 6, 0], 'Fifth of Decembrary', 'A very beautiful festivity', EVENT_TYPES.EVENT, (dispatch, state, event) => {\n    console.log(`It's ${event.name}  !!`);\n  }, (dispatch, state, event) => {\n    const ticker = getTicker(state);\n\n    ticker.events.push(rescheduleEvent(event, [ticker.year + 1, 0, 5, 8], [ticker.year + 1, 0, 6, 0]));\n  });\n\n  const festivityTwo = createEvent([475, 0, 1, 8], [475, 0, 8, 8], 'First Week of the year!', 'The very first week of the year', EVENT_TYPES.EVENT, (dispatch, state, event) => {\n    console.log(`It's ${event.name}  !!`);\n  }, (dispatch, state, event) => {\n    const ticker = getTicker(state);\n\n    ticker.events.push(rescheduleEvent(event, [ticker.year + 1, 0, 1, 8], [ticker.year + 1, 0, 8, 1]));\n  });\n\n  ticker.events.push(festivityOne, festivityTwo);\n\n  computeDayEvents({\n    ticker \n  });\n  \n//#endregion\n\n  return ticker;\n}\n\nfunction computeDayEvents(state) {\n  const ticker = getTicker(state);\n\n  ticker.todayEvents = ticker.events.filter((event) => {\n    return isToday(ticker, event.start) || isToday(ticker, event.end);\n  });\n}\n\nfunction checkEvents(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.todayEvents.filter((event) => {\n    return (event.start[3] === ticker.hour) || (event.end[3] === ticker.hour)\n  }).forEach((event) => {\n    if (isToday(ticker, event.start) && event.start[3] === ticker.hour) {\n      event.startHandler(dispatch, state, event);\n      ticker.activeEvents.push(event);\n    } else {\n      event.endHandler(dispatch, state, event);\n      ticker.events.splice(ticker.events.indexOf(event), 1);\n      ticker.activeEvents.splice(ticker.activeEvents.indexOf(event), 1);\n    }\n  });\n}\n\nfunction isToday(ticker, date) {\n  return ticker.year === date[0] && ticker.month === date[1] && ticker.day === date[2];\n}\n\nexport function rescheduleEvent(event, startDate, endDate) {\n  return createEvent(startDate, endDate, event.name, event.description, event.type, event.startHandler, event.endHandler);\n}\n\n//#region Ticking\n\nfunction advanceStage(dispatch, state) {\n  const ticker = getTicker(state);\n\n  if (ticker.currentStage === TimeOfTheDay.NIGHT) {\n    return callADay(dispatch, state);    \n  }\n\n  ticker.currentStage = getNextTime(ticker.currentStage);\n}\n\nfunction callADay(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.currentStage = TimeOfTheDay.MORNING;\n  ticker.hour = 0;\n  ticker.day++;\n\n\n  if (ticker.day > MONTH_LENGTH) {\n    callAMonth(dispatch, state);\n  }  \n\n  computeDayEvents(state);\n\n  // console.log(ticker.todayEvents, ticker.activeEvents, ticker.events)\n}\n\nfunction callAMonth(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.day = 1;\n  ticker.month++;\n\n  if (ticker.month === 4) {\n    callAYear(dispatch, state);\n  }\n}\n\nfunction callAYear(dispatch, state) {\n  const ticker = getTicker(state);\n\n  ticker.month = 0;\n  ticker.year++;\n}\n\nfunction tick(dispatch, state) {\n  if (state.isPaused) {\n    return;\n  }\n\n  getTicker(state).stats.ticks++;\n  getTicker(state).hour++;\n\n  dispatch('increaseStageProgress'); \n\n  if (state.stageProgress === 5) {\n    state.ticker.advanceStage(dispatch, state);\n  \n    return dispatch('resetStageProgress');\n  }   \n\n  checkEvents(dispatch, state);\n}\n\nexport const TimeOfTheDay = {\n  MORNING: 'Morning',\n  AFTERNOON: 'Afternoon',\n  EVENING: 'Evening',\n  NIGHT: 'Night'\n};\n\nfunction getNextTime(currentStage) {\n  switch(currentStage) {\n    case TimeOfTheDay.MORNING:\n      return TimeOfTheDay.AFTERNOON;\n    case TimeOfTheDay.AFTERNOON:\n      return TimeOfTheDay.EVENING;\n    case TimeOfTheDay.EVENING:\n      return TimeOfTheDay.NIGHT;\n  }\n}\n\nexport const MONTHS = [\n  'Decembary',\n  'Aprimay',\n  'Jugust',\n  'Septober'\n];\n//#endregion\n\nexport default {\n  initialize\n};","export const INIT_STAGE_SPEED = 50;\nexport const STATE_PROGRESS_INCREMENT = 1;\nexport const MONTH_LENGTH = 15;","\n// https://github.com/kolodny/immutability-helper\nimport update from 'immutability-helper';\n\nimport { STATE_PROGRESS_INCREMENT } from '../utils/consts';\n\nexport default function reducer(state, action) {\n  const computedAction = typeof action === 'string' ? { type: action} : action;\n\n  if (!['increaseStageProgress', 'resetStageProgress'].includes(computedAction.type))\n  console.log(computedAction);\n  switch (computedAction.type) {\n      case 'changeSelectedMenu':\n        return update(state, {\n          selectedItem: {$set: computedAction.payload}\n        });\n      case 'increaseStageProgress': \n        return update(state, {\n          stageProgress: {$set: state.stageProgress + STATE_PROGRESS_INCREMENT}\n        });\n      case 'resetStageProgress': \n        return update(state, {\n          stageProgress: {$set: 0}\n        });\n      case 'switchPause':\n        return update(state, {\n          isPaused: {$set: !state.isPaused}\n        });\n      case 'changeStageSpeed':\n        return update(state, {\n          stageSpeed: {$set: state.stageSpeed + computedAction.payload}\n        }); \n      default:\n  }\n\n  // Guild\n  switch (computedAction.type) {\n    case 'changeSelectedGuildMenu': \n      return update(state, {\n        guild: {\n          selectedItem: { $set: computedAction.payload}\n        }\n      });\n    case 'askFounding':\n      return update(state, {\n        guild: {\n          stats: {\n            gold: { $set: 25 }\n          }\n        }\n      });\n    case 'addGoldToMember':\n      var memberIndex = state.guild.stats.members.indexOf(computedAction.payload);\n      var updatedMember = update(computedAction.payload, { gold: { $set: computedAction.payload.gold + 5}});\n\n      return update(state, {\n        guild: {\n          stats: {\n            members: {\n              $splice: [[memberIndex, 1, updatedMember]]\n            },\n            gold: { $set: state.guild.stats.gold - 5}\n          }\n        }\n      });\n    case 'hireGuildMember':   \n      return update(state, {\n        guild: {\n          stats: {\n            members: { $push: [computedAction.payload] },\n            gold: { $set: state.guild.stats.gold - (computedAction.payload.level * 5) }\n          }\n        },\n        tavern: {\n          recruits: { $splice: [[state.tavern.recruits.indexOf(computedAction.payload), 1]]}\n        }\n      });   \n    default:\n  }\n\n  // City\n  switch (computedAction.type) {\n    case 'changeSelectedCityMenu': \n      return update(state, {\n        city: {\n          selectedItem: { $set: computedAction.payload}\n        }\n      });\n    default:\n  }\n\n  console.log(\"returning Default\");\n  return state;\n}\n\n\n/*Available Commands\n{$push: array} push() all the items in array on the target.\n{$unshift: array} unshift() all the items in array on the target.\n{$splice: array of arrays} for each item in arrays call splice() on the target with the parameters provided by the item. Note: The items in the array are applied sequentially, so the order matters. The indices of the target may change during the operation.\n{$set: any} replace the target entirely.\n{$toggle: array of strings} toggles a list of boolean fields from the target object.\n{$unset: array of strings} remove the list of keys in array from the target object.\n{$merge: object} merge the keys of object with the target.\n{$apply: function} passes in the current value to the function and updates it with the new returned value.\n{$add: array of objects} add a value to a Map or Set. When adding to a Set you pass in an array of objects to add, when adding to a Map, you pass in [key, value] arrays like so: update(myMap, {$add: [['foo', 'bar'], ['baz', 'boo']]})\n{$remove: array of strings} remove the list of keys in array from a Map or Set.*/","import { Menu } from 'antd';\n\nexport default function cityMenu({dispatch}) {\n  function changeMenuItem({ key }) {\n    dispatch({\n      type: 'changeSelectedCityMenu',\n      payload: key\n    });\n  }\n  \n  return (\n  <Menu className=\"CityMenu\" onSelect={changeMenuItem} theme=\"light\" mode=\"inline\" defaultSelectedKeys={[\"Overview\"]}>\n    <Menu.Item key=\"Overview\">Overview</Menu.Item>\n    <Menu.Item key=\"Guild\">Guild</Menu.Item>\n    <Menu.Item key=\"Market\">Market</Menu.Item>\n    <Menu.Item key=\"Tavern\">Tavern</Menu.Item>\n  </Menu>\n  );\n}\n\n","import { getActiveEvents } from '../../redux/selectors';\n\nexport default function CityOverview({dispatch, state}) {\n  return (\n    <>\n      <h1>Overview</h1>\n\n      <h3>Active Events</h3>\n      \n      {getActiveEvents(state).map((event) => (<div key={event.name}>{event.name}</div>))}\n    </>\n  );\n}\n","import { Menu } from 'antd';\n\nexport default function GuildMenu({dispatch, defaultItem}) {\n  function changeMenuItem({ key }) {\n    dispatch({\n      type: 'changeSelectedGuildMenu',\n      payload: key\n    });\n  }\n  \n  return (\n  <Menu onSelect={changeMenuItem} theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={[defaultItem]} >\n    <Menu.Item key=\"Overview\">Overview</Menu.Item>\n    <Menu.Item key=\"Members\">Members</Menu.Item>\n  </Menu>\n  );\n}\n\n","import { List, Typography, Divider } from 'antd';\n\nexport default function GuildStats({name, gold, members}) {\n    const data = [\n        {name: \"name\", value: name},\n        {name: 'gold', value: gold},\n        {name: 'members', value: members.length}\n    ];\n    \n    return (\n        <>\n            <Divider orientation=\"left\">Stats</Divider>\n            <List\n                size=\"small\"\n                bordered\n                dataSource={data}\n                renderItem={item => (\n                    <List.Item>\n                        {item.name}: {item.value}\n                    </List.Item>\n                )}\n            />\n        </>\n    )\n}","import { Button } from 'antd';\n\nimport Stats from \"./stats\";\n\n\nexport default function Overview({dispatch, state}) {\n  const {gold, members} = state.guild.stats;\n\n  return (\n    <>\n      <Stats {...state.guild.stats} />\n      <br />\n      {gold === 0 && members.length === 1 ? (\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            dispatch({ type: \"askFounding\" });\n          }}\n        >\n          Ask for founding to the city council\n        </Button>\n      ) : null}\n    </>\n  );\n}\n","import { Typography } from 'antd';\n\nexport function getStatColor(stat, computedStat) {\n  if (computedStat > stat) {\n    return 'success';\n  }\n\n  if (computedStat < stat) {\n    return 'danger';\n  }\n\n  return 'default';\n}\n\nexport default function renderStats(member) {\n  return Object.keys(member.stats).map((statName) => {\n    const stat = member.stats[statName];\n    const computedStat = member.computedStats[statName];\n\n    return <Typography.Text key={statName} type={getStatColor(stat, computedStat)}>{statName}: {computedStat}</Typography.Text>\n  });\n}\n\nexport function sumStats(member) {\n  return Object.keys(member.stats).reduce((acc, statName) => {\n    const stat = member.stats[statName];\n\n    return acc + stat;\n  }, 0) - member.stats.health;\n}\n\nexport function renderData(member) {\n  return Object.keys(member.data).map((statName) => {\n    const data = member.data[statName];\n\n    return <Typography.Text key={statName} >{statName}: {data}</Typography.Text>\n  });\n}","export const cardStyle = {\n  width: 200,\n  float: 'left',\n  margin: 5\n};","\nimport { Card, Typography, Space, Collapse } from 'antd';\n\n\nimport renderStats, {sumStats, renderData} from '../../../utils/renderStats';\nimport { cardStyle } from '../../../utils/styles';\n\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Members({dispatch, state}) {\n\n  return (\n    <>\n      {state.guild.stats.members.map((member, key) => {\n        return (\n          <Card key={key} style={cardStyle} title={member.name} extra={<div style={{width: 15, height: 15, background: member.color}}></div>}>\n            <Space style={{width: '100%'}} direction=\"vertical\">\n              <Text>Gold: {member.gold} <Text style={{fontSize: 18, cursor: 'pointer'}} onClick={() => {dispatch({type: \"addGoldToMember\", payload: member})}}>+</Text></Text>\n              <Text>Level: {member.level} ({member.exp} / {member.level * 2}) {member.exp > member.level * 2 ? '▲' : null}</Text>\n              <Text>Type: {member.type}</Text>\n              <Text>Task: {member.task ? member.task : \"None\"}</Text>\n              <Collapse ghost style={{marginLeft: -15}}>\n                <Panel header={`Stats (${sumStats(member)})`} key=\"1\">\n                  <Space style={{width: '100%'}} direction=\"vertical\">\n                    {renderStats(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n              <Collapse ghost style={{marginLeft: -15}}>\n                <Panel header=\"Data\" key=\"2\">\n                  <Space style={{width: '100%'}} direction=\"vertical\">\n                    {renderData(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n            </Space>\n          </Card>);\n      })}\n    </>\n  )\n}","import { Layout } from \"antd\";\n\nimport GuildMenu from './menu';\nimport Overview from './overview';\nimport Members from './members';\n\nimport {getGuildDefaultMenu} from '../../redux/selectors';\n\nconst { Header, Content } = Layout;\n\nfunction renderContent(dispatch, state) {\n  switch(state.guild.selectedItem) {\n    case 'Overview': \n      return <Overview dispatch={dispatch} state={state} />\n    case 'Members':\n      return <Members dispatch={dispatch} state={state} />\n    case 'Market': \n      return <Overview dispatch={dispatch} state={state} />\n\n    default:\n      return \"error\";\n  }\n}\n\nexport default function Guild({dispatch, state}) {\n  return (\n    <Layout style={{ background: 'white'}}>\n      <Header\n        theme=\"light\"\n        style={{\n          background: 'white',\n          padding: 0\n        }}\n      >\n        <GuildMenu dispatch={dispatch} defaultItem={getGuildDefaultMenu(state)} />\n      </Header>\n      <Content style={{ background: 'white', padding: 10, margin: \"24px 16px 0\", overflow: \"initial\"}}>\n          {renderContent(dispatch, state)}\n      </Content>\n    </Layout>\n  );\n}\n","export default function Market() {\n  return \"hola\"\n}","import { Card, Typography, Space, Collapse, Button } from 'antd';\n\nimport renderStats, { sumStats } from '../../utils/renderStats';\nimport { cardStyle } from '../../utils/styles';\n\nconst { Title, Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Tavern({ dispatch, state }) {  \n\n  return (\n    <>\n      <Text>Welcome to the Tavern, please take a seat!</Text>\n      <Title level={4}>Available Recruits</Title>\n      \n      {state.tavern.recruits.map((member, key) => {\n        const cost = member.level * 5;\n        const canHire = state.guild.stats.gold >= cost;\n\n        return (\n          <Card key={key} style={cardStyle} title={member.name} extra={<div style={{width: 15, height: 15, background: member.color}}></div>}>\n            <Space style={{width: '100%'}} direction=\"vertical\">\n              <Text>Level: {member.level} ({member.exp} / {member.level * 2}) {member.exp > member.level * 2 ? '▲' : null}</Text>\n              <Text>Type: {member.type}</Text>\n              <Collapse ghost style={{marginLeft: -15}}>\n                <Panel header={`Stats (${sumStats(member)})`} key=\"1\">\n                  <Space style={{width: '100%'}} direction=\"vertical\">\n                    {renderStats(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n              <Button type=\"primary\" disabled={canHire ? false : true} onClick={() => {\n                dispatch({type: 'hireGuildMember', payload: member})\n              \n                state.notify.info({message: `You just hired ${member.name} for ${cost} gold coins`});\n              }\n              }>Hire for {cost} gold coins</Button>\n            </Space>\n          </Card>);\n      })}\n    </>\n  );\n}","import { Layout } from \"antd\";\n\nimport CityMenu from './city-menu';\nimport Overview from './city-overview';\nimport Guild from '../guild';\nimport Market from '../market';\nimport Tavern from '../tavern';\n\nconst { Sider, Content } = Layout;\n\n\nexport default function City({dispatch, state}) {\n  const city = state.city;\n\n  return (\n    <Layout>\n      <Sider\n        theme=\"light\"\n        style={{\n          overflow: \"auto\",\n          height: \"100vh\",\n          position: \"fixed\",\n          left: 0,\n        }}\n      >\n        <CityMenu dispatch={dispatch} />\n      </Sider>\n      <Layout style={{ marginLeft: 200, height: \"100vh\" }}>\n        <Content style={{ background: 'white', padding: 10, margin: \"24px 16px 0\", overflow: \"initial\"}}>\n            {renderContent(dispatch, state)}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\n\nfunction renderContent(dispatch, state) {\n  switch(state.city.selectedItem) {\n    case 'Overview': \n      return <Overview dispatch={dispatch} state={state} />\n    case 'Guild':\n      return <Guild dispatch={dispatch} state={state} />\n    case 'Market': \n      return <Market dispatch={dispatch} state={state} />\n    case 'Tavern': \n      return <Tavern dispatch={dispatch} state={state} />\n\n    default:\n      return \"No content\";\n  }\n}","export function getRandomNumber(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport function getRandomInt(min, max) {\n  return Math.round(Math.random() * (max - min) + min);\n}\n\nexport function getRandomColor() {\n  return `#${Math.floor(Math.random()*16777215).toString(16)}`;\n}","import getRandomName from './getRandomName';\nimport {getRandomInt, getRandomColor} from './random';\n\nlet id = 0;\n\nfunction getRandomType() {\n  return Math.random() > 0.5 ? 'warrior' : 'mage';\n}\n\nfunction getRandomStats() {\n  return {\n    health: getRandomInt(8, 10),\n    strength: getRandomInt(1, 3),\n    willpower: getRandomInt(1, 3),\n    endurance: getRandomInt(1, 3),\n    agility: getRandomInt(1, 3)\n  }\n}\n\nfunction getInitialData() {\n  return {\n    missions: 0,\n    daysInGuild: 0,\n  }\n}\n\nexport default function createMember(name = getRandomName(), color = getRandomColor(), type = getRandomType(), stats = getRandomStats(), data = getInitialData()) {\n  return {\n    id: id++,\n    name,\n    color,\n    items: [],\n    gold: 0,\n    exp: 0,\n    level: 1,\n    type,\n    task: null,\n    stats,\n    computedStats: stats,\n    data\n  } \n}\n\n","export default function getRandomName() {\n  return \"name\";\n}","import React, { useReducer } from \"react\";\nimport { notification, Progress, Button } from 'antd';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport ticker, { MONTHS } from '../utils/ticker';\nimport useInterval from '../utils/useInterval';\n\nimport reducer from '../redux/reducer';\nimport City from './city';\nimport createMember from '../utils/createMember';\n\nimport { INIT_STAGE_SPEED } from '../utils/consts';\n\nexport default function World() {\n  const [api, contextHolder] = notification.useNotification();\n\n  const [state, dispatch] = useReducer(reducer, {\n    guild: {\n      stats: {\n        name: \"Tainor\",\n        gold: 0,\n        members: [createMember(\"Hoijof\", \"indigo\")],\n        items: [],\n      },\n      selectedItem: 'Overview' \n    },\n    city: {\n      selectedItem: 'Overview',\n    },\n    tavern: {\n      recruits: [1,2,3,4,5,6,7,8,9,10].map(() => createMember())\n    },\n    selectedCity: 'City',\n    day: 0,\n    stageSpeed: INIT_STAGE_SPEED,\n    stageProgress: 0,\n    isPaused: false,\n    notify: api,\n    ticker: ticker.initialize(),\n  });\n\n  useInterval(() => {\n    state.ticker.tick(dispatch, state);\n  }, state.stageSpeed)\n\n  useHotkeys('space', () => dispatch('switchPause')) \n  \n  useHotkeys('+', { splitKey: '-' }, function(e){\n    console.log('you pressed +');\n  })\n  useHotkeys(\"*\", event => {\n    if (event.key === \"+\") {\n      dispatch({type: 'changeStageSpeed', payload: -25})\n    }\n\n    if (event.key === \"-\") {\n      dispatch({type: 'changeStageSpeed', payload: 25})\n    }\n  })\n\n  return (\n    <>\n      {contextHolder}\n      {renderContent(dispatch, state)}\n      <div id=\"TickerBar\" style={{position: 'absolute', left: 0, bottom: 0, width: '100%'}}>\n        <div>{state.ticker.day} / {MONTHS[state.ticker.month]} / {state.ticker.year}</div>\n        <div>Hour: {state.ticker.hour}:00</div>\n        <div>Time of The Day: {state.ticker.currentStage}</div>\n        <Button onClick={() => {dispatch('switchPause')}}>{state.isPaused ? 'Resume' : 'Pause'}</Button>\n        <br />\n        <Button onClick={() => {dispatch({type: 'changeStageSpeed', payload: 10})}}>-</Button>\n        <span> Speed: {state.stageSpeed} </span>\n        <Button onClick={() => {dispatch({type: 'changeStageSpeed', payload: -10})}}>+</Button>\n        <Progress percent={state.stageProgress} showInfo={false} size=\"small\" />\n      </div>\n    </>\n  )\n}\n\nfunction renderContent(dispatch, state) {\n  switch(state.selectedCity) {\n    case 'City': \n      return <City dispatch={dispatch} state={state} />\n\n    default:\n      return \"No city to render\";\n  }\n}","import React, { useState, useEffect, useRef } from 'react';\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}","import World from './components/world';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <World />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import './mvp.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}