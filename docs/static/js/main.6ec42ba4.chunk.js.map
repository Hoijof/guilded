{"version":3,"sources":["redux/selectors.js","utils/ticker/index.js","redux/reducer.js","components/city/city-menu.js","components/city/city-overview.js","components/guild/menu.js","components/guild/stats.js","components/guild/overview.js","utils/renderStats.js","utils/styles.js","components/guild/members/index.js","components/guild/index.js","components/market/index.js","components/tavern/index.js","components/city/index.js","utils/random.js","utils/createMember.js","utils/getRandomName.js","components/world.js","utils/consts.js","utils/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["getTicker","state","ticker","advanceStage","currentStage","TimeOfTheDay","NIGHT","callADay","MORNING","AFTERNOON","EVENING","getNextTime","day","computeDayEvents","initialize","todayEvents","activeEvents","stats","totalEvents","reducer","action","members","cb","computedAction","type","includes","console","log","selectedItem","payload","stageProgress","stageSpeed","isPaused","guild","gold","member","id","map","newMember","computedStats","level","tavern","recruits","filter","recruit","city","cityMenu","dispatch","onSelect","key","theme","mode","defaultSelectedKeys","Item","CityOverview","GuildMenu","GuildStats","data","name","value","length","orientation","size","bordered","dataSource","renderItem","item","Overview","onClick","getStatColor","stat","computedStat","renderStats","Object","keys","statName","Text","sumStats","reduce","acc","health","renderData","cardStyle","width","float","margin","Typography","Panel","Collapse","Members","style","title","extra","height","background","color","direction","fontSize","cursor","exp","task","ghost","marginLeft","header","Header","Layout","Content","renderContent","Guild","padding","overflow","Market","Title","Tavern","cost","canHire","disabled","notify","info","message","Sider","City","position","left","getRandomInt","min","max","Math","round","random","getRandomColor","floor","toString","getRandomType","getRandomStats","strength","willpower","endurance","agility","createMember","missions","daysInGuild","items","World","notification","useNotification","api","contextHolder","useReducer","selectedCity","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","bottom","percent","showInfo","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAO,SAASA,EAAUC,GACxB,OAAOA,EAAMC,OCmBf,SAASC,EAAaF,GACpB,IAAMC,EAASF,EAAUC,GAEzB,GAAIC,EAAOE,eAAiBC,EAAaC,MACvC,OAAOC,EAASN,GAGlBC,EAAOE,aA8BT,SAAqBA,GACnB,OAAOA,GACL,KAAKC,EAAaG,QAChB,OAAOH,EAAaI,UACtB,KAAKJ,EAAaI,UAChB,OAAOJ,EAAaK,QACtB,KAAKL,EAAaK,QAChB,OAAOL,EAAaC,OArCFK,CAAYT,EAAOE,cAG3C,SAASG,EAASN,GAChB,IAAMC,EAASF,EAAUC,GAEzBC,EAAOE,aAAeC,EAAaG,QACnCN,EAAOU,MAGT,SAASC,EAAiBZ,GAAQ,IAAD,EAC/B,OAAO,EAAP,iBACGI,EAAaG,QAAU,IAD1B,cAEGH,EAAaI,UAAY,IAF5B,cAGGJ,EAAaK,QAAU,IAH1B,cAIGL,EAAaC,MAAQ,IAJxB,EAQK,IAAMD,EAAe,CAC1BG,QAAS,UACTC,UAAW,YACXC,QAAS,UACTJ,MAAO,SAGM,GACbQ,WAlDF,WAaE,MAZS,CACPV,aAAcC,EAAaG,QAC3BI,IAAK,EACLG,YAAaF,EAAiB,IAC9BG,aAAc,GACdC,MAAO,CACLC,YAAa,GAEfX,WACAJ,kB,qBCbW,SAASgB,EAAQlB,EAAOmB,GACrC,IA2GoBC,EAASC,EA3GvBC,EAAmC,kBAAXH,EAAsB,CAAEI,KAAMJ,GAAUA,EAItE,OAFK,CAAC,wBAAyB,sBAAsBK,SAASF,EAAeC,OAC7EE,QAAQC,IAAIJ,GACJA,EAAeC,MACnB,IAAK,qBACD,OAAO,2BACFvB,GADL,IAEE2B,aAAcL,EAAeM,UAEnC,IAAK,wBACD,OAAO,2BACF5B,GADL,IAEE6B,cAAe7B,EAAM6B,cAAgB7B,EAAM8B,aAEjD,IAAK,qBACD,OAAO,2BACF9B,GADL,IAEE6B,cAAe,IAErB,IAAK,cACD,OAAO,2BACF7B,GADL,IAEE+B,UAAW/B,EAAM+B,WAEvB,IAAK,mBACH,OAAO,2BACF/B,GADL,IAEE8B,WAAY9B,EAAM8B,WAAaR,EAAeM,UAMtD,OAAQN,EAAeC,MACrB,IAAK,0BACH,OAAO,2BACFvB,GADL,IAEEgC,MAAM,2BACDhC,EAAMgC,OADN,IAEHL,aAAcL,EAAeM,YAGnC,IAAK,cACH,OAAO,2BACF5B,GADL,IAEEgC,MAAM,2BACDhC,EAAMgC,OADN,IAEHhB,MAAM,2BACDhB,EAAMgC,MAAMhB,OADZ,IAEHiB,KAAM,SAId,IAAK,kBACH,OAAO,2BACFjC,GADL,IAEEgC,MAAM,2BACDhC,EAAMgC,OADN,IAEHhB,MAAM,2BACDhB,EAAMgC,MAAMhB,OADZ,IAEHI,SA8CUA,EA9CYpB,EAAMgC,MAAMhB,MAAMI,QA8CrBC,EA9C8B,SAACa,GAC5CA,EAAOC,KAAOb,EAAeM,QAAQO,KACvCD,EAAOD,MAAQ,IA6CtBb,EAAQgB,KAAI,SAACF,GAClB,IAAMG,EAAS,2BACVH,GADU,IAEblB,MAAM,eAAKkB,EAAOlB,OAClBsB,cAAc,eAAKJ,EAAOI,iBAK5B,OAFAjB,EAAGgB,GAEIA,MAnDCJ,KAAMjC,EAAMgC,MAAMhB,MAAMiB,KAAO,QAIvC,IAAK,kBACH,OAAO,2BACFjC,GADL,IAEEgC,MAAM,2BACDhC,EAAMgC,OADN,IAEHhB,MAAM,2BACDhB,EAAMgC,MAAMhB,OADZ,IAEHI,QAAQ,GAAD,mBAAMpB,EAAMgC,MAAMhB,MAAMI,SAAxB,CAAiCE,EAAeM,UACvDK,KAAMjC,EAAMgC,MAAMhB,MAAMiB,KAAuC,EAA/BX,EAAeM,QAAQW,UAG3DC,OAAO,2BACFxC,EAAMwC,QADL,IAEJC,SAAUzC,EAAMwC,OAAOC,SAASC,QAAO,SAACC,GAAD,OAAaA,EAAQR,KAAOb,EAAeM,QAAQO,UAOlG,OAAQb,EAAeC,MACrB,IAAK,yBACH,OAAO,2BACFvB,GADL,IAEE4C,KAAK,2BACA5C,EAAM4C,MADP,IAEFjB,aAAcL,EAAeM,YAOrC,OADAH,QAAQC,IAAI,qBACL1B,E,sBCvGM,SAAS6C,EAAT,GAA+B,IAAZC,EAAW,EAAXA,SAQhC,OACA,eAAC,IAAD,CAAMC,SARN,YAAkC,IAARC,EAAO,EAAPA,IACxBF,EAAS,CACPvB,KAAM,yBACNK,QAASoB,KAKmBC,MAAM,QAAQC,KAAK,SAASC,oBAAqB,CAAC,YAAlF,UACE,cAAC,IAAKC,KAAN,sBAAe,YACf,cAAC,IAAKA,KAAN,mBAAe,SACf,cAAC,IAAKA,KAAN,oBAAe,UACf,cAAC,IAAKA,KAAN,oBAAe,aCfJ,SAASC,EAAT,GAAyC,EAAlBP,SAAkB,EAAR9C,MAC9C,MAAO,WCCM,SAASsD,EAAT,GAAgC,IAAZR,EAAW,EAAXA,SAQjC,OACA,eAAC,IAAD,CAAMC,SARN,YAAkC,IAARC,EAAO,EAAPA,IACxBF,EAAS,CACPvB,KAAM,0BACNK,QAASoB,KAKmBC,MAAM,QAAQC,KAAK,aAAaC,oBAAqB,CAAC,YAAtF,UACE,cAAC,IAAKC,KAAN,sBAAe,YACf,cAAC,IAAKA,KAAN,qBAAe,c,sBCXJ,SAASG,EAAT,GAA4C,IACjDC,EAAO,CACT,CAACC,KAAM,OAAQC,MAFmC,EAAtBD,MAG5B,CAACA,KAAM,OAAQC,MAHmC,EAAhBzB,MAIlC,CAACwB,KAAM,UAAWC,MAJgC,EAAVtC,QAIPuC,SAGrC,OACI,qCACI,cAAC,IAAD,CAASC,YAAY,OAArB,mBACA,cAAC,IAAD,CACIC,KAAK,QACLC,UAAQ,EACRC,WAAYP,EACZQ,WAAY,SAAAC,GAAI,OACZ,eAAC,IAAKb,KAAN,WACKa,EAAKR,KADV,KACkBQ,EAAKP,eCb5B,SAASQ,EAAT,GAAsC,IAAnBpB,EAAkB,EAAlBA,SAAU9C,EAAQ,EAARA,MAAQ,EAC1BA,EAAMgC,MAAMhB,MAA7BiB,EAD2C,EAC3CA,KAAMb,EADqC,EACrCA,QAEb,OACE,qCACE,cAAC,EAAD,eAAWpB,EAAMgC,MAAMhB,QACvB,uBACU,IAATiB,GAAiC,IAAnBb,EAAQuC,OACrB,cAAC,IAAD,CACEpC,KAAK,UACL4C,QAAS,WACPrB,EAAS,CAAEvB,KAAM,iBAHrB,kDAQE,Q,wCCnBH,SAAS6C,EAAaC,EAAMC,GACjC,OAAIA,EAAeD,EACV,UAGLC,EAAeD,EACV,SAGF,UAGM,SAASE,EAAYrC,GAClC,OAAOsC,OAAOC,KAAKvC,EAAOlB,OAAOoB,KAAI,SAACsC,GACpC,IAAML,EAAOnC,EAAOlB,MAAM0D,GACpBJ,EAAepC,EAAOI,cAAcoC,GAE1C,OAAO,eAAC,IAAWC,KAAZ,CAAgCpD,KAAM6C,EAAaC,EAAMC,GAAzD,UAAyEI,EAAzE,KAAqFJ,IAA/DI,MAI1B,SAASE,EAAS1C,GACvB,OAAOsC,OAAOC,KAAKvC,EAAOlB,OAAO6D,QAAO,SAACC,EAAKJ,GAG5C,OAAOI,EAFM5C,EAAOlB,MAAM0D,KAGzB,GAAKxC,EAAOlB,MAAM+D,OAGhB,SAASC,EAAW9C,GACzB,OAAOsC,OAAOC,KAAKvC,EAAOsB,MAAMpB,KAAI,SAACsC,GACnC,IAAMlB,EAAOtB,EAAOsB,KAAKkB,GAEzB,OAAO,eAAC,IAAWC,KAAZ,WAAkCD,EAAlC,KAA8ClB,IAAxBkB,MCnC1B,IAAMO,EAAY,CACvBC,MAAO,IACPC,MAAO,OACPC,OAAQ,GCKFT,EAASU,IAATV,KACAW,EAAUC,IAAVD,MAEO,SAASE,EAAT,GAAqC,IAAnB1C,EAAkB,EAAlBA,SAAU9C,EAAQ,EAARA,MAEzC,OACE,mCACGA,EAAMgC,MAAMhB,MAAMI,QAAQgB,KAAI,SAACF,EAAQc,GACtC,OACE,cAAC,IAAD,CAAgByC,MAAOR,EAAWS,MAAOxD,EAAOuB,KAAMkC,MAAO,qBAAKF,MAAO,CAACP,MAAO,GAAIU,OAAQ,GAAIC,WAAY3D,EAAO4D,SAApH,SACE,eAAC,IAAD,CAAOL,MAAO,CAACP,MAAO,QAASa,UAAU,WAAzC,UACE,eAACpB,EAAD,oBAAazC,EAAOD,KAApB,IAA0B,cAAC0C,EAAD,CAAMc,MAAO,CAACO,SAAU,GAAIC,OAAQ,WAAY9B,QAAS,WAAOrB,EAAS,CAACvB,KAAM,kBAAmBK,QAASM,KAA5G,kBAC1B,eAACyC,EAAD,qBAAczC,EAAOK,MAArB,KAA8BL,EAAOgE,IAArC,MAA4D,EAAfhE,EAAOK,MAApD,KAAiEL,EAAOgE,IAAqB,EAAfhE,EAAOK,MAAY,SAAM,QACvG,eAACoC,EAAD,oBAAazC,EAAOX,QACpB,eAACoD,EAAD,oBAAazC,EAAOiE,KAAOjE,EAAOiE,KAAO,UACzC,cAAC,IAAD,CAAUC,OAAK,EAACX,MAAO,CAACY,YAAa,IAArC,SACE,cAACf,EAAD,CAAOgB,OAAM,iBAAY1B,EAAS1C,GAArB,KAAb,SACE,cAAC,IAAD,CAAOuD,MAAO,CAACP,MAAO,QAASa,UAAU,WAAzC,SACGxB,EAAYrC,MAFiC,OAMpD,cAAC,IAAD,CAAUkE,OAAK,EAACX,MAAO,CAACY,YAAa,IAArC,SACE,cAACf,EAAD,CAAOgB,OAAO,OAAd,SACE,cAAC,IAAD,CAAOb,MAAO,CAACP,MAAO,QAASa,UAAU,WAAzC,SACGf,EAAW9C,MAFS,WAdpBc,Q,ICXbuD,EAAoBC,IAApBD,OAAQE,EAAYD,IAAZC,QAEhB,SAASC,EAAc5D,EAAU9C,GAC/B,OAAOA,EAAMgC,MAAML,cACjB,IAAK,WACH,OAAO,cAACuC,EAAD,CAAUpB,SAAUA,EAAU9C,MAAOA,IAC9C,IAAK,UACH,OAAO,cAACwF,EAAD,CAAS1C,SAAUA,EAAU9C,MAAOA,IAC7C,IAAK,SACH,OAAO,cAACkE,EAAD,CAAUpB,SAAUA,EAAU9C,MAAOA,IAE9C,QACE,MAAO,SAIE,SAAS2G,EAAT,GAAmC,IAAnB7D,EAAkB,EAAlBA,SAAU9C,EAAQ,EAARA,MAEvC,OACE,eAAC,IAAD,CAAQyF,MAAO,CAAEI,WAAY,SAA7B,UACE,cAACU,EAAD,CACEtD,MAAM,QACNwC,MAAO,CACLI,WAAY,QACZe,QAAS,GAJb,SAOE,cAACtD,EAAD,CAAWR,SAAUA,MAEvB,cAAC2D,EAAD,CAAShB,MAAO,CAAEI,WAAY,QAASe,QAAS,GAAIxB,OAAQ,cAAeyB,SAAU,WAArF,SACKH,EAAc5D,EAAU9C,QCpCpB,SAAS8G,IACtB,MAAO,O,ICIDC,EAAgB1B,IAAhB0B,MAAOpC,EAASU,IAATV,KACPW,EAAUC,IAAVD,MAEO,SAAS0B,EAAT,GAAsC,IAApBlE,EAAmB,EAAnBA,SAAU9C,EAAS,EAATA,MAEzC,OACE,qCACE,cAAC,EAAD,yDACA,cAAC+G,EAAD,CAAOxE,MAAO,EAAd,gCAECvC,EAAMwC,OAAOC,SAASL,KAAI,SAACF,EAAQc,GAClC,IAAMiE,EAAsB,EAAf/E,EAAOK,MACd2E,EAAUlH,EAAMgC,MAAMhB,MAAMiB,MAAQgF,EAE1C,OACE,cAAC,IAAD,CAAgBxB,MAAOR,EAAWS,MAAOxD,EAAOuB,KAAMkC,MAAO,qBAAKF,MAAO,CAACP,MAAO,GAAIU,OAAQ,GAAIC,WAAY3D,EAAO4D,SAApH,SACE,eAAC,IAAD,CAAOL,MAAO,CAACP,MAAO,QAASa,UAAU,WAAzC,UACE,eAAC,EAAD,qBAAc7D,EAAOK,MAArB,KAA8BL,EAAOgE,IAArC,MAA4D,EAAfhE,EAAOK,MAApD,KAAiEL,EAAOgE,IAAqB,EAAfhE,EAAOK,MAAY,SAAM,QACvG,eAAC,EAAD,oBAAaL,EAAOX,QACpB,cAAC,IAAD,CAAU6E,OAAK,EAACX,MAAO,CAACY,YAAa,IAArC,SACE,cAAC,EAAD,CAAOC,OAAM,iBAAY1B,EAAS1C,GAArB,KAAb,SACE,cAAC,IAAD,CAAOuD,MAAO,CAACP,MAAO,QAASa,UAAU,WAAzC,SACGxB,EAAYrC,MAFiC,OAMpD,eAAC,IAAD,CAAQX,KAAK,UAAU4F,UAAUD,EAAwB/C,QAAS,WAChErB,EAAS,CAACvB,KAAM,kBAAmBK,QAASM,IAE5ClC,EAAMoH,OAAOC,KAAK,CAACC,QAAQ,kBAAD,OAAoBpF,EAAOuB,KAA3B,gBAAuCwD,EAAvC,kBAH5B,sBAKYA,EALZ,qBAXOjE,S,ICZbuE,EAAmBf,IAAnBe,MAAOd,EAAYD,IAAZC,QAGA,SAASe,GAAT,GAAkC,IAAnB1E,EAAkB,EAAlBA,SAAU9C,EAAQ,EAARA,MACzBA,EAAM4C,KAEnB,OACE,eAAC,IAAD,WACE,cAAC2E,EAAD,CACEtE,MAAM,QACNwC,MAAO,CACLoB,SAAU,OACVjB,OAAQ,QACR6B,SAAU,QACVC,KAAM,GANV,SASE,cAAC,EAAD,CAAU5E,SAAUA,MAEtB,cAAC,IAAD,CAAQ2C,MAAO,CAAEY,WAAY,IAAKT,OAAQ,SAA1C,SACE,cAAC,EAAD,CAASH,MAAO,CAAEI,WAAY,QAASe,QAAS,GAAIxB,OAAQ,cAAeyB,SAAU,WAArF,SACKH,GAAc5D,EAAU9C,UAQrC,SAAS0G,GAAc5D,EAAU9C,GAC/B,OAAOA,EAAM4C,KAAKjB,cAChB,IAAK,WACH,OAAO,cAAC,EAAD,CAAUmB,SAAUA,EAAU9C,MAAOA,IAC9C,IAAK,QACH,OAAO,cAAC2G,EAAD,CAAO7D,SAAUA,EAAU9C,MAAOA,IAC3C,IAAK,SACH,OAAO,cAAC8G,EAAD,CAAQhE,SAAUA,EAAU9C,MAAOA,IAC5C,IAAK,SACH,OAAO,cAACgH,EAAD,CAAQlE,SAAUA,EAAU9C,MAAOA,IAE5C,QACE,MAAO,cC7CN,SAAS2H,GAAaC,EAAKC,GAChC,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,GAG3C,SAASK,KACd,MAAM,IAAN,OAAWH,KAAKI,MAAoB,SAAdJ,KAAKE,UAAmBG,SAAS,KCNzD,IAAIhG,GAAK,EAET,SAASiG,KACP,OAAON,KAAKE,SAAW,GAAM,UAAY,OAG3C,SAASK,KACP,MAAO,CACLtD,OAAQ4C,GAAa,EAAG,IACxBW,SAAUX,GAAa,EAAG,GAC1BY,UAAWZ,GAAa,EAAG,GAC3Ba,UAAWb,GAAa,EAAG,GAC3Bc,QAASd,GAAa,EAAG,IAWd,SAASe,KAA2I,IAA9HjF,EAA6H,uDCzBzJ,ODyBoDqC,EAAqG,uDAA7FmC,KAAkB1G,EAA2E,uDAApE6G,KAAiBpH,EAAmD,uDAA3CqH,KAAkB7E,EAAyB,uDANzJ,CACLmF,SAAU,EACVC,YAAa,GAKf,MAAO,CACLzG,GAAIA,KACJsB,OACAqC,QACA+C,MAAO,GACP5G,KAAM,EACNiE,IAAK,EACL3D,MAAO,EACPhB,OACA4E,KAAM,KACNnF,QACAsB,cAAetB,EACfwC,QE3BW,SAASsF,KAAS,IAAD,EACDC,IAAaC,kBADZ,mBACvBC,EADuB,KAClBC,EADkB,OAGJC,qBAAWjI,EAAS,CAC5Cc,MAAO,CACLhB,MAAO,CACLyC,KAAM,SACNxB,KAAM,EACNb,QAAS,CAACsH,GAAa,SAAU,WACjCG,MAAO,IAETlH,aAAc,YAEhBiB,KAAM,CACJjB,aAAc,YAEhBa,OAAQ,CACNC,SAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAIL,KAAI,kBAAMsG,SAE7CU,aAAc,OACdzI,IAAK,EACLmB,WCjCuB,EDkCvBD,cAAe,EACfE,UAAU,EACVqF,OAAQ6B,EACRhJ,OAAQA,EAAOY,eAzBa,mBAGvBb,EAHuB,KAGhB8C,EAHgB,KAyC9B,OEnDa,SAAqBuG,EAAUC,GAC5C,IAAMC,EAAgBC,mBAGtBC,qBAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,IAGJI,qBAAU,WAIR,GAAc,OAAVH,EAAgB,CAClB,IAAInH,EAAKwH,aAJX,WACEJ,EAAcG,YAGaJ,GAC3B,OAAO,kBAAMM,cAAczH,OAE5B,CAACmH,IFqBJO,EAAY,WACV,IAAI7J,EAAM+B,SAIV,OAAI/B,EAAM6B,cAAgB,IACjBiB,EAAS,CAAEvB,KAAM,2BAG1BvB,EAAMC,OAAOC,aAAaF,GACnB8C,EAAS,CAAEvB,KAAM,0BACvB,KAGD,qCACG2H,EACAxC,GAAc5D,EAAU9C,GACzB,sBAAKyF,MAAO,CAACgC,SAAU,WAAYC,KAAM,EAAGoC,OAAQ,EAAG5E,MAAO,QAA9D,UACE,yCAAYlF,EAAMC,OAAOU,OACzB,oDAAuBX,EAAMC,OAAOE,gBACpC,cAAC,IAAD,CAAQgE,QAAS,WAAOrB,EAAS,gBAAjC,SAAmD9C,EAAM+B,SAAW,SAAW,UAC/E,uBACA,cAAC,IAAD,CAAQoC,QAAS,WAAOrB,EAAS,CAACvB,KAAM,mBAAoBK,SAAU,KAAtE,eACA,4CAAe5B,EAAM8B,WAArB,OACA,cAAC,IAAD,CAAQqC,QAAS,WAAOrB,EAAS,CAACvB,KAAM,mBAAoBK,QAAS,KAArE,eACA,cAAC,IAAD,CAAUmI,QAAS/J,EAAM6B,cAAemI,UAAU,EAAOnG,KAAK,gBAMtE,SAAS6C,GAAc5D,EAAU9C,GAC/B,OAAOA,EAAMoJ,cACX,IAAK,OACH,OAAO,cAAC5B,GAAD,CAAM1E,SAAUA,EAAU9C,MAAOA,IAE1C,QACE,MAAO,qBGnEEiK,OARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAACpB,GAAD,OCOSqB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.6ec42ba4.chunk.js","sourcesContent":["export function getTicker(state) {\n  return state.ticker;\n}","import { getTicker } from '../../redux/selectors';\n\nlet ticker;\n\nfunction initialize() {\n  ticker = {\n    currentStage: TimeOfTheDay.MORNING,\n    day: 1,\n    todayEvents: computeDayEvents({}),\n    activeEvents: [],\n    stats: {\n      totalEvents: 0\n    },\n    callADay,\n    advanceStage,\n  };\n\n  return ticker;\n}\n\nfunction advanceStage(state) {\n  const ticker = getTicker(state);\n\n  if (ticker.currentStage === TimeOfTheDay.NIGHT) {\n    return callADay(state);\n  }\n\n  ticker.currentStage = getNextTime(ticker.currentStage);\n}\n\nfunction callADay(state) {\n  const ticker = getTicker(state);\n\n  ticker.currentStage = TimeOfTheDay.MORNING;\n  ticker.day++;\n}\n\nfunction computeDayEvents(state) {\n  return {\n    [TimeOfTheDay.MORNING]: [],\n    [TimeOfTheDay.AFTERNOON]: [],\n    [TimeOfTheDay.EVENING]: [],\n    [TimeOfTheDay.NIGHT]: [],\n  }\n}\n\nexport const TimeOfTheDay = {\n  MORNING: 'Morning',\n  AFTERNOON: 'Afternoon',\n  EVENING: 'Evening',\n  NIGHT: 'Night'\n};\n\nexport default {\n  initialize\n};\n\nfunction getNextTime(currentStage) {\n  switch(currentStage) {\n    case TimeOfTheDay.MORNING:\n      return TimeOfTheDay.AFTERNOON;\n    case TimeOfTheDay.AFTERNOON:\n      return TimeOfTheDay.EVENING;\n    case TimeOfTheDay.EVENING:\n      return TimeOfTheDay.NIGHT;\n  }\n}","\nexport default function reducer(state, action) {\n  const computedAction = typeof action === 'string' ? { type: action} : action;\n\n  if (!['increaseStageProgress', 'resetStageProgress'].includes(computedAction.type))\n  console.log(computedAction);\n  switch (computedAction.type) {\n      case 'changeSelectedMenu':\n          return {\n            ...state,\n            selectedItem: computedAction.payload\n          }\n      case 'increaseStageProgress': \n          return {\n            ...state,\n            stageProgress: state.stageProgress + state.stageSpeed\n          };\n      case 'resetStageProgress': \n          return {\n            ...state,\n            stageProgress: 0\n          };\n      case 'switchPause':\n          return {\n            ...state,\n            isPaused: !state.isPaused\n          }\n      case 'changeStageSpeed':\n        return {\n          ...state,\n          stageSpeed: state.stageSpeed + computedAction.payload\n        }\n      default:\n  }\n\n  // Guild\n  switch (computedAction.type) {\n    case 'changeSelectedGuildMenu': \n      return {\n        ...state,\n        guild: {\n          ...state.guild,\n          selectedItem: computedAction.payload\n        }\n      }\n    case 'askFounding':\n      return {\n        ...state,\n        guild: {\n          ...state.guild,\n          stats: {\n            ...state.guild.stats,\n            gold: 25\n          }\n        }\n      };\n    case 'addGoldToMember':\n      return {\n        ...state,\n        guild: {\n          ...state.guild,\n          stats: {\n            ...state.guild.stats,\n            members: cloneMembers(state.guild.stats.members, (member) => {\n              if (member.id === computedAction.payload.id) {\n                member.gold += 5;\n              }\n            }),\n            gold: state.guild.stats.gold - 5\n          }\n        }\n      }\n    case 'hireGuildMember':       \n      return {\n        ...state,\n        guild: {\n          ...state.guild,\n          stats: {\n            ...state.guild.stats,\n            members: [...state.guild.stats.members, computedAction.payload],\n            gold: state.guild.stats.gold - (computedAction.payload.level * 5)\n          }\n        },\n        tavern: {\n          ...state.tavern,\n          recruits: state.tavern.recruits.filter((recruit) => recruit.id !== computedAction.payload.id)\n        }\n      }\n    default:\n  }\n\n  // City\n  switch (computedAction.type) {\n    case 'changeSelectedCityMenu': \n      return {\n        ...state,\n        city: {\n          ...state.city,\n          selectedItem: computedAction.payload\n        }\n      }\n    default:\n  }\n\n  console.log(\"returning Default\");\n  return state;\n}\n\n\nfunction cloneMembers(members, cb) {\n  return members.map((member) => {\n    const newMember = {\n      ...member,\n      stats: {...member.stats},\n      computedStats: {...member.computedStats}\n    };\n\n    cb(newMember);\n\n    return newMember;\n  })\n}","import { Menu } from 'antd';\n\nexport default function cityMenu({dispatch}) {\n  function changeMenuItem({ key }) {\n    dispatch({\n      type: 'changeSelectedCityMenu',\n      payload: key\n    });\n  }\n  \n  return (\n  <Menu onSelect={changeMenuItem} theme=\"light\" mode=\"inline\" defaultSelectedKeys={[\"Overview\"]}>\n    <Menu.Item key=\"Overview\">Overview</Menu.Item>\n    <Menu.Item key=\"Guild\">Guild</Menu.Item>\n    <Menu.Item key=\"Market\">Market</Menu.Item>\n    <Menu.Item key=\"Tavern\">Tavern</Menu.Item>\n  </Menu>\n  );\n}\n\n","export default function CityOverview({dispatch, state}) {\n  return \"overview\";\n}\n","import { Menu } from 'antd';\n\nexport default function GuildMenu({dispatch}) {\n  function changeMenuItem({ key }) {\n    dispatch({\n      type: 'changeSelectedGuildMenu',\n      payload: key\n    });\n  }\n  \n  return (\n  <Menu onSelect={changeMenuItem} theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={[\"Overview\"]} >\n    <Menu.Item key=\"Overview\">Overview</Menu.Item>\n    <Menu.Item key=\"Members\">Members</Menu.Item>\n  </Menu>\n  );\n}\n\n","import { List, Typography, Divider } from 'antd';\n\nexport default function GuildStats({name, gold, members}) {\n    const data = [\n        {name: \"name\", value: name},\n        {name: 'gold', value: gold},\n        {name: 'members', value: members.length}\n    ];\n    \n    return (\n        <>\n            <Divider orientation=\"left\">Stats</Divider>\n            <List\n                size=\"small\"\n                bordered\n                dataSource={data}\n                renderItem={item => (\n                    <List.Item>\n                        {item.name}: {item.value}\n                    </List.Item>\n                )}\n            />\n        </>\n    )\n}","import { Button } from 'antd';\n\nimport Stats from \"./stats\";\n\n\nexport default function Overview({dispatch, state}) {\n  const {gold, members} = state.guild.stats;\n\n  return (\n    <>\n      <Stats {...state.guild.stats} />\n      <br />\n      {gold === 0 && members.length === 1 ? (\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            dispatch({ type: \"askFounding\" });\n          }}\n        >\n          Ask for founding to the city council\n        </Button>\n      ) : null}\n    </>\n  );\n}\n","import { Typography } from 'antd';\n\nexport function getStatColor(stat, computedStat) {\n  if (computedStat > stat) {\n    return 'success';\n  }\n\n  if (computedStat < stat) {\n    return 'danger';\n  }\n\n  return 'default';\n}\n\nexport default function renderStats(member) {\n  return Object.keys(member.stats).map((statName) => {\n    const stat = member.stats[statName];\n    const computedStat = member.computedStats[statName];\n\n    return <Typography.Text key={statName} type={getStatColor(stat, computedStat)}>{statName}: {computedStat}</Typography.Text>\n  });\n}\n\nexport function sumStats(member) {\n  return Object.keys(member.stats).reduce((acc, statName) => {\n    const stat = member.stats[statName];\n\n    return acc + stat;\n  }, 0) - member.stats.health;\n}\n\nexport function renderData(member) {\n  return Object.keys(member.data).map((statName) => {\n    const data = member.data[statName];\n\n    return <Typography.Text key={statName} >{statName}: {data}</Typography.Text>\n  });\n}","export const cardStyle = {\n  width: 200,\n  float: 'left',\n  margin: 5\n};","\nimport { Card, Typography, Space, Collapse } from 'antd';\n\n\nimport renderStats, {sumStats, renderData} from '../../../utils/renderStats';\nimport { cardStyle } from '../../../utils/styles';\n\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Members({dispatch, state}) {\n\n  return (\n    <>\n      {state.guild.stats.members.map((member, key) => {\n        return (\n          <Card key={key} style={cardStyle} title={member.name} extra={<div style={{width: 15, height: 15, background: member.color}}></div>}>\n            <Space style={{width: '100%'}} direction=\"vertical\">\n              <Text>Gold: {member.gold} <Text style={{fontSize: 18, cursor: 'pointer'}} onClick={() => {dispatch({type: \"addGoldToMember\", payload: member})}}>+</Text></Text>\n              <Text>Level: {member.level} ({member.exp} / {member.level * 2}) {member.exp > member.level * 2 ? '▲' : null}</Text>\n              <Text>Type: {member.type}</Text>\n              <Text>Task: {member.task ? member.task : \"None\"}</Text>\n              <Collapse ghost style={{marginLeft: -15}}>\n                <Panel header={`Stats (${sumStats(member)})`} key=\"1\">\n                  <Space style={{width: '100%'}} direction=\"vertical\">\n                    {renderStats(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n              <Collapse ghost style={{marginLeft: -15}}>\n                <Panel header=\"Data\" key=\"2\">\n                  <Space style={{width: '100%'}} direction=\"vertical\">\n                    {renderData(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n            </Space>\n          </Card>);\n      })}\n    </>\n  )\n}","import { Layout } from \"antd\";\n\nimport GuildMenu from './menu';\nimport Overview from './overview';\nimport Members from './members';\n\nconst { Header, Content } = Layout;\n\nfunction renderContent(dispatch, state) {\n  switch(state.guild.selectedItem) {\n    case 'Overview': \n      return <Overview dispatch={dispatch} state={state} />\n    case 'Members':\n      return <Members dispatch={dispatch} state={state} />\n    case 'Market': \n      return <Overview dispatch={dispatch} state={state} />\n\n    default:\n      return \"error\";\n  }\n}\n\nexport default function Guild({dispatch, state}) {\n  \n  return (\n    <Layout style={{ background: 'white'}}>\n      <Header\n        theme=\"light\"\n        style={{\n          background: 'white',\n          padding: 0\n        }}\n      >\n        <GuildMenu dispatch={dispatch} />\n      </Header>\n      <Content style={{ background: 'white', padding: 10, margin: \"24px 16px 0\", overflow: \"initial\"}}>\n          {renderContent(dispatch, state)}\n      </Content>\n    </Layout>\n  );\n}\n","export default function Market() {\n  return \"hola\"\n}","import { Card, Typography, Space, Collapse, Button } from 'antd';\n\nimport renderStats, { sumStats } from '../../utils/renderStats';\nimport { cardStyle } from '../../utils/styles';\n\nconst { Title, Text } = Typography;\nconst { Panel } = Collapse;\n\nexport default function Tavern({ dispatch, state }) {  \n\n  return (\n    <>\n      <Text>Welcome to the Tavern, please take a seat!</Text>\n      <Title level={4}>Available Recruits</Title>\n      \n      {state.tavern.recruits.map((member, key) => {\n        const cost = member.level * 5;\n        const canHire = state.guild.stats.gold >= cost;\n\n        return (\n          <Card key={key} style={cardStyle} title={member.name} extra={<div style={{width: 15, height: 15, background: member.color}}></div>}>\n            <Space style={{width: '100%'}} direction=\"vertical\">\n              <Text>Level: {member.level} ({member.exp} / {member.level * 2}) {member.exp > member.level * 2 ? '▲' : null}</Text>\n              <Text>Type: {member.type}</Text>\n              <Collapse ghost style={{marginLeft: -15}}>\n                <Panel header={`Stats (${sumStats(member)})`} key=\"1\">\n                  <Space style={{width: '100%'}} direction=\"vertical\">\n                    {renderStats(member)}\n                  </Space>\n                </Panel>\n              </Collapse>\n              <Button type=\"primary\" disabled={canHire ? false : true} onClick={() => {\n                dispatch({type: 'hireGuildMember', payload: member})\n              \n                state.notify.info({message: `You just hired ${member.name} for ${cost} gold coins`});\n              }\n              }>Hire for {cost} gold coins</Button>\n            </Space>\n          </Card>);\n      })}\n    </>\n  );\n}","import { Layout } from \"antd\";\n\nimport CityMenu from './city-menu';\nimport Overview from './city-overview';\nimport Guild from '../guild';\nimport Market from '../market';\nimport Tavern from '../tavern';\n\nconst { Sider, Content } = Layout;\n\n\nexport default function City({dispatch, state}) {\n  const city = state.city;\n\n  return (\n    <Layout>\n      <Sider\n        theme=\"light\"\n        style={{\n          overflow: \"auto\",\n          height: \"100vh\",\n          position: \"fixed\",\n          left: 0,\n        }}\n      >\n        <CityMenu dispatch={dispatch} />\n      </Sider>\n      <Layout style={{ marginLeft: 200, height: \"100vh\" }}>\n        <Content style={{ background: 'white', padding: 10, margin: \"24px 16px 0\", overflow: \"initial\"}}>\n            {renderContent(dispatch, state)}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\n\nfunction renderContent(dispatch, state) {\n  switch(state.city.selectedItem) {\n    case 'Overview': \n      return <Overview dispatch={dispatch} state={state} />\n    case 'Guild':\n      return <Guild dispatch={dispatch} state={state} />\n    case 'Market': \n      return <Market dispatch={dispatch} state={state} />\n    case 'Tavern': \n      return <Tavern dispatch={dispatch} state={state} />\n\n    default:\n      return \"No content\";\n  }\n}","export function getRandomNumber(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport function getRandomInt(min, max) {\n  return Math.round(Math.random() * (max - min) + min);\n}\n\nexport function getRandomColor() {\n  return `#${Math.floor(Math.random()*16777215).toString(16)}`;\n}","import getRandomName from './getRandomName';\nimport {getRandomInt, getRandomColor} from './random';\n\nlet id = 0;\n\nfunction getRandomType() {\n  return Math.random() > 0.5 ? 'warrior' : 'mage';\n}\n\nfunction getRandomStats() {\n  return {\n    health: getRandomInt(8, 10),\n    strength: getRandomInt(1, 3),\n    willpower: getRandomInt(1, 3),\n    endurance: getRandomInt(1, 3),\n    agility: getRandomInt(1, 3)\n  }\n}\n\nfunction getInitialData() {\n  return {\n    missions: 0,\n    daysInGuild: 0,\n  }\n}\n\nexport default function createMember(name = getRandomName(), color = getRandomColor(), type = getRandomType(), stats = getRandomStats(), data = getInitialData()) {\n  return {\n    id: id++,\n    name,\n    color,\n    items: [],\n    gold: 0,\n    exp: 0,\n    level: 1,\n    type,\n    task: null,\n    stats,\n    computedStats: stats,\n    data\n  } \n}\n\n","export default function getRandomName() {\n  return \"name\";\n}","import React, { useReducer } from \"react\";\nimport { notification, Progress, Button } from 'antd';\n\nimport ticker from '../utils/ticker';\nimport useInterval from '../utils/useInterval';\n\nimport reducer from '../redux/reducer';\nimport City from './city';\nimport createMember from '../utils/createMember';\n\nimport { STAGE_SPEED } from '../utils/consts';\n\nexport default function World() {\n  const [api, contextHolder] = notification.useNotification();\n\n  const [state, dispatch] = useReducer(reducer, {\n    guild: {\n      stats: {\n        name: \"Tainor\",\n        gold: 0,\n        members: [createMember(\"Hoijof\", \"indigo\")],\n        items: [],\n      },\n      selectedItem: 'Overview' \n    },\n    city: {\n      selectedItem: 'Overview',\n    },\n    tavern: {\n      recruits: [1,2,3,4,5,6,7,8,9,10].map(() => createMember())\n    },\n    selectedCity: 'City',\n    day: 0,\n    stageSpeed: STAGE_SPEED,\n    stageProgress: 0,\n    isPaused: false,\n    notify: api,\n    ticker: ticker.initialize(),\n  });\n\n  useInterval(() => {\n    if (state.isPaused) {\n      return;\n    }\n\n    if (state.stageProgress < 100) {\n      return dispatch({ type: 'increaseStageProgress'});\n    }\n\n    state.ticker.advanceStage(state);\n    return dispatch({ type: 'resetStageProgress'});\n  }, 100)\n\n  return (\n    <>\n      {contextHolder}\n      {renderContent(dispatch, state)}\n      <div style={{position: 'absolute', left: 0, bottom: 0, width: '100%'}}>\n        <div> Day: {state.ticker.day}</div>\n        <div>Time of The Day: {state.ticker.currentStage}</div>\n        <Button onClick={() => {dispatch('switchPause')}}>{state.isPaused ? 'Resume' : 'Pause'}</Button>\n        <br />\n        <Button onClick={() => {dispatch({type: 'changeStageSpeed', payload: -1})}}>-</Button>\n        <span> Speed: {state.stageSpeed} </span>\n        <Button onClick={() => {dispatch({type: 'changeStageSpeed', payload: 1})}}>+</Button>\n        <Progress percent={state.stageProgress} showInfo={false} size=\"small\" />\n      </div>\n    </>\n  )\n}\n\nfunction renderContent(dispatch, state) {\n  switch(state.selectedCity) {\n    case 'City': \n      return <City dispatch={dispatch} state={state} />\n\n    default:\n      return \"No city to render\";\n  }\n}","export const STAGE_SPEED = 5;","import React, { useState, useEffect, useRef } from 'react';\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}","import World from './components/world';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <World />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import './mvp.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}